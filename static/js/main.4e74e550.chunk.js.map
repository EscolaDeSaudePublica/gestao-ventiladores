{"version":3,"sources":["pages/_layout/Header.jsx","pages/_layout/Footer.jsx","pages/_layout/Layout.jsx","models/acessorio.js","models/serviceOrder.js","models/itensDiagnosticos.js","utils/index.js","pages/SerrviceOrder/DiagnosisItemsTablePagination.jsx","pages/SerrviceOrder/DiagnosisCardServiceOrder.jsx","pages/SerrviceOrder/AccesoriesTablePagination.jsx","pages/SerrviceOrder/ScreeningCardServiceOrder.jsx","pages/SerrviceOrder/ScreeningEquipment.jsx","pages/SerrviceOrder/CalibrationCardServiceOrder.jsx","pages/SerrviceOrder/ServiceOrderCollapseItem.jsx","pages/SerrviceOrder/PercentChip.jsx","pages/SerrviceOrder/ServiceOrderCardNumber.jsx","pages/SerrviceOrder/ServiceOrdersCollapseList.jsx","services/api.js","modelServices/serviceOrderService.js","pages/_common/components/LoadingBar.jsx","models/delivery.js","modelServices/deliveryOrderService.js","pages/SerrviceOrder/index.jsx","pages/_common/alerts/ErrorMessages.jsx","pages/_common/alerts/ErrorAlertText.jsx","pages/Diagnosis/DiagnosisForm/CadastroDiagnostico.jsx","pages/Diagnosis/DiagnosisForm/HeaderFormPage.jsx","pages/_common/forms/ThemeButton.jsx","pages/Diagnosis/DiagnosisForm/CreateNewItem.jsx","pages/_common/components/ChipStyled.jsx","pages/_common/components/TooltipInfo.jsx","pages/_common/forms/ColorIconButton.jsx","pages/_common/components/LabelInput.jsx","pages/Diagnosis/DiagnosisForm/RowTableItem.jsx","pages/Diagnosis/DiagnosisForm/FormModalDescription.jsx","pages/Diagnosis/DiagnosisForm/TableFormRegisteredItems.jsx","pages/Diagnosis/DiagnosisForm/FormRegisteredItems.jsx","pages/Diagnosis/DiagnosisForm/FormDiagnosis.jsx","pages/Diagnosis/DiagnosisForm/index.jsx","pages/_common/SelectableTable/ActionBarLayout.jsx","pages/_common/SelectableTable/HeaderTableLayout.jsx","pages/_common/SelectableTable/BodyTableLayout.jsx","pages/_common/SelectableTable/TableCheckedList.jsx","pages/Screening/IndexScreening.jsx","pages/_common/components/TabPanel.jsx","models/conservationState.js","pages/Screening/ScreeningForm/AccessoryFormRow.jsx","pages/Screening/ScreeningForm/AccessoryFormList.jsx","pages/Screening/ScreeningForm/RelacaoDeMaterial.jsx","models/equipamentos.js","models/equipmentTypes.js","services/cities.js","models/typeInstitute.js","models/typeStateEquipment.js","services/imageResize.js","pages/_common/forms/InputFileImage.jsx","modelServices/photoEquipmentService.js","models/manufacturers.js","pages/_common/forms/RadioControl.jsx","pages/Screening/ScreeningForm/DialogModelsEquipment.jsx","pages/_common/forms/InputRadioDialog.jsx","pages/Screening/ScreeningForm/CadastroEquipamento.jsx","pages/Screening/ScreeningForm/TitleFormScreening.jsx","pages/Screening/ScreeningForm/FormScreening.jsx","pages/_common/components/FullDialog.jsx","modelServices/equipamentoService.js","pages/Screening/ScreeningForm/ScreeningDialogForm.jsx","pages/Screening/ScreeningPage.jsx","pages/Screening/index.jsx","models/purchaseOrder.js","modelServices/purchaseOrderService.js","pages/Demand/DialogTableItems.jsx","pages/Demand/EditDialogPurchaseOrder.jsx","pages/Demand/PurchaseOrderTable.jsx","pages/Demand/NewPurchaseOrderDialog.jsx","pages/Demand/ListItemsServiceOrder.jsx","pages/Demand/DemandPage.jsx","pages/Demand/index.jsx","pages/_common/ActionTable/ActionTableHeaderLayout.jsx","pages/_common/ActionTable/ActionMenuLayout.jsx","pages/_common/ActionTable/ActionButtonLayout.jsx","pages/_common/ActionTable/ActionTableBodyLayout.jsx","pages/_common/ActionTable/ActionTableList.jsx","pages/Diagnosis/DiagnosisFormDialog.jsx","pages/Diagnosis/TableScreeningServiceOrders.jsx","pages/Diagnosis/TableDiagnosisServiceOrder.jsx","pages/Diagnosis/index.jsx","pages/Delivery/FormDelivery/TableSearchEquipment.jsx","pages/Delivery/FormDelivery/ToInstituteFrom.jsx","pages/Delivery/FormDelivery/PersonTransportationForm.jsx","pages/Delivery/DeliveryFormInfo.jsx","pages/Delivery/FormDelivery/AccessoriesEquipmentText.jsx","pages/Delivery/FormDelivery/DialogEquipment.jsx","pages/Delivery/FormDelivery/DialogAccessories.jsx","pages/Delivery/FormDelivery/EquipmentDetailDelivery.jsx","pages/Delivery/FormDeliveryOrder.jsx","pages/Delivery/ListDeliveryOrders.jsx","pages/Delivery/DeliveryPage.jsx","pages/Delivery/index.jsx","pages/Calibration/FormStatusCalibration.jsx","modelServices/calibragemService.js","pages/Calibration/ListServiceOrderDiagnosisCalibration.jsx","pages/Calibration/CalibrationPage.jsx","modelServices/diagnosisService.js","pages/Calibration/index.jsx","MakeFile/OsPrint/CampoConteudo.jsx","MakeFile/OsPrint/DadosEquipamento.jsx","MakeFile/OsPrint/TabelaAcessorios.jsx","MakeFile/OsPrint/QuadroDiagnostico.jsx","MakeFile/OsPrint/CheckBoxDiagnostic.jsx","MakeFile/OsPrint/Cabecalho.jsx","MakeFile/OsPrint/SubtituloPagina.jsx","MakeFile/OsPrint/Rodape.jsx","MakeFile/OsPrint/index.jsx","pages/_common/print/HeaderPrint.jsx","pages/_common/print/PagePrint.jsx","pages/_common/print/TopicPrint.jsx","pages/_common/print/TablePrint.jsx","MakeFile/OrderPrint/index.jsx","pages/_common/print/FooterPrint.jsx","MakeFile/DeliveryPrint/index.jsx","router.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","position","height","background","green","toolbar","marginTop","justifyContent","width","marginLeft","spacing","marginRight","breakpoints","up","appBarFooter","bottom","divTextFooter","display","divTitle","flexDirection","textUser","fontSize","textFooter","color","text","fontWeight","link","textDecoration","currentLink","borderBottom","Header","classes","menuRoutes","label","pathname","icon","font","currentPathname","window","location","AppBar","className","Toolbar","Typography","noWrap","Container","Grid","container","alignItems","map","item","key","to","style","info","alignSelf","title","coluna","Footer","useStyle","layout","grey","minHeight","Layout","props","children","listaAcessorios","Acessorio","acessorio","descricao","acompanha","quantidade","estado_de_conservacao","listaFormAcessorios","acessorios","sort","a","b","localeCompare","find","serviceOrderStatus","diagnostico","triagem","calibragem","entrega","ServiceOrderScreening","foto_antes_limpeza","foto_apos_limpeza","ServiceOrderDiagnosis","resultado_tecnico","demanda_servicos","observacoes","itens","ServiceOrder","serviceOrder","_id","numero_ordem_servico","status","equipamento_id","created_at","Date","updated_at","calibration","itemDiagnosisModel","tipo","fabricante","codigo","nome","unidade_medida","randomIndex","Math","random","toString","substring","DiagnosisItemsTablePagination","items","useState","page","setPage","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","slice","itemDiag","getItemDiagnosis","TablePagination","rowsPerPageOptions","component","count","length","rowsPerPage","onChangePage","event","newPage","rowItem","margin","DiagnosisCardServiceOrder","justify","xs","variant","AccessoriesTablePagination","accessory","ScreeningCardServiceOrder","ScreeningEquipment","equipment","moment","locale","tz","format","numero_de_serie","numero_do_patrimonio","marca","modelo","municipio_origem","nome_instituicao_origem","tipo_instituicao_origem","nome_responsavel","contato_responsavel","CalibrationCardService","cardItem","marginBottom","cardArea","padding","cardCollaps","backgroundColor","chips","borderRadius","valueItem","valueOs","orange","osNumber","valueStatus","blue","osStatus","calibrationStatus","teal","A700","A400","valueCalibration","deliveryDate","valueDeliveryDate","ServiceOrderCollapseItem","statusMap","deliveryOrders","hasOrder","deliveryOrder","equipamentos_id","e","$oid","expanded","setExpanded","Card","CardContent","md","data_entrega","$date","equipamento","CardActions","IconButton","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","PercentChip","percent","bgColor","ColorChip","withStyles","root","Chip","ServiceOrderCardNumber","number","colorIcon","bgIcon","chipColor","bgChipColor","CardHeader","defaultProps","ServiceOrdersCollapseList","data","ammountDelivery","parseInt","floor","baseUrl","api","axios","create","headers","Accept","baseURL","getAllServiceOrder","get","then","response","saveNewOrderService","order","post","Object","assign","res","catch","err","updateServiceOrderRequest","id","patch","result","LoadingBar","progress","LinearProgress","value","Delivery","destiny","instituicao_destino","cidade_destino","cnpj_destino","endereco_destino","nome_responsavel_destino","contato_responsavel_destino","person","nome_responsavel_transporte","contato_responsavel_transporte","mapModel","delivery","model","keys","forEach","field","getFieldValue","getAllDeliveryOrders","saveDelivery","doc","titlePage","IndexServiceOrder","serviceOrders","setServiceOrders","setDeliveryOrders","setAmmountDelivery","loadingData","setLoadingData","progressLoad","setProgerssLoad","getData","Promise","all","reduce","c","useEffect","messageErros","required","ErrorAlertText","error","type","setType","message","setMessage","CadastroEquipamento","errors","register","diagnosis","updateDiagnosis","updateParent","preventDefault","target","name","gutterBottom","TextField","inputRef","InputLabelProps","shrink","onChange","multiline","rows","fullWidth","HeaderFormPage","serviceOrderNumber","sm","ThemeButton","startIcon","hoverColor","borderColor","ColorButton","border","Button","console","log","SvgIcon","CreateNewItem","addNewItem","useForm","mode","reValidateMode","triggerValidation","setItem","updateItem","registerItem","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","ChipStyled","deleteIcon","deleteIconColor","deleteIconBgColor","iconBgColor","iconColor","onDelete","ColoredChipedStyled","colorPrimary","iconSmall","absolute","right","customWidth","maxWidth","TooltipInfo","React","open","setOpen","handleTooltipClose","ClickAwayListener","onClickAway","Tooltip","placement","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","Fragment","tooltip","ColorIconButton","action","disabled","ColoredIconButton","helperPropsColorIconButton","LabelInput","showInput","setShowInput","currentValue","setCurrentValue","icons","done","RowTableItem","index","headTable","openModelEditDescription","radioItems","head","select","option","MenuItem","align","FormModalDescription","handleClose","updateValue","description","setDescription","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","TableFormRegisteredItems","updateItemsFromTable","itemEdit","setItemEdit","indexEdit","setIndexEdit","Paper","FormRegisteredItems","paper","stepper","buttons","button","FormDiagnosis","updateServiceForm","updateServiceOrderDiagnosis","CssBaseline","CadastroDiagnostico","push","IndexFormDiagnosis","paddingLeft","paddingRight","highlight","palette","primary","main","lighten","light","flex","ActionBarLayout","dataChecked","textButton","titleBar","ammount","HeaderTableLayout","headerData","checkAllRow","hasActions","amountChecked","amount","Checkbox","indeterminate","checked","isChecked","checkedData","prototype","hasOwnProperty","call","BodyTableLayout","headerKeys","checkSelectedRow","selectKeyField","actions","labelId","hover","role","tabIndex","aria-checked","selected","inputProps","round","handleEvent","TableCheckedList","setHasActions","setCheckedData","ammountChecked","setAmmountChecked","dataTable","headerTable","actionFunction","actionBarTitle","actionBarTextButton","updateAmmountChecked","values","filter","checking","keyValue","check","IndexScreening","history","useHistory","editScreening","screening","setScreening","setDataTable","load","setLoad","defineData","orderA","orderB","newItem","equip","instituicao_de_origem","origem","state","d","TabPanel","hidden","accessoryConservationStateList","AccessoryFormRow","atualizarAcessorio","removerLinha","conservationOption","atualizarAcessorioParent","InputLabel","Select","AccessoryFormList","adicionarAcessorio","accessories","ultimo","penultimo","actionGrid","acessorioModel","RelacaoDeMaterial","atualizarAcessorios","acess","i","ind","Equipamento","nome_equipamento","equipmentTypes","brasil","sigla","cidades","getCities","uf","stateUf","toUpperCase","typeInstitute","typeStateEquipment","imageResize","file","maxHeight","qualityRate","fullImage","reader","FileReader","readAsDataURL","blob","MAX_WIDTH","MAX_HEIGHT","QUALITY_IMG","imagem","Image","onload","src","resolve","this","scale","can","document","createElement","visibility","ctx","getContext","clearRect","drawImage","canvasUrl","toDataURL","base64Index","indexOf","base64","split","mimeType","b64Data","contType","sliceSz","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","convert","InputFileImage","accept","filename","setFilename","inputFileRef","createRef","current","files","ref","click","htmlFor","Input","endAdornment","InputAdornment","readOnly","sendEquipmentPhoto","photo","formData","FormData","append","header","manufacturersEquipments","modelsEquipment","RadioControl","setValue","other","setOther","formLabel","hasOther","clean","DialogModelsEquipments","inputOther","setInputOther","radioValue","setRadioValue","updateOpen","dialogTitle","openDialog","InputRadioDialog","defaultValue","valueInput","setValueInput","DialogModelsEquipment","cities","updateEquipment","updateScreening","updateServiceOrder","editingForm","handleUpdateEquipmentParent","handleUpdateScreeningParent","updateServiceOrderParent","sendPhoto","InputProps","TitleFormScreening","FormScreening","updateFormModel","blockEffect","setBlockEffect","serviceOrderForm","setServiceOrderForm","formErrors","setFormErrors","setEquipamento","setAcessorios","atualizarTriagem","dataScreening","updateErrors","dataFormErrors","indexValue","FullDialog","actionChildren","fullScreen","edge","mapEquipmentRequest","obj","saveNewEquipment","put","containerForm","ScreeningDialogForm","openFormDialog","titleFormModal","setOpenFormDialog","reloadData","setAlertSuccess","setShowAlert","errorsFound","setErrorsFound","saveEquipment","saveScreening","equipmentId","screen","delete","saveForm","setTimeout","isArray","closeDialog","Alert","titleList","containerBottom","paddingBottom","ScreeningPage","tabValue","setTabValue","setTitleFormModal","editForm","setEditForm","setServiceOrder","showAlert","alertSuccess","Tabs","newValue","centered","Tab","aria-controls","Screening","purshaseOrderModel","numero_ordem_compra","PurchaseOrder","purchaseOrder","mapModelRequest","savePurchaseOrder","titleRow","DialogTableItems","dataDialog","StyledToolbar","EditDialogPurchaseOrder","toogleDialog","updateData","newPurchaseOrder","tableRow","overflowY","actionButtons","PurchaseOrderTable","purchaseOrders","setOpenDiaglog","setPurchaseOrder","setDataDialog","editOrder","handlePrint","rowPurchaseOrder","indexHead","NewPurchaseOrderDialog","saveOrder","ListItemServiceOrder","itemsServiceOrder","setOpenDialog","DemandPage","itemsServiceOrders","setItemsServiceOrders","itemsPurchaseOrder","setItemsPurchaseOrder","itemsPurchased","acc","curr","IndexDemand","requestBlock","setRequestBlock","setProgress","newServiceOrder","ActionTableHeaderLayout","StyledMenu","Menu","elevation","getContentAnchorEl","transformOrigin","vertical","horizontal","StyledMenuItem","common","white","ActionMenuLayout","anchorEl","setAnchorEl","menuOptions","aria-haspopup","currentTarget","Boolean","keepMounted","ActionButtonLayout","ActionTableBodyLayout","actionIconButton","ActionTableList","headerTableIds","setHeaderTableIds","DiagnosisFormDialog","openModal","dignostico","TableScreeningServiceOrders","serviceOrderScreening","setOpenModal","TableDiagnosisServiceOrder","serviceOrderDiagnosis","serviceOrderDiagnosi","Diagnosis","setProgressLoad","handleEffect","paddingTop","A200","tableContainer","chip","TableSearchEquipment","updateForm","blockEffects","setBlockEffects","dataTableServiceOrders","setDataTableServiceOrders","checkedRows","setCheckedRows","search","setSearch","handleUpdateForm","docs","equipamentos","selectOne","definedData","includes","searchValue","helperText","selectAll","ToInstituteFrom","municipios","formModel","updateToForm","undefined","PersonTransportationForm","updatePersonForm","DeliveryFormInfo","hora_entrega","AccessoriesEquipmentText","wrap","accessorie","containerContent","DialogEquipment","indexEquipment","updateEquipmentForm","formEquipment","setFormEquipment","handleUpdateAccessories","DialogAccessories","keyIndex","updateAccessories","formAccessories","setFormAccessories","_accessories","cellRow","overflow","EquipmentDetailDelivery","servicesOrdersEquipments","setRowsPerPage","equipmentAccessories","setEquipmentAccessories","setEquipment","referenceIndex","setReferenceIndex","openDialogEquipment","setOpenDialogEquipment","openDialogAccessories","setOpenDialogAccessories","handleOpenEquipmentDialog","servicesOrdersEquipment","handleOpenAccessories","hasAccessorieToEquipment","equipmentData","onChangeRowsPerPage","_acessorios","titlePaper","FormDeliveryOrder","realodData","setFormModel","setServicesOrdersEquipments","form","dataEntrega","equipments","cellDiv","overflowX","ListDeliveryOrders","iconButton","openPrint","IndexDiagnosis","IndexDelivery","serviceOrdersResult","deliveryOrdersResult","numSerie","DeliveryPage","reload","FormStatusCalibration","saveCalibration","ListServiceOrderDiagnosisCalibration","randIndx","CalibrationPage","getAllDiagnosis","IndexCalibration","orderDiagnosis","orderCalibrated","finally","useClass","titulo","texto","CampoConteudo","DadosEquipamento","greyColor","StyledTableCell","borderStyle","textAlign","body","StyledTd","table","quadro","TabelaAcessorios","row","scope","quadroInterno","QuadroDiagnosticos","numberRows","CheckBoxDiagnostic","planodefundo","textTransform","fontFamily","osTexto","titleTexto","subTitleTexto","lineHeight","caixaCentral","bordarCaixaCental","borderTop","borderLeft","borderRight","osNumero","Cabecalho","datahora","numero","subtitle","pagina","date","formatDate","SubtituloPagina","rodape","Rodape","getDate","OsPrint","checkBoxClinic","checkBoxTechnical","QuadroDiagnostico","HeaderPrint","subTitle","pageNumber","dateTime","typeAbbreviation","PagePrint","TopicPrint","wordWrap","TablePrint","bodyData","IndexOrderPrint","FooterPrint","borderedFrame","signature","containerSignature","footerPrint","IndexDeliveryPrint","content","join","Routes","path","exact","Calibration","App","createBrowserHistory","ReactDOM","render","getElementById"],"mappings":"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CA,QACA,WACA,WACA,qBACA,UACA,mBACA,eACA,gBACA,aACA,aACA,aACA,UACA,oBACA,qBACA,yBACA,kBACA,YACA,aACA,gBACA,gBACA,sBACA,WACA,SACA,aACA,SACA,kBACA,yBACA,oBACA,sBACA,sBACA,oBACA,aACA,kBACA,WACA,YACA,iBACA,eACA,QACA,WACA,aACA,gBACA,gBACA,UACA,eACA,eACA,sBACA,cACA,UACA,cACA,UACA,WACA,UACA,WACA,WACA,aACA,UACA,WACA,SACA,cACA,iBACA,mBACA,iBACA,iBACA,gBACA,cACA,UACA,aACA,UACA,iBACA,YACA,cACA,kBACA,kBACA,aACA,wBACA,uBACA,iBACA,gCACA,gBACA,gBACA,cACA,4BACA,iBACA,6BACA,iBACA,kBACA,YACA,sBACA,gBACA,oBACA,iBACA,WACA,UACA,YACA,eACA,aACA,YACA,sBACA,WACA,gBACA,oBACA,SACA,UACA,gBACA,uBACA,kBACA,cACA,qBACA,eACA,mBACA,QACA,kBACA,mBACA,kBACA,cACA,cACA,sBACA,uBACA,YACA,YACA,UACA,oBACA,SACA,oBACA,WACA,WACA,UACA,wBACA,iBACA,cACA,UACA,YACA,aACA,yBACA,WACA,SACA,YACA,cACA,cACA,aACA,UACA,eACA,aACA,gBACA,aACA,YACA,UACA,cACA,UACA,YACA,mBACA,cACA,SACA,kBACA,UACA,SACA,YACA,UACA,SACA,QACA,iBACA,WACA,QACA,aACA,aACA,YACA,cACA,UACA,YACA,OACA,UACA,wBACA,sBACA,2BACA,iBACA,YACA,UACA,mBACA,gBACA,mBACA,kBACA,aACA,eACA,aACA,YACA,eACA,aACA,YACA,QACA,kBACA,mBACA,eACA,mBACA,OACA,kBACA,iBACA,gBACA,yBACA,mBACA,cACA,WACA,0BACA,oBACA,aACA,aACA,mBACA,gBACA,eACA,YACA,WACA,mBACA,YACA,kBACA,oBACA,SACA,gBACA,mBACA,eACA,iBACA,kBACA,qBACA,2BACA,aACA,gBACA,aACA,qBACA,aACA,cACA,mBACA,kBACA,gBACA,eACA,gBACA,eACA,kBACA,aACA,YACA,aACA,kBACA,0BACA,aACA,UACA,oBACA,WACA,oBACA,cACA,YACA,aACA,mBACA,cACA,cACA,WACA,eACA,kBACA,cACA,UACA,iBACA,SACA,kBACA,gBACA,sBACA,mBACA,YACA,WACA,WACA,oBACA,YACA,cACA,YACA,eACA,eACA,gBACA,kBACA,eACA,aACA,oBACA,YACA,oBACA,UACA,YACA,mBACA,WACA,qBACA,YACA,UACA,gBACA,oBACA,aACA,YACA,WACA,aACA,gBACA,UACA,UACA,aACA,WACA,iBACA,oBACA,qBACA,mBACA,oBACA,0BACA,kBACA,YACA,0BACA,0BACA,qBACA,oBACA,yBACA,cACA,wBACA,aACA,eACA,6BACA,uBACA,wBACA,WACA,kBACA,+BACA,kCACA,4BACA,+BACA,gBACA,eACA,wBACA,eACA,yBACA,4BACA,4BACA,iBACA,qBACA,2BACA,gCACA,eACA,gCACA,2BACA,iCACA,gCACA,0BACA,yBACA,wBACA,8BACA,kBACA,4BACA,sBACA,gBACA,kBACA,2BACA,+BACA,iBACA,8BACA,wBACA,8BACA,2BACA,sBACA,gCACA,iBACA,kBACA,yBACA,2BACA,mBACA,wBACA,YACA,kBACA,UACA,SACA,YACA,UACA,UACA,wBACA,mBACA,qBACA,WACA,YACA,oBACA,mBACA,uBACA,mBACA,UACA,aACA,WACA,WACA,WACA,SACA,QACA,UACA,UACA,sBACA,UACA,kBACA,iBACA,cACA,WACA,oBACA,SACA,SACA,eACA,cACA,kBACA,qBACA,iBACA,kBACA,qBACA,oBACA,iBACA,kBACA,UACA,YACA,QACA,iBACA,iBACA,UACA,YACA,YACA,YACA,oBACA,YACA,aACA,UACA,cACA,YACA,aACA,SACA,oBACA,YACA,iBACA,oBACA,WACA,YACA,gBACA,gBACA,cACA,kBACA,aACA,mBACA,eACA,wBACA,kBACA,4BACA,eACA,iBAGJ,CACED,MAAO,KACP3a,KAAM,iBACN4a,QAAS,CACP,gBACA,eACA,gBACA,gBACA,eACA,yBACA,iBACA,kBACA,iBACA,kBACA,WACA,WACA,kBACA,gBACA,oBACA,YACA,aACA,WACA,eACA,aACA,gBACA,WACA,UACA,WACA,SACA,+BACA,4BACA,2BACA,uBACA,cACA,eACA,cACA,sBACA,WACA,gBACA,aACA,WACA,iBACA,sBACA,YACA,qBACA,aACA,YACA,cACA,oBACA,uBACA,gBACA,UACA,aACA,QACA,SACA,cACA,eACA,oBACA,eACA,eACA,YACA,YACA,gBACA,WACA,oBACA,aACA,iBACA,cACA,cACA,yBACA,aACA,eACA,eACA,mBACA,kBACA,kBACA,gBACA,YACA,cACA,gBACA,cACA,cACA,WACA,wBACA,YACA,kBACA,aACA,OACA,cACA,qBACA,oBACA,mBACA,iBACA,eACA,YACA,kBACA,YACA,WACA,SACA,SACA,yBACA,kBACA,WACA,YACA,aACA,aACA,oBACA,cACA,iBACA,QACA,aACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,oBACA,YACA,WACA,aACA,QACA,QACA,iBACA,SACA,gBACA,YACA,UACA,aACA,YACA,aACA,YACA,kBACA,YACA,oBACA,kBACA,aACA,YACA,kBACA,WACA,kBACA,QACA,SACA,iBACA,aACA,eACA,iBACA,gBACA,oBACA,UACA,aACA,UACA,WACA,QACA,gBACA,eACA,cACA,YACA,SACA,eACA,cACA,UACA,aACA,SACA,YACA,cACA,gBACA,qBACA,eACA,aACA,eACA,iBACA,cACA,cACA,iBACA,UACA,oBACA,OACA,aACA,QACA,SACA,aACA,aACA,WACA,WACA,YACA,aACA,kBACA,cACA,cACA,iBACA,QACA,WACA,iBACA,cACA,cACA,iBACA,WACA,kBACA,WACA,aACA,sBACA,gBACA,aACA,iBACA,gBACA,eACA,4BACA,wBACA,mBACA,WACA,WACA,kBACA,gBACA,eACA,eACA,aACA,iBACA,cACA,eACA,aACA,UACA,SACA,gBACA,SACA,WACA,eACA,YACA,mBACA,eACA,qBACA,oBACA,kBACA,+BACA,kBACA,4BACA,sBACA,oBACA,sBACA,gBACA,6BACA,kBACA,0BACA,yBACA,gCACA,0BACA,wBACA,iBACA,iBACA,0BACA,4BACA,8BACA,iBACA,kBACA,6BACA,yBACA,+BACA,WACA,YACA,QACA,aACA,iBACA,UACA,aACA,UACA,aACA,YACA,UACA,kBACA,WACA,kBACA,iBACA,UACA,gBACA,kBACA,mBACA,aACA,eACA,QACA,oBACA,UACA,UACA,YACA,aACA,SACA,gBACA,cACA,UACA,iBACA,YACA,aACA,YACA,QACA,cAGJ,CACED,MAAO,KACP3a,KAAM,cACN4a,QAAS,CACP,mBACA,eACA,8BACA,eACA,gBACA,0BACA,6BACA,4BACA,mBACA,0BACA,0BACA,YACA,WACA,gBACA,cACA,WACA,QACA,QACA,WACA,UACA,YACA,SACA,aACA,SACA,wBACA,iBACA,eACA,4BACA,aACA,iBACA,cACA,qBACA,sBACA,aACA,uBACA,YACA,QACA,iBACA,SACA,eACA,aACA,aACA,mBACA,aACA,SACA,2BACA,oBACA,aACA,oBACA,WACA,aACA,SACA,SACA,yBACA,sBACA,6BACA,aACA,gBACA,UACA,cACA,UACA,iCACA,aACA,WACA,iBACA,YACA,gBACA,sBACA,WACA,4BACA,qBACA,yBACA,0BACA,UACA,kBACA,oBACA,oBACA,6BACA,+BACA,wBACA,0BACA,0BACA,kBACA,YACA,eACA,qBACA,QACA,qBACA,oBACA,aACA,wBACA,kBACA,wBACA,YACA,uBACA,iBACA,gBACA,uBACA,gBACA,gBACA,qBACA,aACA,gBACA,8BACA,eACA,cACA,SACA,oBACA,0BACA,mBACA,oBACA,mBACA,YACA,UACA,YACA,qBACA,0BACA,UACA,mBACA,WACA,eACA,eACA,SACA,iBACA,eACA,cACA,6BACA,+BACA,6BACA,oBACA,kBACA,YACA,YACA,kBACA,cACA,gBACA,cACA,YACA,sBACA,UACA,aACA,cACA,mBACA,WACA,UACA,YACA,wBACA,eACA,4BACA,mBACA,uBACA,uBACA,oBACA,oBACA,gBACA,SACA,aACA,kBACA,aACA,cACA,gCACA,eACA,gBACA,cACA,0BACA,mCACA,aACA,yBACA,6BACA,6BACA,+BACA,eACA,kBACA,gCACA,iCACA,4BACA,gCACA,kCACA,yBACA,4BACA,+BACA,0BACA,2BACA,4BACA,iCACA,iBACA,wCACA,+BACA,iCACA,2BACA,kCACA,kCACA,iBACA,wBACA,YACA,0BACA,oBACA,yBACA,gBACA,oBACA,yBACA,gBACA,WACA,QACA,oBACA,gBACA,SACA,aACA,gBACA,YACA,gBACA,gBACA,QACA,6BACA,uBACA,kBACA,eAGJ,CACED,MAAO,KACP3a,KAAM,UACN4a,QAAS,CACP,6BACA,cACA,UACA,WACA,eACA,sBACA,SACA,eACA,iBACA,UACA,iCACA,SACA,SACA,gBACA,0BACA,mBACA,QACA,iBACA,cACA,aACA,aACA,SACA,kBACA,iBACA,kBACA,YACA,YACA,eACA,QACA,qBACA,aACA,aACA,UACA,cACA,YACA,mBACA,WACA,SACA,eACA,0BACA,WACA,cACA,0BACA,6BACA,0BACA,2BACA,2BACA,WACA,aACA,YACA,YACA,UACA,kBACA,gBACA,iBACA,aACA,uBACA,YACA,kBACA,uBACA,UACA,wBACA,qBACA,8BACA,yBACA,yBACA,kBACA,mBACA,0BACA,gBACA,SACA,QACA,iBACA,gBACA,eAGJ,CACED,MAAO,KACP3a,KAAM,eACN4a,QAAS,CACP,aACA,SACA,WACA,oBACA,yBACA,+BACA,2BACA,SACA,WACA,oBACA,SACA,iBACA,cACA,cACA,sBACA,qBACA,wBACA,iBACA,YACA,yBACA,uBACA,SACA,eACA,YACA,WACA,UACA,UACA,YACA,oBACA,WACA,kBACA,eACA,wBACA,UACA,SACA,YACA,aACA,SACA,eACA,UACA,SACA,gBACA,WACA,iBACA,WACA,aACA,QACA,UACA,YACA,UACA,cACA,WACA,eACA,WACA,aACA,UACA,uBACA,UACA,SACA,eACA,qBACA,iBACA,WACA,WACA,UACA,SACA,WACA,QACA,YACA,iBACA,uBACA,WACA,QACA,UACA,iBACA,0BACA,UACA,SACA,UACA,2BACA,4BACA,UACA,cACA,YACA,SACA,WACA,uBACA,YACA,eACA,YACA,SACA,OACA,WACA,YACA,uBACA,cACA,cACA,qBACA,UACA,gBACA,SACA,WACA,WACA,UACA,SACA,SACA,SACA,0BACA,WACA,uBACA,sBACA,wBACA,cACA,QACA,kBACA,uBACA,UACA,kBACA,iBACA,WACA,gBACA,iBACA,UACA,cACA,0BACA,WACA,YACA,aACA,SACA,qBACA,YACA,mBACA,aACA,YACA,aACA,SACA,cACA,UACA,UACA,mBACA,WACA,iBACA,gBACA,gBACA,YACA,QACA,YACA,oBACA,cACA,WACA,aACA,QACA,aACA,UACA,aACA,kBACA,UACA,mBACA,kBACA,UACA,UACA,WACA,SACA,cACA,WACA,eACA,eACA,aACA,OACA,gBACA,mBACA,oBACA,8BACA,6BACA,eACA,kBACA,mBACA,6BACA,UACA,mBACA,mBACA,YACA,wBACA,aACA,UACA,cACA,sBACA,SACA,mBACA,kBACA,mBACA,WACA,WACA,oBACA,oBACA,kBACA,WACA,cACA,cACA,aACA,YACA,cACA,WACA,WACA,iBACA,UACA,kBACA,cACA,aACA,YACA,mBACA,YACA,UACA,aACA,YACA,eACA,gBACA,iBACA,WACA,iBACA,UACA,QACA,QACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,yBACA,YACA,aACA,SACA,gBACA,gBACA,WACA,aACA,UACA,eACA,qBACA,YACA,WACA,YACA,YACA,WACA,UACA,kBACA,YACA,UACA,aACA,UACA,UACA,QACA,cACA,YACA,uBACA,eACA,UACA,UACA,UACA,yBACA,cACA,aACA,YACA,UACA,kBACA,aACA,UACA,UACA,WACA,YACA,cACA,QACA,MACA,UACA,YACA,YACA,cACA,aACA,OACA,cACA,gBACA,QACA,WACA,UACA,kBACA,SACA,SACA,YACA,gBACA,kBACA,uBACA,oBACA,UACA,aACA,oBACA,YACA,YACA,WACA,oBACA,aACA,YACA,OACA,yBACA,UACA,aACA,OACA,SACA,UACA,WACA,aACA,kBACA,qBACA,eACA,cACA,aACA,WACA,WACA,eACA,QACA,YACA,eACA,UACA,qBACA,aACA,YACA,gBACA,aACA,iBACA,kBACA,WACA,UACA,cACA,YACA,eACA,kBACA,uBACA,eACA,WACA,kBACA,0BACA,WACA,mBACA,SACA,kBACA,gBACA,aACA,UACA,gBACA,cACA,sBACA,aACA,qBACA,sBACA,gBACA,YACA,kBACA,cACA,YACA,SACA,mBACA,SACA,YACA,sBACA,qBACA,iBACA,YACA,WACA,kBACA,eACA,yBACA,gBACA,cACA,eACA,oBACA,wBACA,oBACA,cACA,SACA,iBACA,YACA,YACA,UACA,aACA,aACA,UACA,eACA,cACA,SACA,iBACA,eACA,WACA,aACA,WACA,WACA,YACA,oBACA,mBACA,WACA,WACA,wBACA,YACA,aACA,eACA,eACA,aACA,WACA,mBACA,SACA,yBACA,eACA,cACA,iBACA,iBACA,cACA,aACA,kBACA,aACA,WACA,qBACA,kBACA,eACA,kBACA,WACA,aACA,UACA,UACA,eACA,kBACA,YACA,cACA,YACA,UACA,WACA,aACA,SACA,aACA,UACA,wBACA,cACA,eACA,cACA,eACA,WACA,UACA,SACA,SACA,aACA,YACA,SACA,aACA,gBACA,WACA,YACA,cACA,iBACA,QACA,cACA,WACA,gBACA,eACA,cACA,mBACA,uBACA,yBACA,sBACA,uBACA,eACA,SACA,WACA,UACA,SACA,WACA,SACA,YACA,0BACA,mBACA,iBACA,WACA,WACA,UACA,qBACA,qBACA,uBACA,qBACA,4BACA,qBACA,oBACA,oBACA,UACA,YACA,eACA,YACA,iBACA,sBACA,eACA,WACA,SACA,UACA,cACA,cACA,SACA,SACA,QACA,iBACA,iBACA,eACA,WACA,QACA,oBACA,eACA,cACA,kBACA,kBACA,2BACA,eACA,sBACA,gCACA,6BACA,2BACA,0BACA,kBACA,qBACA,kBACA,eACA,iBACA,uBACA,iBACA,qBACA,6BACA,wBACA,eACA,yBACA,yBACA,qBACA,iBACA,8BACA,4BACA,mCACA,6BACA,6BACA,iBACA,8BACA,SACA,6BACA,2BACA,wBACA,gBACA,mBACA,8BACA,iCACA,4BACA,+BACA,0BACA,+BACA,6BACA,8BACA,8BACA,4BACA,8BACA,+BACA,gBACA,wBACA,eACA,eACA,wBACA,eACA,sBACA,+BACA,kBACA,iBACA,aACA,cACA,4BACA,aACA,cACA,UACA,iBACA,cACA,eACA,YACA,UACA,WACA,eACA,YACA,iBACA,SACA,aACA,YACA,qBACA,SACA,YACA,YACA,YACA,YACA,SACA,aACA,aACA,WACA,eACA,cACA,gBACA,UACA,YACA,WACA,aACA,YACA,kBACA,aACA,WACA,UACA,iBACA,WACA,UACA,cACA,qBACA,SACA,UACA,gBACA,aACA,YACA,UACA,UACA,YACA,QACA,oBACA,YACA,MACA,YACA,kBACA,WACA,gBACA,SACA,uBACA,yBACA,qBACA,YACA,UACA,YACA,uBACA,oBACA,aACA,cACA,aAGJ,CACED,MAAO,KACP3a,KAAM,YACN4a,QAAS,CACP,iBACA,mBACA,0BACA,QACA,WACA,YACA,SACA,yBACA,aACA,aACA,cACA,eACA,cACA,aACA,WACA,UACA,oBACA,sBACA,wBACA,qBACA,4BACA,gBACA,iBACA,oBACA,yBACA,8BACA,wBACA,sBACA,eACA,gBACA,sBACA,iBACA,kBACA,UACA,gBACA,wBACA,mBACA,uBACA,aACA,YACA,+BACA,wBACA,kBACA,yBACA,kBACA,gBACA,8BACA,8BACA,WACA,cACA,YACA,mBACA,gBACA,sBACA,0BACA,YACA,WACA,YACA,SACA,WACA,aACA,aACA,cACA,0BACA,sBACA,UACA,uBACA,qBACA,UACA,aACA,UACA,iBACA,+BACA,WACA,8BACA,wBACA,YACA,iBACA,2BACA,kBACA,aACA,YACA,cACA,qBACA,cACA,cACA,cACA,wBACA,SACA,cACA,yBACA,mBACA,0BACA,YACA,aACA,eACA,QACA,aACA,yBACA,aACA,OACA,0BACA,0BACA,4BACA,iBACA,cACA,qBACA,SACA,mBACA,YACA,yBACA,eACA,WACA,UACA,iBACA,0BACA,2BACA,0BACA,0BACA,4BACA,4BACA,4BACA,+BACA,6BACA,+BACA,mCACA,kCACA,kBACA,6BACA,WACA,aACA,sBACA,aACA,gBACA,oBACA,WACA,aACA,kBACA,eAGJ,CACED,MAAO,KACP3a,KAAM,QACN4a,QAAS,CACP,YACA,WACA,YACA,WACA,eACA,UACA,aACA,cACA,WACA,WACA,sBACA,qBACA,WACA,aACA,YACA,UACA,UACA,QACA,qBACA,0BACA,WACA,WACA,YACA,UACA,QACA,UACA,UACA,cACA,gBACA,iBACA,eACA,YACA,QACA,kBACA,oBACA,kBACA,iBACA,YACA,aACA,WACA,cACA,WACA,aACA,YACA,WACA,qBACA,oBACA,qBACA,UACA,SACA,UACA,cACA,aACA,iBACA,wBACA,UACA,YACA,aACA,UACA,6BACA,YACA,YACA,UACA,WACA,aACA,YACA,QACA,sBACA,UACA,cACA,SACA,0BACA,gBACA,eACA,WACA,cACA,UACA,WACA,UACA,mBACA,kBACA,UACA,wBACA,eACA,cACA,YACA,mBACA,aACA,YACA,eACA,gBACA,OACA,WACA,UACA,eACA,mBACA,UACA,UACA,QACA,2BACA,6BACA,8BACA,gCACA,QACA,cACA,0BACA,yBACA,YACA,SACA,wBACA,aACA,WACA,iBACA,gBACA,iBACA,iBACA,eACA,iBACA,kBACA,iBACA,mBACA,oBACA,eACA,aACA,mBACA,YACA,oBACA,eACA,YACA,gBACA,mBACA,gBACA,gBACA,gBACA,uBACA,QACA,YACA,iBACA,YACA,UACA,wBACA,UACA,WACA,aACA,gBACA,UACA,eACA,cACA,WACA,YACA,UACA,aACA,WACA,eACA,cACA,YACA,WACA,aACA,YACA,OACA,aACA,eACA,WACA,YACA,YACA,cACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,UACA,aACA,YACA,QACA,aACA,aACA,uBACA,sBACA,cACA,YACA,UACA,YACA,WACA,aACA,YACA,WACA,UACA,aACA,YACA,aACA,WACA,YACA,SACA,aACA,YACA,aACA,YACA,aACA,UACA,YACA,WACA,WACA,aACA,YACA,YACA,cACA,YACA,YACA,kBACA,aACA,kBACA,WACA,cACA,UACA,UACA,WACA,oBACA,aACA,OACA,aACA,YACA,oBACA,aACA,WACA,mBACA,gBACA,wBACA,8BACA,+BACA,WACA,WACA,cACA,cACA,gBACA,WACA,cACA,QACA,UACA,oBACA,kBACA,cACA,aACA,aACA,WACA,uBACA,UACA,yBACA,SACA,gBACA,gBACA,WACA,YACA,UACA,cACA,aACA,qBACA,YACA,YACA,SACA,mBACA,aACA,iBACA,gCACA,WACA,aACA,YACA,kBACA,aACA,gBACA,iBACA,eACA,eACA,sBACA,aACA,iBACA,iBACA,eACA,WACA,yBACA,gBACA,gBACA,uBACA,YACA,YACA,YACA,cACA,aACA,eACA,iBACA,YACA,kBACA,WACA,kBACA,YACA,eACA,WACA,oBACA,YACA,WACA,aACA,WACA,eACA,SACA,aACA,eACA,eACA,QACA,mBACA,8BACA,4BACA,YACA,YACA,aACA,kBACA,UACA,kBACA,uBACA,2BACA,oBACA,oBACA,oBACA,uBACA,gBACA,oBACA,eACA,WACA,UACA,cACA,uBACA,WACA,mBACA,mBACA,yBACA,2BACA,gBACA,cACA,4BACA,0BACA,kBACA,WACA,UACA,kBACA,cACA,4BACA,sBACA,sBACA,kBACA,gBACA,kBACA,4BACA,4BACA,iBACA,+BACA,+BACA,+BACA,0BACA,kCACA,aACA,iBACA,UACA,WACA,SACA,2BACA,mBACA,cACA,mBACA,gBACA,cACA,WACA,iBACA,kBACA,mBACA,qBACA,aACA,eACA,yBACA,aACA,cACA,YACA,aACA,gBACA,sBACA,kBACA,iBACA,eACA,aACA,WACA,SACA,UACA,YACA,WACA,WACA,WACA,YACA,MACA,SACA,aACA,SACA,aACA,UACA,uBACA,uBACA,iBACA,UACA,YACA,SACA,0BACA,SACA,YACA,yBACA,gBAGJ,CACED,MAAO,KACP3a,KAAM,cACN4a,QAAS,CACP,WACA,cACA,gBACA,gBACA,iBACA,iBACA,gBACA,eACA,aACA,aACA,aACA,aACA,gBACA,cACA,yBACA,kBACA,qBACA,wBACA,YACA,aACA,kBACA,wBACA,cACA,qBACA,qBACA,WACA,WACA,cACA,2BACA,aACA,YACA,aACA,UACA,WACA,WACA,oBACA,gBACA,iBACA,YACA,SACA,aACA,aACA,cACA,2BACA,qBACA,mBACA,oBACA,uBACA,aACA,cACA,YACA,WACA,UACA,UACA,QACA,QACA,WACA,UACA,aACA,kBACA,qBACA,aACA,iBACA,YACA,mBACA,SACA,iBACA,8BACA,oBACA,sBACA,yBACA,eACA,eACA,qBACA,kBACA,mBACA,aACA,iBACA,kBACA,oBACA,kBACA,iBACA,0BACA,aACA,wBACA,sBACA,eACA,cACA,cACA,qBACA,oBACA,YACA,qBACA,eACA,mBACA,wBACA,uBACA,sBACA,gBACA,aACA,qBACA,eACA,wBACA,0BACA,mBACA,aACA,iBACA,kBACA,mBACA,kBACA,eACA,sBACA,0BACA,kBACA,eACA,4BACA,+BACA,8BACA,yBACA,8BACA,0BACA,mCACA,uBACA,UACA,qBACA,QACA,UACA,cACA,sBACA,UACA,sBACA,UACA,eACA,kBACA,0BACA,mBACA,OACA,sCACA,cAGJ,CACED,MAAO,KACP3a,KAAM,WACN4a,QAAS,CACP,qBACA,eACA,aACA,eACA,2BACA,gBACA,8BACA,cACA,cACA,iBACA,8BACA,oBACA,YACA,sBACA,kBACA,cACA,aACA,UACA,0BACA,wBACA,WACA,WACA,eACA,gBACA,YACA,gBACA,YACA,gBACA,kBACA,SACA,aACA,yBACA,yBACA,wBACA,kBACA,eACA,eACA,cACA,gBACA,qBACA,mBACA,aACA,iBACA,wBACA,oBACA,UACA,eACA,eACA,aACA,wBACA,eACA,aACA,2BACA,2BACA,eACA,gBACA,qBACA,iBACA,aACA,aACA,aACA,QACA,WACA,wBACA,mBACA,yBACA,iBACA,qBACA,yBACA,gBACA,aACA,oBACA,YACA,cACA,SACA,kBACA,gBACA,iBACA,UACA,6BACA,iBACA,WACA,WACA,mBACA,QACA,eACA,kBACA,qBACA,UACA,UACA,wBACA,iBACA,YACA,eACA,aACA,WACA,WACA,WACA,iBACA,WACA,cACA,sBACA,WACA,cACA,iBACA,YACA,UACA,kBACA,UACA,UACA,UACA,uBACA,WACA,iBACA,cACA,WACA,WACA,WACA,UACA,gBACA,aACA,aACA,YACA,YACA,eACA,UACA,aACA,WACA,UACA,eACA,cACA,UACA,cACA,yBACA,cACA,cACA,YACA,YACA,cACA,eACA,iBACA,qBACA,YACA,WACA,aACA,2BACA,4BACA,aACA,sBACA,YACA,0BACA,gBACA,iBACA,aACA,iBACA,aACA,eACA,iBACA,kBACA,cACA,iBACA,iBACA,6BACA,YACA,cACA,cACA,YACA,gBACA,UACA,yBACA,UACA,iBACA,wBACA,wBACA,UACA,kBACA,YACA,eACA,aACA,gBACA,wBACA,oBACA,cACA,WACA,iBACA,eACA,aACA,YACA,YACA,eACA,iBACA,QACA,kBACA,kBACA,SACA,gBACA,aACA,YACA,YACA,mBACA,+BACA,yBACA,0BACA,2BACA,eACA,yBACA,6BACA,yBACA,2BACA,8BACA,4BACA,+BACA,iCACA,kBACA,+BACA,8BACA,+BACA,iCACA,0BACA,4BACA,gCACA,qBACA,kBACA,iBACA,kBACA,cACA,gBACA,oBACA,uBACA,uBACA,6BACA,kBACA,WACA,UACA,cACA,iBACA,WACA,YACA,SACA,YACA,4BACA,YACA,gBACA,oBACA,WACA,qBAGJ,CACED,MAAO,KACP3a,KAAM,UACN4a,QAAS,CACP,aACA,kBACA,WACA,UACA,wBACA,WACA,WACA,WACA,YACA,aACA,QACA,oBACA,oBACA,SACA,QACA,WACA,UACA,YACA,WACA,WACA,YACA,yBACA,SACA,cACA,cACA,2BACA,cACA,SACA,SACA,qBACA,wBACA,YACA,0BACA,WACA,qBACA,YACA,SACA,UACA,8BACA,0BACA,kBACA,kBACA,aACA,WACA,eACA,aACA,0BACA,OACA,uBACA,uBACA,0BACA,YACA,oBACA,kBACA,YACA,qBACA,UACA,WACA,aACA,eACA,aACA,SACA,oBACA,gBACA,sBACA,YACA,cACA,YACA,WACA,kBACA,aACA,WACA,OACA,eACA,WACA,gCACA,eACA,iBACA,iBACA,oBACA,YACA,oBACA,eACA,WACA,yBACA,YACA,uBACA,cACA,cACA,aACA,YACA,aACA,SACA,kBACA,SACA,eACA,UACA,YACA,YACA,iBACA,YACA,oBACA,eACA,iBACA,aACA,8BACA,sBACA,0BACA,yBACA,4BACA,yBACA,sBACA,cACA,mBACA,8BACA,4BACA,8BACA,2BACA,2BACA,8BACA,6BACA,0BACA,4BACA,6BACA,4BACA,mCACA,WACA,8BACA,QACA,eACA,aACA,cACA,iBACA,aACA,aACA,YACA,aACA,iBACA,YACA,QACA,QACA,sBACA,aAGJ,CACED,MAAO,KACP3a,KAAM,oBACN4a,QAAS,CACP,oBACA,wBACA,kBACA,SACA,iBACA,gBACA,WACA,YACA,UACA,kBACA,eACA,4BACA,mBACA,qBACA,YACA,0BACA,YACA,UACA,WACA,2BACA,6BACA,+BACA,mBACA,qBACA,aACA,YACA,wBACA,eACA,YACA,UACA,aACA,YACA,SACA,QACA,cACA,aACA,UACA,UACA,aACA,uBACA,gBACA,mBACA,WACA,kBACA,aACA,oBACA,gBACA,gBACA,WACA,WACA,eACA,QACA,kBACA,SACA,mBACA,YACA,WACA,aACA,qBACA,cACA,kBACA,mBACA,2BACA,eACA,2BACA,0BACA,+BACA,gBACA,2BACA,QACA,YACA,cACA,0BACA,QACA,gBACA,kBACA,aACA,eAGJ,CACED,MAAO,KACP3a,KAAM,WACN4a,QAAS,CACP,cACA,aACA,WACA,QACA,UACA,mBACA,UACA,WACA,cACA,oBACA,SACA,qBACA,eACA,QACA,aACA,WACA,WACA,UACA,uBACA,QACA,aACA,cACA,SACA,YACA,aACA,aACA,UACA,WACA,cACA,YACA,aACA,YACA,WACA,WACA,YACA,aACA,YACA,SACA,cACA,WACA,WACA,cACA,uBACA,gBACA,mBACA,YACA,SACA,wBACA,mBACA,4BACA,gCACA,8BACA,8BACA,mCACA,SACA,YACA,YACA,UACA,YACA,SACA,aACA,gBAGJ,CACED,MAAO,KACP3a,KAAM,WACN4a,QAAS,CACP,UACA,aACA,YACA,WACA,SACA,gBACA,YACA,aACA,WACA,oBACA,cACA,UACA,UACA,YACA,cACA,UACA,UACA,WACA,YACA,SACA,SACA,cACA,WACA,WACA,QACA,cACA,cACA,WACA,YACA,aACA,cACA,UACA,eACA,aACA,aACA,WACA,YACA,eACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,SACA,WACA,aACA,YACA,aACA,QACA,YACA,OACA,4BACA,WACA,aACA,eACA,YACA,YACA,SACA,eACA,kBACA,WACA,SACA,YACA,cACA,aACA,sBACA,eACA,iBACA,YACA,YACA,WACA,cACA,YACA,SACA,SACA,mBACA,aACA,YACA,MACA,WACA,UACA,cACA,cACA,YACA,aACA,YACA,cACA,UACA,UACA,cACA,cACA,YACA,aACA,SACA,OACA,yBACA,oBACA,WACA,uBACA,oBACA,WACA,eACA,aACA,QACA,iBACA,aACA,UACA,UACA,WACA,WACA,aACA,kBACA,aACA,mBACA,cACA,aACA,YACA,UACA,UACA,cACA,cACA,eACA,QACA,UACA,UACA,WACA,SACA,YACA,UACA,cACA,WACA,YACA,UACA,WACA,eACA,YACA,aACA,UACA,cACA,kBACA,iBACA,UACA,YACA,UACA,aACA,qBACA,aACA,aACA,eACA,aACA,iBACA,YACA,SACA,WACA,UACA,oBACA,uBACA,oBACA,kBACA,gCACA,8BACA,yBACA,iBACA,gBACA,SACA,gBACA,qBACA,WACA,WACA,UACA,eACA,aACA,SACA,SACA,UACA,QACA,SACA,cACA,SACA,UACA,mBACA,0BAGJ,CACED,MAAO,KACP3a,KAAM,WACN4a,QAAS,CACP,WACA,kBACA,iBACA,wBACA,uBACA,gBACA,QACA,0BACA,WACA,sBACA,qBACA,qBACA,UACA,UACA,6BACA,gBACA,0BACA,uBACA,SACA,wBACA,aACA,UACA,yBACA,uBACA,cACA,gBACA,yBACA,WACA,UACA,YACA,+BACA,qBACA,2BACA,aACA,oBACA,mBACA,oBACA,yBACA,yBACA,oBACA,kCACA,uBACA,0BACA,2BACA,0BACA,cACA,aACA,kBACA,uBACA,kCACA,UACA,0BACA,uBACA,sBACA,aACA,QACA,iBACA,kBACA,WACA,4BACA,yBACA,gCACA,uBACA,WACA,8BACA,kBACA,cACA,UACA,0BACA,cACA,oBACA,mBACA,qBACA,mBACA,qBACA,oBACA,iBACA,cACA,sBACA,qBACA,uBACA,WACA,mBACA,kBACA,mBACA,mBACA,aACA,YACA,aACA,YACA,WACA,mBACA,cACA,SACA,uBACA,mBACA,iBACA,WACA,uBACA,YACA,mBACA,wBACA,YACA,gBACA,gBACA,eACA,qBACA,uBACA,kBACA,SACA,eACA,4BACA,6BACA,oBACA,oBACA,uBACA,eACA,kBACA,gBACA,UACA,mBACA,iBACA,iBACA,yBACA,oBACA,eACA,iBACA,oBACA,gBACA,wBACA,2BACA,2BACA,iCACA,sBACA,wBACA,6BACA,gCACA,kBACA,2BACA,wBACA,SACA,6BACA,eACA,cACA,uBACA,uBACA,aACA,aACA,cACA,cACA,8BACA,oBACA,yBACA,aACA,UACA,WACA,mBACA,QACA,cACA,SACA,aACA,WACA,QACA,2BACA,oBACA,gBACA,gCACA,oBACA,cACA,sBACA,uBACA,yBACA,yBACA,0BACA,iBACA,YACA,yBACA,sBACA,6BACA,gCACA,8BACA,0BACA,8BACA,wCACA,+BACA,mCACA,gCACA,8BACA,8BACA,0BACA,4BACA,4BACA,6BACA,2BACA,0BACA,6BACA,mBACA,iCACA,0BACA,gCACA,2BACA,0BACA,2BACA,yBACA,sBACA,oBACA,oBACA,YACA,sBACA,sBACA,aACA,uBACA,qBACA,WACA,WACA,eACA,yBACA,mBACA,mBACA,cACA,wBACA,gBAGJ,CACED,MAAO,KACP3a,KAAM,qBACN4a,QAAS,CACP,gBACA,iBACA,aACA,eACA,kBACA,cACA,qBACA,uBACA,aACA,eACA,eACA,aACA,eACA,aACA,YACA,SACA,iBACA,aACA,aACA,eACA,UACA,iBACA,qBACA,YACA,mBACA,aACA,aACA,QACA,gBACA,2BACA,YACA,WACA,WACA,mBACA,wBACA,uBACA,WACA,eACA,aACA,eACA,WACA,YACA,YACA,SACA,WACA,OACA,aACA,mBACA,WACA,UACA,aACA,aACA,UACA,uBACA,iBACA,wBACA,eACA,WACA,cACA,gBACA,iBACA,qBACA,gBACA,YACA,2BACA,UACA,sBACA,0BACA,cACA,cACA,iBACA,SACA,SACA,aACA,UACA,iBACA,cAGJ,CACED,MAAO,KACP3a,KAAM,cACN4a,QAAS,CACP,wBACA,yBACA,kBACA,mBACA,YACA,UACA,SACA,iBACA,SACA,4BACA,qBACA,eACA,aACA,cACA,oBACA,aACA,gBACA,UACA,qBACA,4BACA,mBACA,qBACA,OACA,eACA,qBACA,qBACA,mBACA,cACA,8BACA,iBACA,gBACA,0BACA,sBACA,UACA,gBACA,uBACA,cACA,uBACA,2BACA,aACA,iBACA,sBACA,wBACA,iCACA,8BACA,eACA,mBACA,YACA,WACA,gBACA,qBACA,YAGJ,CACED,MAAO,KACP3a,KAAM,eACN4a,QAAS,CACP,sBACA,YACA,aACA,UACA,aACA,cACA,mBACA,UACA,oBACA,qBACA,aACA,WACA,SACA,YACA,qBACA,UACA,sBACA,WACA,YACA,iBACA,WACA,kBACA,oBACA,gBACA,YACA,iBACA,oBACA,kBACA,WACA,iBACA,gBACA,oBACA,kBACA,4BACA,eACA,YACA,gBACA,WACA,WACA,WACA,aACA,YACA,aACA,WACA,YACA,QACA,SACA,WACA,aACA,SACA,gBACA,aACA,kBACA,WACA,SACA,YACA,WACA,kBACA,qBACA,yBACA,YACA,cACA,UACA,sBACA,gBACA,iBACA,eACA,YACA,SACA,UACA,gBACA,QACA,cACA,QACA,YACA,mBACA,mBACA,cACA,eACA,sBACA,qBACA,sBACA,qBACA,cACA,cACA,SACA,2BACA,kBACA,gBACA,WACA,YACA,gBACA,0BACA,uBACA,gBACA,aACA,aACA,mBACA,gBACA,QACA,UACA,cACA,mBACA,aACA,qBACA,qBACA,wBACA,oBACA,kBACA,WACA,SACA,SACA,SACA,UACA,cACA,YACA,aACA,gBACA,WACA,YACA,gBACA,aACA,aACA,gBACA,gBACA,eACA,gBACA,aACA,WACA,eACA,WACA,YACA,aACA,cACA,YACA,YACA,eACA,iBACA,qBACA,sBACA,eACA,WACA,WACA,eACA,cACA,YACA,YACA,YACA,aACA,gBACA,cACA,qBACA,gBACA,iBACA,kBACA,wBACA,qBACA,yBACA,cACA,YACA,mBACA,YACA,cACA,gBACA,YACA,aACA,cACA,yBACA,SACA,SACA,UACA,qBACA,mBACA,aACA,aACA,WACA,mBACA,oBACA,UACA,eACA,WACA,yBACA,aACA,UACA,SACA,mBACA,aACA,+BACA,oCACA,8BACA,6BACA,6BACA,iCACA,6BACA,+BACA,4BACA,oBACA,UACA,YACA,YACA,qBACA,YACA,uBACA,mBACA,mBACA,WACA,YACA,yBACA,cACA,kBACA,UACA,UACA,aACA,qBACA,gBACA,kBACA,wBACA,mBACA,0BACA,mBACA,kBACA,iCACA,eACA,WACA,eACA,kBACA,WACA,iBACA,wBACA,cACA,YACA,mBACA,UACA,QACA,iBACA,kBACA,QACA,aACA,yBACA,mBACA,aACA,uBACA,cACA,eACA,SACA,yBACA,2BACA,iBACA,gBACA,cACA,iBACA,YACA,aACA,cACA,kBACA,gBACA,kBACA,kBACA,uBACA,qBACA,iBACA,iBACA,eACA,aACA,iBACA,oBACA,qBACA,eACA,sBACA,aACA,aACA,eACA,WACA,+BACA,SACA,gBACA,uBACA,iBACA,iBACA,sBACA,UACA,OACA,cACA,wBACA,aACA,iBACA,qBACA,SACA,aACA,YACA,UACA,UACA,qBACA,mBACA,sBACA,mBACA,kBACA,oBACA,cACA,oBACA,iBACA,YACA,sBACA,iBACA,SACA,gBACA,cACA,aACA,kBACA,YACA,YACA,eACA,UACA,UACA,uBACA,gBACA,WACA,cACA,WACA,aACA,aACA,gBACA,UACA,aACA,aACA,aACA,WACA,gBACA,YACA,eACA,YACA,OACA,YACA,UACA,WACA,YACA,UACA,aACA,uBACA,YACA,qBACA,aACA,aACA,WACA,QACA,cACA,mBACA,gBACA,aACA,kBACA,WACA,UACA,aACA,YACA,QACA,UACA,WACA,YACA,aACA,mBACA,UACA,wBACA,YACA,aACA,aACA,WACA,YACA,aACA,eACA,qBACA,aACA,2BACA,UACA,WACA,YACA,WACA,UACA,YACA,cACA,UACA,gBACA,mBACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,gBACA,UACA,WACA,YACA,eACA,WACA,WACA,aACA,cACA,eACA,WACA,UACA,oBACA,UACA,cACA,eACA,gBACA,cACA,YACA,cACA,oBACA,mBACA,qBACA,cACA,gCACA,iBACA,iBACA,UACA,eACA,YACA,UACA,eACA,WACA,UACA,iBACA,kBACA,gBACA,gBACA,eACA,cACA,UACA,UACA,QACA,WACA,WACA,SACA,mBACA,gBACA,aACA,YACA,cACA,mBACA,SACA,YACA,gBACA,gBACA,MACA,aACA,UACA,yBACA,cACA,UACA,QACA,cACA,aACA,UACA,iBACA,aACA,iBACA,UACA,UACA,kBACA,qBACA,eACA,kBACA,kBACA,iBACA,aACA,iBACA,cACA,iBACA,iBACA,iBACA,YACA,aACA,aACA,WACA,WACA,SACA,kBACA,YACA,WACA,cACA,UACA,WACA,YACA,WACA,eACA,QACA,QACA,WACA,kBACA,iBACA,wBACA,aACA,aACA,gBACA,gBACA,uBACA,gBACA,gBACA,YACA,uBACA,oBACA,iBACA,SACA,YACA,QACA,aACA,eACA,UACA,QACA,gBACA,cACA,WACA,aACA,WACA,gBACA,WACA,YACA,iBACA,aACA,mBACA,eACA,eACA,gBACA,gBACA,wBACA,cACA,SACA,kBACA,qBACA,WACA,kBACA,sBACA,eACA,cACA,cACA,YACA,aACA,sBACA,iBACA,mBACA,YACA,YACA,QACA,QACA,QACA,gBACA,YACA,mBACA,WACA,eACA,kBACA,YACA,eACA,cACA,cACA,cACA,SACA,QACA,iBACA,gBACA,6BACA,mBACA,YACA,WACA,aACA,aACA,eACA,gBACA,qBACA,gBACA,WACA,0BACA,kBACA,iBACA,iBACA,UACA,QACA,cACA,WACA,aACA,YACA,WACA,OACA,uBACA,wBACA,wBACA,qBACA,UACA,kBACA,gBACA,WACA,WACA,UACA,eACA,cACA,cACA,WACA,aACA,WACA,SACA,UACA,gBACA,qBACA,UACA,YACA,aACA,eACA,qBACA,cACA,cACA,UACA,eACA,aACA,SACA,QACA,gBACA,WACA,uBACA,uBACA,wBACA,yBACA,qBACA,gBACA,YACA,UACA,cACA,UACA,SACA,gBACA,aACA,cACA,YACA,sBACA,wBACA,uBACA,YACA,YACA,eACA,WACA,aACA,YACA,WACA,mBACA,qBACA,iBACA,YACA,YACA,eACA,eACA,mBACA,UACA,UACA,wBACA,WACA,QACA,YACA,iBACA,aACA,UACA,kBACA,mBACA,4BACA,kCACA,iCACA,sBACA,wBACA,0BACA,6BACA,uBACA,wBACA,gBACA,cACA,kBACA,yBACA,uBACA,8BACA,uBACA,0BACA,0BACA,sBACA,uBACA,2BACA,sBACA,mBACA,oBACA,wBACA,sBACA,qBACA,yBACA,uBACA,yBACA,wBACA,oBACA,qBACA,6BACA,kCACA,4BACA,gCACA,8BACA,4BACA,6BACA,iCACA,oBACA,gBACA,qBACA,iCACA,4BACA,2BACA,2BACA,mBACA,4BACA,4BACA,gCACA,iBACA,4BACA,2BACA,iCACA,+BACA,kCACA,iCACA,kCACA,iBACA,sCACA,0BACA,yBACA,0BACA,gCACA,yBACA,gCACA,+BACA,4BACA,6BACA,+BACA,6BACA,4BACA,0BACA,0BACA,yBACA,2BACA,6BACA,2BACA,2BACA,4BACA,2BACA,+BACA,qBACA,wBACA,2BACA,+BACA,0BACA,kBACA,wBACA,oCACA,uCACA,8BACA,qCACA,+BACA,oCACA,mCACA,mCACA,6BACA,eACA,4BACA,0BACA,mBACA,YACA,UACA,YACA,iBACA,iBACA,kBACA,wBACA,iCACA,sBACA,mBACA,0BACA,WACA,YACA,sBACA,mBACA,mBACA,uBACA,WACA,2BACA,WACA,QACA,cACA,YACA,iBACA,mBACA,mBACA,eACA,cACA,oBACA,YACA,aACA,WACA,SACA,aACA,wBACA,YACA,YACA,mBACA,aACA,aACA,QACA,YACA,gBACA,SACA,SACA,yBACA,iBACA,iBACA,cACA,cACA,YACA,iBACA,SACA,UACA,aACA,UACA,gBACA,aACA,UACA,oBACA,kBACA,cACA,UACA,gBACA,gBACA,6BACA,WACA,qBACA,qBACA,iBACA,UACA,iBACA,YACA,eACA,gBACA,aACA,YACA,UACA,iBACA,cACA,kBACA,iBACA,yBACA,eACA,mBAGJ,CACED,MAAO,KACP3a,KAAM,sBACN4a,QAAS,CACP,QACA,SACA,iBACA,eACA,aACA,gBACA,oBACA,UACA,qBACA,QACA,eACA,UACA,iBACA,kBACA,aACA,YACA,kBACA,UACA,YACA,WACA,sBACA,6BACA,WACA,gBACA,eACA,cACA,yBACA,aACA,iBACA,gBACA,mBACA,yBACA,UACA,gBACA,mBACA,UACA,UACA,oBACA,WACA,gBACA,mBACA,cACA,mBACA,iBACA,WACA,YACA,6BACA,UACA,aACA,gBACA,eACA,UACA,WACA,UACA,eACA,cACA,aACA,oBACA,OACA,oBACA,qBACA,sBACA,oBACA,eACA,mBACA,WACA,YACA,eACA,kBACA,kBACA,aACA,gBACA,QACA,iBACA,cACA,gBACA,aACA,QACA,cACA,mBACA,UACA,eACA,kBACA,YACA,eACA,uBACA,aACA,QACA,oBACA,YACA,2BACA,cACA,YACA,WACA,YACA,WACA,aACA,eACA,WACA,OACA,iBACA,eACA,cACA,gBACA,cACA,gBACA,YACA,iBACA,aACA,kBACA,uBACA,SACA,mBACA,iBACA,iBACA,oBACA,YACA,cACA,oBACA,cACA,aACA,cACA,mBACA,uBACA,mBACA,wBACA,4BACA,kBACA,4BACA,gCACA,2BACA,2BACA,8BACA,8BACA,gBACA,0BACA,0BACA,eACA,gBACA,iBACA,iBACA,2BACA,2BACA,wBACA,eACA,uBACA,WACA,sBACA,iBACA,gBACA,mBACA,QACA,aACA,kBACA,0BACA,QACA,eACA,2BACA,SACA,mBACA,WACA,UACA,YACA,YACA,YACA,YACA,cAGJ,CACED,MAAO,KACP3a,KAAM,OACN4a,QAAS,CACP,gBACA,eACA,eACA,SACA,WACA,kBACA,oBACA,WACA,YACA,iBACA,gBACA,uBACA,uBACA,aACA,eACA,aACA,kBACA,sBACA,iBACA,mBACA,cACA,WAGJ,CACED,MAAO,KACP3a,KAAM,UACN4a,QAAS,CACP,iBACA,SACA,YACA,UACA,4BACA,yBACA,UACA,WACA,aACA,eACA,aACA,cACA,WACA,YACA,eACA,eACA,SACA,SACA,YACA,eACA,sBACA,wBACA,gBACA,WACA,aACA,kBACA,eACA,qBACA,eACA,gBACA,YACA,oBACA,aACA,QACA,cACA,SACA,uBACA,aACA,cACA,aACA,qBACA,gBACA,YACA,YACA,iBACA,qBACA,YACA,gBACA,eACA,WACA,YACA,mBACA,YACA,cACA,uBACA,UACA,uBACA,mBACA,SACA,YACA,4BACA,2BACA,wBACA,cACA,cACA,YACA,yBACA,yBACA,YACA,aACA,sBACA,gBACA,SACA,kBACA,QACA,UACA,WACA,0BACA,cACA,kBACA,2BACA,cACA,YACA,UACA,uBACA,qBACA,uBACA,iBACA,yBACA,2BACA,6BACA,2BACA,6BACA,sBACA,SACA,uBACA,gBACA,YACA,qBACA,SACA,wBACA,cAGJ,CACED,MAAO,KACP3a,KAAM,mBACN4a,QAAS,CACP,gBAGJ,CACED,MAAO,KACP3a,KAAM,aACN4a,QAAS,CACP,iBACA,SACA,gBACA,cACA,YACA,WACA,4BACA,WACA,SACA,YACA,aACA,QACA,UACA,QACA,uBACA,SACA,WACA,iBACA,2BACA,aACA,aACA,sBACA,mBACA,yBACA,SACA,WACA,4BACA,qBACA,cACA,YACA,YACA,cACA,wBACA,eACA,YACA,gBACA,mBACA,aACA,aACA,WACA,0BACA,mBACA,oBACA,WACA,aACA,aACA,gBACA,oBACA,aACA,iBACA,mBACA,QACA,cACA,eACA,cACA,cACA,qBACA,cACA,kBACA,UACA,QACA,QACA,UACA,WACA,4BACA,SACA,WACA,yBACA,UACA,iBACA,eACA,YACA,WACA,WACA,eACA,gBACA,OACA,eACA,WACA,gBACA,aACA,YACA,cACA,YACA,SACA,UACA,YACA,UACA,YACA,aACA,cACA,UACA,aACA,YACA,iBACA,mBACA,cACA,qBACA,cACA,OACA,QACA,kBACA,aACA,SACA,aACA,aACA,SACA,mBACA,QACA,aACA,aACA,iBACA,OACA,iBACA,eACA,WACA,WACA,cACA,cACA,UACA,WACA,eACA,WACA,UACA,SACA,cACA,gBACA,cACA,gBACA,iBACA,WACA,aACA,SACA,WACA,QACA,WACA,eACA,gBACA,iBACA,iBACA,YACA,WACA,QACA,YACA,iBACA,cACA,UACA,WACA,iBACA,8BACA,SACA,QACA,kBACA,cACA,YACA,aACA,aACA,aACA,0BACA,wBACA,6BACA,qBACA,YACA,aACA,6BACA,mBACA,aACA,eACA,gBACA,cACA,aACA,kBACA,uBACA,uBACA,cACA,iBACA,kBACA,eACA,4BACA,4BACA,mBACA,2BACA,iCACA,0BACA,iCACA,2BACA,+BACA,6BACA,6BACA,2BACA,kCACA,2BACA,+BACA,2BACA,gBACA,yBACA,0CACA,mCACA,UACA,YACA,eACA,gBACA,eACA,gBACA,WACA,iBACA,UACA,aACA,WACA,aACA,QACA,UACA,aACA,UACA,WACA,aACA,UACA,aACA,YACA,YACA,iBACA,gBACA,cAGJ,CACED,MAAO,KACP3a,KAAM,aACN4a,QAAS,CACP,eACA,wBACA,aACA,YACA,gBACA,iBACA,YACA,aACA,UACA,UACA,UACA,eACA,YACA,YACA,qBACA,YACA,oBACA,+BACA,cACA,aACA,WACA,YACA,eACA,aACA,SACA,YACA,WACA,yBACA,eACA,YACA,0BACA,aACA,eACA,YACA,aACA,UACA,aACA,6BACA,YACA,aACA,YACA,cACA,uBACA,UACA,UACA,WACA,UACA,QACA,oBACA,gBACA,UACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,MACA,aACA,sBACA,YACA,SACA,WACA,kBACA,YACA,YACA,wBACA,SACA,UACA,aACA,OACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,QACA,YACA,YACA,eACA,YACA,WACA,aACA,cACA,6BACA,WACA,aACA,YACA,kBACA,iBACA,SACA,OACA,SACA,iBACA,mBACA,gBACA,kBACA,eACA,SACA,WACA,aACA,WACA,SACA,UACA,YACA,iBACA,SACA,oBACA,SACA,WACA,WACA,WACA,WACA,aACA,UACA,aACA,aACA,UACA,WACA,WACA,QACA,YACA,iBACA,YACA,cACA,SACA,YACA,aACA,UACA,SACA,mBACA,cACA,cACA,WACA,aACA,YACA,WACA,aACA,aACA,4BACA,2BACA,iBACA,2BACA,4BACA,kBACA,yBACA,sBACA,iBACA,iBACA,0BACA,iCACA,6BACA,0BACA,6BACA,wBACA,gBACA,UACA,cACA,eACA,aACA,UACA,SACA,cACA,WACA,eACA,wBACA,YACA,aACA,cACA,WACA,gBACA,WACA,UACA,cACA,aACA,YACA,aACA,uBACA,YACA,cACA,+BACA,aAGJ,CACED,MAAO,KACP3a,KAAM,UACN4a,QAAS,CACP,cACA,UACA,YACA,SACA,WACA,eACA,UACA,UACA,aACA,YACA,YACA,kBACA,2BACA,cACA,gBAGJ,CACED,MAAO,KACP3a,KAAM,WACN4a,QAAS,CACP,WACA,cACA,SACA,iBACA,UACA,mBACA,YACA,aACA,WACA,0BACA,eACA,cACA,UACA,iBACA,kBACA,yBAWOC,GALG,SAACC,GACjB,IAAMC,EAAUD,GAAM,KACtB,OAAOJ,GAAOA,OAAOtc,MAAK,SAAC7B,GAAD,OAAUA,EAAKoe,QAAUI,EAAQC,iBAAeJ,SCrmK7DK,GALO,CACpB,UACA,cCGaC,GALY,CACzB,QACA,Q,yCCgFaC,GAlFK,SAAC,GAQf,IANFC,EAMC,EANDA,KACAtL,EAKC,EALDA,SACAuL,EAIC,EAJDA,UACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,UAGIC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GAGrB,IAUIO,EAVEC,EAAY9L,GAAY,KACxB+L,EAAaR,GAAa,IAC1BS,EAAcR,GAAe,GAE7BS,EAAS,IAAIC,MAEnBR,EAAOS,OAAS,SAAC7W,GACf2W,EAAOG,IAAM9W,EAAEsH,OAAOzD,QA2DxB,OAvDsB,IAAIqC,SAAQ,SAAC6Q,GAmBjCJ,EAAOE,OAAS,WACd,GAAmB,IAAfG,KAAKviB,OAA+B,IAAhBuiB,KAAK7iB,OAC3BwU,QAAQC,IAAI,sBACP,CA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","file":"static/js/main.4e74e550.chunk.js","sourcesContent":["import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport AssignmentSharpIcon from '@material-ui/icons/AssignmentSharp';\nimport SubtitlesSharpIcon from '@material-ui/icons/SubtitlesSharp';\nimport LibraryBooksSharpIcon from '@material-ui/icons/LibraryBooksSharp';\nimport LocalMallSharpIcon from '@material-ui/icons/LocalMallSharp';\nimport UnarchiveSharpIcon from '@material-ui/icons/UnarchiveSharp';\nimport AssignmentTurnedInSharpIcon from '@material-ui/icons/AssignmentTurnedInSharp';\nimport Container from '@material-ui/core/Container';\nimport { green } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    height: 300,\n    background: green[500],\n  },\n  toolbar: {\n    marginTop: 20,\n    justifyContent: 'space-between',\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1200 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  appBarFooter: {\n    width: '100%',\n    background: green['800'],\n    height: 60,\n    position: 'absolute',\n    bottom: 0,\n  },\n  divTextFooter: {\n    height: 60,\n    display: 'flex',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1200 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    flexDirection: 'row',\n  },\n  divTitle: {\n    flexDirection: 'row',\n  },\n  textUser: {\n    fontSize: 20,\n  },\n  textFooter: {\n    fontSize: 20,\n    // alignSelf: \"center\",\n    color: '#fff',\n  },\n  text: {\n    fontSize: 30,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  link: {\n    // marginRight: \"2rem\",\n    fontSize: 18,\n    // alignSelf: \"center\",\n    color: '#fff',\n    textDecoration: 'none',\n  },\n  currentLink: {\n    borderBottom: '4px white solid',\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  const menuRoutes = [\n    {\n      label: 'ORDENS DE SERVIÇO',\n      pathname: '/ordens-servicos',\n      icon: <LibraryBooksSharpIcon font=\"small\" />,\n    },\n    { label: 'TRIAGEM', pathname: '/triagens', icon: <AssignmentSharpIcon font=\"small\" /> },\n    { label: 'DIAGNÓSTICO', pathname: '/diagnosticos', icon: <SubtitlesSharpIcon font=\"small\" /> },\n    { label: 'DEMANDA', pathname: '/demandas', icon: <LocalMallSharpIcon font=\"small\" /> },\n    {\n      label: 'CALIBRAGEM',\n      pathname: '/calibragem',\n      icon: <AssignmentTurnedInSharpIcon font=\"small\" />,\n    },\n    { label: 'ENTREGA', pathname: '/entregas', icon: <UnarchiveSharpIcon font=\"small\" /> },\n  ];\n\n  const currentPathname = window.location.pathname;\n\n  return (\n    <header>\n      <AppBar\n        position=\"absolute\"\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.divTitle}>\n            <Typography\n              className={classes.text}\n              noWrap\n            >\n              <strong>\n                CENTRAL\n                <br />\n                {' '}\n                DE\n                <br />\n                {' '}\n                VENTILADORES\n              </strong>\n            </Typography>\n          </div>\n          <div>\n            <Typography\n              className={classes.textUser}\n              noWrap\n            >\n              {/* usuario, joe */}\n            </Typography>\n          </div>\n        </Toolbar>\n        <div className={classes.appBarFooter}>\n          <Container>\n            <div className={classes.divTextFooter}>\n              <Grid container alignItems=\"center\" spacing={4}>\n                {menuRoutes.map((item) => (\n                  <Grid\n                    item\n                    key={item.pathname}\n                    className={currentPathname === item.pathname ? classes.currentLink : ''}\n                  >\n                    <Link\n                      to={item.pathname}\n                      className={classes.link}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        {item.icon}\n                        {' '}\n                        <span style={{ marginLeft: '0.5rem' }}>{item.label}</span>\n                      </div>\n                    </Link>\n                  </Grid>\n                ))}\n              </Grid>\n            </div>\n          </Container>\n        </div>\n      </AppBar>\n    </header>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    display: 'flex',\n    position: 'relative',\n    height: 280,\n    background: green[800],\n    flexDirection: 'column',\n  },\n  info: {\n    marginTop: 50,\n    display: 'flex',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    justifyContent: 'space-between',\n    width: 'auto',\n    height: 200,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1200 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n\n  title: {\n    fontSize: 18,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  text: {\n    fontSize: 14,\n    color: '#fff',\n  },\n\n  coluna: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.appBar}>\n      <div className={classes.info}>\n        <div className={classes.coluna}>\n          <Typography className={classes.title} noWrap>\n            Recebimento\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Cadastro\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Material\n          </Typography>\n        </div>\n\n        <div className={classes.coluna}>\n          <Typography className={classes.title} noWrap>\n            Triagem\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Origem\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Modelo\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Situação\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Acessórios\n          </Typography>\n        </div>\n\n        <div className={classes.coluna}>\n          <Typography className={classes.title} noWrap>\n            Diagnóstico\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Ckecklist\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Equipamentos\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Observações\n          </Typography>\n        </div>\n\n        <div className={classes.coluna}>\n          <Typography className={classes.title} noWrap>\n            Avaliação\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Peças\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Acessórios\n          </Typography>\n        </div>\n\n        <div className={classes.coluna}>\n          <Typography className={classes.title} noWrap>\n            Manuntenção\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Checklist\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Equipamento\n          </Typography>\n          <Typography className={classes.text} noWrap>\n            Observações\n          </Typography>\n        </div>\n      </div>\n      <div style={{ alignSelf: 'center' }}>\n        <Typography className={classes.text} noWrap>\n          © 2017 - 2020 – GOVERNO DO ESTADO DO CEARÁ. TODOS OS DIREITOS\n          RESERVADOS - v1.1.4\n        </Typography>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport grey from '@material-ui/core/colors/grey';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Header from './Header';\nimport Footer from './Footer';\n\n\nconst useStyle = makeStyles(() => ({\n  layout: {\n    background: grey[100],\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    minHeight: '100vh',\n    height: '100%',\n  },\n}));\n\nconst Layout = (props) => {\n  const classes = useStyle();\n  const { children } = props;\n  return (\n    <div className={classes.layout}>\n      <Header />\n      {children}\n      <Footer />\n    </div>\n\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Layout;\n","export const listaAcessorios = [\n  'Traquéias',\n  'Blender',\n  'Umidificador',\n  'Jarra',\n  'Válvula exalatória',\n  'Membrana',\n  'Conector \"Y\"',\n  'Conector de Dreno',\n  'Sensor de Fluxo',\n  'Sensor de temperatura',\n  'Linha de pressão proximal',\n  'Pulmão de Teste',\n  'Pedestal',\n  'Braço articulado',\n  'Mangueira de Oxigênio (verde)',\n  'Mangueira de Ar Medicinal (amarela)',\n  'Cabo de Força / Fonte',\n];\n\nexport const Acessorio = (acessorio) => ({\n  descricao: '',\n  acompanha: false,\n  quantidade: 0,\n  estado_de_conservacao: '',\n  ...acessorio,\n});\n\nexport const listaFormAcessorios = (acessorios) => listaAcessorios\n  .sort((a, b) => a.localeCompare(b))\n  .map((item) => Acessorio(acessorios\n    .find((acessorio) => acessorio.descricao === item) || { descricao: item }));\n","import { listaFormAcessorios } from './acessorio';\n\n\nexport const serviceOrderStatus = {\n  diagnostico: 'diagnóstico',\n  triagem: 'triagem',\n  calibragem: 'calibragem',\n  entrega: 'entrega',\n};\n\nexport const ServiceOrderScreening = ({ triagem }) => ({\n  estado_de_conservacao: '',\n  acessorios: [],\n  foto_antes_limpeza: '',\n  foto_apos_limpeza: '',\n  ...triagem || { acessorios: listaFormAcessorios([]) },\n});\n\nexport const ServiceOrderDiagnosis = (diagnostico) => ({\n  resultado_tecnico: '',\n  demanda_servicos: '',\n  observacoes: '',\n  itens: [],\n  ...diagnostico || {},\n});\n\nexport const ServiceOrderCalibration = (calibration) => ({ status: 'descalibrado', ...calibration });\n\nexport const ServiceOrder = (serviceOrder) => ({\n  _id: '',\n  numero_ordem_servico: serviceOrder && serviceOrder.numero_ordem_servico\n    ? serviceOrder.numero_ordem_servico\n    : '',\n  status: '',\n  equipamento_id: '',\n  created_at: new Date(),\n  updated_at: new Date(),\n  ...serviceOrder,\n  triagem: ServiceOrderScreening(\n    serviceOrder && serviceOrder.triagem\n      ? { triagem: serviceOrder.triagem }\n      : { triagem: { acessorios: listaFormAcessorios([]) } },\n  ),\n  diagnostico: ServiceOrderDiagnosis(serviceOrder && serviceOrder.diagnostico\n    ? serviceOrder.diagnostico\n    : {}),\n  calibragem: ServiceOrderCalibration(serviceOrder && serviceOrder.calibragem\n    ? serviceOrder.calibragem\n    : {}),\n});\n","export const itemDiagnosisModel = {\n  tipo: 'pecas',\n  fabricante: '',\n  codigo: '',\n  nome: '',\n  unidade_medida: '',\n  quantidade: 0,\n  descricao: '',\n};\n\nexport const getItemDiagnosis = (item) => ({ ...itemDiagnosisModel, ...item });\n","export const randomIndex = () => `${Math.random().toString(36).substring(2, 15)}-${Math.random()\n  .toString(36)\n  .substring(2, 15)}`;\nexport default randomIndex();\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n} from '@material-ui/core';\nimport { getItemDiagnosis } from '../../models/itensDiagnosticos';\nimport { randomIndex } from '../../utils';\n\n\nconst DiagnosisItemsTablePagination = (props) => {\n  const { items } = props;\n  const rowsPerPage = 5;\n  const [page, setPage] = useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Tipo</TableCell>\n              <TableCell>Nome</TableCell>\n              <TableCell>Fabricante</TableCell>\n              <TableCell>Código</TableCell>\n              <TableCell>Unidade de Medida</TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Descrição</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.sort((a, b) => a - b)\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((item) => {\n                const itemDiag = getItemDiagnosis(item);\n                return (\n                  <TableRow key={randomIndex()}>\n                    <TableCell>{itemDiag.tipo === 'pecas' ? 'Peça' : 'Acessório'}</TableCell>\n                    <TableCell>{itemDiag.nome || ''}</TableCell>\n                    <TableCell>{itemDiag.fabricante || ''}</TableCell>\n                    <TableCell>{itemDiag.codigo || ''}</TableCell>\n                    <TableCell>{itemDiag.unidade_medida || ''}</TableCell>\n                    <TableCell>{itemDiag.quantidade || 0}</TableCell>\n                    <TableCell>{itemDiag.descricao || ''}</TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5]}\n        component=\"div\"\n        count={items.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n      />\n    </>\n  );\n};\n\nDiagnosisItemsTablePagination.propTypes = {\n  items: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default DiagnosisItemsTablePagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport DiagnosisItemsTablePagination from './DiagnosisItemsTablePagination';\n\n\nconst useStyle = makeStyles(() => ({\n  rowItem: {\n    margin: '1rem 0rem',\n  },\n}));\n\nconst DiagnosisCardServiceOrder = (props) => {\n  const classes = useStyle();\n  const { item } = props;\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"h6\">\n            <strong>Diagnóstico:</strong>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\">\n            <strong>Resutlado ténico:</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            {item.diagnostico.resultado_tecnico || '---'}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\">\n            <strong>Demanda de serviços:</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            {item.diagnostico.demanda_servicos || '---'}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\">\n            <strong>Observações:</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            {item.diagnostico.observacoes || '---'}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\">\n            <strong>Acessórios:</strong>\n          </Typography>\n          <DiagnosisItemsTablePagination items={item.diagnostico.itens} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nDiagnosisCardServiceOrder.propTypes = {\n  item: PropTypes.shape({\n    diagnostico: PropTypes.shape({\n      resultado_tecnico: PropTypes.string,\n      demanda_servicos: PropTypes.string,\n      observacoes: PropTypes.string,\n      itens: PropTypes.instanceOf(Array),\n    }),\n  }).isRequired,\n};\n\nexport default DiagnosisCardServiceOrder;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableBody from '@material-ui/core/TableBody';\nimport { Acessorio } from '../../models/acessorio';\nimport { randomIndex } from '../../utils';\n\n\nconst AccessoriesTablePagination = (props) => {\n  const { items } = props;\n  const rowsPerPage = 5;\n  const [page, setPage] = useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Descrição</TableCell>\n              <TableCell>Acompanha</TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Estado de Conservação</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.sort((a) => a)\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((item) => {\n                const accessory = Acessorio(item);\n                return (\n                  <TableRow key={randomIndex()}>\n                    <TableCell>{accessory.descricao || ''}</TableCell>\n                    <TableCell>{accessory.acompanha ? 'Sim' : 'Não'}</TableCell>\n                    <TableCell>{accessory.quantidade || 0}</TableCell>\n                    <TableCell>{accessory.estado_de_conservacao || ''}</TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5]}\n        component=\"div\"\n        count={items.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n      />\n    </>\n  );\n};\n\nAccessoriesTablePagination.propTypes = {\n  items: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default AccessoriesTablePagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport AccessoriesTablePagination from './AccesoriesTablePagination';\n\n\nconst useStyle = makeStyles(() => ({\n  rowItem: {\n    margin: '1rem 0rem',\n  },\n}));\n\nconst ScreeningCardServiceOrder = (props) => {\n  const classes = useStyle();\n  const { item } = props;\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"h6\">\n            <strong>Triagem:</strong>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\">\n            <strong>Acessórios:</strong>\n          </Typography>\n          <AccessoriesTablePagination items={item.triagem.acessorios} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nScreeningCardServiceOrder.propTypes = {\n  item: PropTypes.shape({\n    triagem: PropTypes.shape({\n      acessorios: PropTypes.instanceOf(Array),\n    }),\n  }).isRequired,\n};\n\nexport default ScreeningCardServiceOrder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport moment from 'moment-timezone';\nimport 'moment/locale/pt-br';\n\n\nconst ScreeningEquipment = (props) => {\n  const { equipment } = props;\n  moment.locale('pt-br');\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\"><strong>Equipamento:</strong></Typography>\n        </Grid>\n\n        <Grid item xs={3}>\n          <Typography variant=\"body1\"><strong>Criado em:</strong></Typography>\n          <Typography variant=\"body1\">\n            {moment(equipment.created_at).tz('America/Fortaleza').format('DD/MM/YYYY')}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"body1\">\n            <strong>Última atualização:</strong>\n          </Typography>\n          <Typography variant=\"body1\">\n            {moment(equipment.updated_at).tz('America/Fortaleza').format('DD/MM/YYYY')}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"body1\"><strong>Número de Série:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.numero_de_serie}</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography variant=\"body1\"><strong>Número do Patrimônio:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.numero_do_patrimonio}</Typography>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Tipo:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.tipo}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Marca:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.marca}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Modelo:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.modelo}</Typography>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Fabricante:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.fabricante}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Município de Origem:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.municipio_origem}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Insituição de Origem:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.nome_instituicao_origem}</Typography>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Tipo da instituição de Origem:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.tipo_instituicao_origem}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Nome do Responsável:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.nome_responsavel}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography variant=\"body1\"><strong>Contato do Responsável:</strong></Typography>\n          <Typography variant=\"body1\">{equipment.contato_responsavel}</Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nScreeningEquipment.propTypes = {\n  equipment: PropTypes.shape({\n    created_at: PropTypes.instanceOf(Object),\n    updated_at: PropTypes.instanceOf(Object),\n    numero_de_serie: PropTypes.string,\n    numero_do_patrimonio: PropTypes.string,\n    tipo: PropTypes.string,\n    marca: PropTypes.string,\n    modelo: PropTypes.string,\n    fabricante: PropTypes.string,\n    municipio_origem: PropTypes.string,\n    nome_instituicao_origem: PropTypes.string,\n    tipo_instituicao_origem: PropTypes.string,\n    nome_responsavel: PropTypes.string,\n    contato_responsavel: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ScreeningEquipment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n\nconst useStyle = makeStyles(() => ({\n  rowItem: {\n    margin: '1rem 0rem',\n  },\n}));\n\nconst CalibrationCardService = (props) => {\n  const classes = useStyle();\n  const { item } = props;\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" justify=\"center\">\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"h6\"><strong>Calibragem:</strong></Typography>\n        </Grid>\n        <Grid item xs={12} className={classes.rowItem}>\n          <Typography variant=\"body1\"><strong>Status:</strong></Typography>\n          <Typography variant=\"body2\">{item.calibragem.status || '---'}</Typography>\n        </Grid>\n      </Grid> \n    </>\n  );\n};\n\nCalibrationCardService.propTypes = {\n  item: PropTypes.shape({\n    calibragem: PropTypes.shape({\n      status: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default CalibrationCardService;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Collapse,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport {\n  blue,\n  grey,\n  orange,\n  teal,\n} from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport green from '@material-ui/core/colors/green';\nimport { serviceOrderStatus } from '../../models/serviceOrder';\nimport DiagnosisCardServiceOrder from './DiagnosisCardServiceOrder';\nimport ScreeningCardServiceOrder from './ScreeningCardServiceOrder';\nimport ScreeningEquipment from './ScreeningEquipment';\nimport CalibrationCardService from './CalibrationCardServiceOrder';\n\n\nconst useStyle = makeStyles(() => ({\n  cardItem: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n  cardArea: {\n    padding: '1.25rem',\n  },\n  cardCollaps: {\n    backgroundColor: grey[50],\n    padding: '1.5rem',\n    margin: '1rem',\n  },\n  chips: {\n    padding: 8,\n    borderRadius: '7px',\n    color: 'white',\n    marginRight: '1rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  valueItem: {\n    backgroundColor: 'white',\n    padding: '2px 7px',\n    marginLeft: '0.25rem',\n    borderRadius: '4px',\n  },\n  valueOs: {\n    color: orange[500],\n  },\n  osNumber: {\n    backgroundColor: orange[500],\n    '&:hover': {\n      backgroundColor: orange[700],\n    },\n  },\n  valueStatus: {\n    color: blue[700],\n  },\n  osStatus: {\n    backgroundColor: blue[700],\n    '&:hover': {\n      backgroundColor: blue[900],\n    },\n  },\n  calibrationStatus: {\n    backgroundColor: teal.A700,\n    '&:hover': {\n      backgroundColor: teal.A400,\n    },\n  },\n  valueCalibration: {\n    color: teal.A700,\n  },\n  deliveryDate: {\n    backgroundColor: green.A700,\n    '&:hover': {\n      backgroundColor: green.A400,\n    },\n  },\n  valueDeliveryDate: {\n    color: green.A700,\n  },\n}));\n\nconst ServiceOrderCollapseItem = (props) => {\n  const classes = useStyle();\n  const statusMap = serviceOrderStatus;\n  const {\n    item,\n    deliveryOrders,\n  } = props;\n\n  const hasOrder = deliveryOrders\n    ? deliveryOrders.find((deliveryOrder) => deliveryOrder.equipamentos_id\n      .find((e) => e.$oid === item.equipamento_id.$oid))\n    : false;\n\n  const [expanded, setExpanded] = useState(false);\n\n  function handleExpandClick() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <>\n      <Card className={classes.cardItem}>\n        <CardContent className={classes.cardArea}>\n          <Grid container style={{ marginBottom: '1.5rem' }}>\n            <Grid item xs={12} md=\"auto\" className={`${classes.chips} ${classes.osNumber}`}>\n              <Typography variant=\"body1\">\n                <strong>\n                  OS\n                  <span className={`${classes.valueItem} ${classes.valueOs}`}>\n                    {item.numero_ordem_servico}\n                  </span>\n                </strong>\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md=\"auto\" className={`${classes.chips} ${classes.osStatus}`}>\n              <Typography variant=\"body1\">\n                <strong>\n                  STATUS:\n                  <span className={`${classes.valueItem} ${classes.valueStatus}`}>\n                    {hasOrder\n                      ? statusMap.entrega\n                      : statusMap[item.status]}\n                  </span>\n                </strong>\n              </Typography>\n            </Grid>\n\n            {item.calibragem\n              ? (\n                <Grid\n                  item\n                  xs={12}\n                  md=\"auto\"\n                  className={`${classes.chips} ${classes.calibrationStatus}`}\n                >\n                  <Typography variant=\"body1\">\n                    <strong>\n                      CALIBRAGEM:\n                      <span className={`${classes.valueItem} ${classes.valueCalibration}`}>\n                        {item.calibragem.status}\n                      </span>\n                    </strong>\n                  </Typography>\n                </Grid>\n              )\n              : ''}\n\n\n            {hasOrder\n              ? (\n                <Grid\n                  item\n                  xs={12}\n                  md=\"auto\"\n                  className={`${classes.chips} ${classes.deliveryDate}`}\n                >\n                  <Typography variant=\"body1\">\n                    <strong>\n                      ENTREGUE EM:\n                      <span className={`${classes.valueItem} ${classes.valueDeliveryDate}`}>\n                        {moment(hasOrder.data_entrega.$date)\n                          .tz('America/Fortaleza')\n                          .format('DD/MM/YYYY')}\n                      </span>\n                    </strong>\n                  </Typography>\n                </Grid>\n              )\n              : ''}\n          </Grid>\n\n          <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\n            <Grid item xs={12} md={3}>\n              <Typography variant=\"body1\"><strong>TIPO EQUIPAMENTO:</strong></Typography>\n              <Typography variant=\"body2\">{item.equipamento[0].tipo}</Typography>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Typography variant=\"body1\"><strong>INSTITUIÇÃO DE ORIGEM:</strong></Typography>\n              <Typography variant=\"body2\">{item.equipamento[0].nome_instituicao_origem}</Typography>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Typography variant=\"body1\"><strong>MUNICÍPIO DE ORIGEM:</strong></Typography>\n              <Typography variant=\"body2\">{item.equipamento[0].municipio_origem}</Typography>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Typography variant=\"body1\"><strong>DATA DE CRIAÇÃO</strong></Typography>\n              <Typography variant=\"body2\">\n                {moment(item.created_at.$date).format('DD/MM/YYYY')}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions>\n          <Grid container justify=\"flex-end\">\n            <Grid item xs=\"auto\">\n              <IconButton\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"Exibir mais\"\n              >\n                <ExpandMoreIcon fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </CardActions>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <Card variant=\"outlined\" className={classes.cardCollaps}>\n            <CardContent>\n              <ScreeningEquipment equipment={item.equipamento[0]} />\n              <ScreeningCardServiceOrder item={item} />\n              {item.diagnostico\n                ? <DiagnosisCardServiceOrder item={item} />\n                : <></>}\n              {item.calibragem\n                ? <CalibrationCardService item={item} />\n                : <></>}\n            </CardContent>\n          </Card>\n        </Collapse>\n      </Card>\n    </>\n  );\n};\n\nServiceOrderCollapseItem.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  deliveryOrders: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ServiceOrderCollapseItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\n\n\nconst PercentChip = (props) => {\n  const {\n    percent,\n    bgColor,\n    color,\n  } = props;\n\n  const ColorChip = withStyles(() => ({\n    root: {\n      color,\n      backgroundColor: bgColor,\n      borderRadius: '20px',\n      fontSize: 20,\n    },\n  }))(Chip);\n\n  return <ColorChip label={`${percent}%`} />;\n};\n\nPercentChip.propTypes = {\n  percent: PropTypes.number.isRequired,\n  bgColor: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default PercentChip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport PercentChip from './PercentChip';\n\n\nconst ServiceOrderCardNumber = (props) => {\n  const {\n    title,\n    number,\n    percent,\n    icon,\n    colorIcon,\n    bgIcon,\n    chipColor,\n    bgChipColor,\n  } = props;\n  return (\n    <>\n      <Card>\n        <CardHeader title={title} />\n        <CardContent>\n          <Grid container spacing={4} alignItems=\"center\">\n            <Grid item xs={12}>\n              <Grid container justify=\"space-between\">\n                <Grid item>\n                  <Grid container alignItems=\"center\">\n                    <Grid item>\n                      <Typography variant=\"h3\">\n                        <strong>{number}</strong>\n                      </Typography>\n                    </Grid>\n                    <Grid item style={{ marginLeft: '5px' }}>\n                      <PercentChip\n                        bgColor={bgChipColor}\n                        color={chipColor}\n                        percent={percent}\n                      />\n                    </Grid>\n                  </Grid>\n\n                </Grid>\n                <Grid\n                  item\n                >\n                  <div\n                    style={{\n                      backgroundColor: bgIcon || green[900],\n                      color: colorIcon || 'white',\n                      padding: '10px',\n                    }}\n                  >\n                    {icon}\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nServiceOrderCardNumber.defaultProps = {\n  bgIcon: green[900],\n  colorIcon: 'white',\n  bgChipColor: green[100],\n  chipColor: green[800],\n  icon: <AccountBalanceIcon fontSize=\"large\" />,\n};\n\nServiceOrderCardNumber.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  percent: PropTypes.number.isRequired,\n  icon: PropTypes.instanceOf(Object),\n  colorIcon: PropTypes.string,\n  bgIcon: PropTypes.string,\n  chipColor: PropTypes.string,\n  bgChipColor: PropTypes.string,\n};\n\nexport default ServiceOrderCardNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport ServiceOrderCollapseItem from './ServiceOrderCollapseItem';\nimport ServiceOrderCardNumber from './ServiceOrderCardNumber';\nimport { randomIndex } from '../../utils';\n\n\nconst ServiceOrdersCollapseList = (props) => {\n  const {\n    data,\n    deliveryOrders,\n    ammountDelivery,\n  } = props;\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={3}>\n          <ServiceOrderCardNumber\n            title=\"Registrados\"\n            number={data.length}\n            percent={parseInt(`${Math.floor((data.length / data.length) * 100)}`, 10)}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <ServiceOrderCardNumber\n            title=\"Entregues\"\n            number={ammountDelivery}\n            percent={parseInt(`${Math.floor(((ammountDelivery) / data.length) * 100)}`, 10)}\n          />\n        </Grid>\n        {data.map((item) => (\n          <Grid key={randomIndex()} item xs={12}>\n            <ServiceOrderCollapseItem item={item} deliveryOrders={deliveryOrders} />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nServiceOrdersCollapseList.defaultProps = {\n  ammountDelivery: 0,\n};\n\nServiceOrdersCollapseList.propTypes = {\n  data: PropTypes.instanceOf(Array).isRequired,\n  deliveryOrders: PropTypes.instanceOf(Array).isRequired,\n  ammountDelivery: PropTypes.number,\n};\n\nexport default ServiceOrdersCollapseList;\n","import axios from 'axios';\n\n// const baseUrl = 'https://apicentraldeventiladores.inova.esp.br';\nconst baseUrl = 'https://api.centralventiladores.dev.org.br';\n//\n// const baseUrl = 'http://localhost:5000';\n\nexport const getUrlRequest = (uri) => baseUrl + uri;\n\nexport const getHeadersRequest = () => ({\n  'Access-Control-Allow-Origin': '*',\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n});\n\nexport const getBaseUrl = () => baseUrl;\n\nconst api = axios.create({\n  headers: getHeadersRequest(),\n  baseURL: baseUrl,\n});\n\nexport default api;\n","import api from '../services/api';\nimport {\n  ServiceOrder,\n  ServiceOrderDiagnosis,\n  ServiceOrderScreening,\n} from '../models/serviceOrder';\nimport { itemDiagnosisModel } from '../models/itensDiagnosticos';\nimport { Acessorio } from '../models/acessorio';\n\n\nexport const getServiceOrderByStatus = (status) => api.post(\n  '/api/ordem_servicos/find',\n  {\n    query: {\n      status,\n    },\n  },\n  {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  },\n)\n  .then((response) => response.data);\n\nexport const getAllServiceOrder = () => api.get('/api/ordem_servicos')\n  .then((response) => response.data);\n\nconst getValueFieldScreening = (serviceOrder) => {\n  const modelScreening = ServiceOrderScreening(serviceOrder);\n  const modelAccessory = Acessorio({});\n\n  const doc = {};\n\n  Object.keys(modelScreening).forEach((fieldScreening) => {\n    if (fieldScreening === 'acessorios') {\n      doc.acessorios = [];\n      serviceOrder.triagem.acessorios.forEach((i, indexAccessory) => {\n        const item = {};\n        Object.keys(modelAccessory).forEach((fieldModelAccessory) => {\n          item[fieldModelAccessory] = serviceOrder.triagem\n            .acessorios[indexAccessory][fieldModelAccessory];\n        });\n        doc.acessorios.push(item);\n      });\n    }\n\n    doc[fieldScreening] = serviceOrder.triagem[fieldScreening];\n  });\n\n  return doc;\n};\n\nconst getValueFieldDiagnosis = (serviceOrder) => {\n  const modelDiagnosis = ServiceOrderDiagnosis(serviceOrder.diagnostico || {});\n  const modelItems = itemDiagnosisModel;\n  const doc = {};\n  Object.keys(modelDiagnosis).forEach((fieldDiagnosis) => {\n    if (fieldDiagnosis === 'itens') {\n      doc.itens = [];\n      serviceOrder.diagnostico.itens.forEach((v, indexItem) => {\n        const item = {};\n        Object.keys(modelItems).forEach((fieldModelItem) => {\n          item[fieldModelItem] = serviceOrder.diagnostico.itens[indexItem][fieldModelItem];\n        });\n\n        doc.itens.push(item);\n      });\n    }\n\n    doc[fieldDiagnosis] = serviceOrder.diagnostico[fieldDiagnosis];\n  });\n\n  return doc;\n};\n\nconst getValueField = (serviceOrder, field) => {\n  if (typeof (serviceOrder[field]) === 'object' && serviceOrder[field] !== null && serviceOrder[field].$oid) {\n    return serviceOrder[field].$oid;\n  }\n\n  if (typeof (serviceOrder[field]) === 'object' && serviceOrder[field] !== null && serviceOrder[field].$date) {\n    return new Date(serviceOrder[field].$date);\n  }\n\n  if ((field === 'created_at' || field === 'updated_at') && serviceOrder[field]) {\n    return new Date(serviceOrder[field]);\n  }\n\n  if (field === 'triagem' && serviceOrder[field]) {\n    return getValueFieldScreening(serviceOrder, field);\n  }\n\n  if (field === 'diagnostico' && serviceOrder[field]) {\n    return getValueFieldDiagnosis(serviceOrder);\n  }\n\n  return serviceOrder[field];\n};\n\nexport const mapModelRequestServiceOrder = (serviceOrder) => {\n  const model = ServiceOrder({});\n  Object.keys(model).forEach((field) => {\n    model[field] = getValueField(serviceOrder, field);\n  });\n\n  return model;\n};\n\nexport const saveNewOrderService = (serviceOrder) => {\n  const order = serviceOrder;\n  delete (order._id);\n  return api.post(\n    '/api/ordem_servicos',\n    Object.assign(\n      order,\n      {\n        status: 'triagem',\n        created_at: new Date(),\n        updated_at: new Date(),\n      },\n    ),\n    {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    },\n  )\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const updateServiceOrderRequest = (serviceOrder, id) => {\n  const order = serviceOrder;\n  delete order._id;\n  return api.patch(\n    `/api/ordem_servico/${id}`,\n    Object.assign(order, { updated_at: new Date() }),\n  ).then((result) => result);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Layout from '../../_layout/Layout';\n\n\nconst LoadingBar = (props) => {\n  const { progress } = props;\n\n  return (\n    <>\n      <Layout>\n        <Container style={{ padding: '5rem' }}>\n          <Typography variant=\"h6\">Carregando dados...</Typography>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Container>\n      </Layout>\n    </>\n  );\n};\n\nLoadingBar.propTypes = {\n  progress: PropTypes.number.isRequired,\n};\n\nexport default LoadingBar;\n","export const mapStatus = () => ({\n  entregue: 'Entregue',\n  realocado: 'Realocado',\n});\n\nexport const ToPlace = (destiny) => ({\n  instituicao_destino: '',\n  cidade_destino: '',\n  cnpj_destino: '',\n  endereco_destino: '',\n  nome_responsavel_destino: '',\n  contato_responsavel_destino: '',\n  ...destiny,\n});\n\nexport const PersonTransportation = (person) => ({\n  nome_responsavel_transporte: '',\n  contato_responsavel_transporte: '',\n  ...person,\n});\n\nexport const Delivery = (entrega) => ({\n  equipamentos_id: [entrega.equipamentos_id || ''],\n  tipo: entrega.tipo,\n  ...ToPlace(entrega),\n  ...PersonTransportation(entrega),\n  data_entrega: new Date(),\n  acessorios: [],\n  created_at: entrega.created_at || new Date(),\n  updated_at: entrega.updated_at || new Date(),\n});\n","import api from '../services/api';\nimport { Delivery } from '../models/delivery';\n\n\nconst getFieldValue = (delivery, field) => {\n  if (typeof (delivery[field]) === 'object' && delivery[field] !== null && delivery[field].$oid) {\n    return delivery[field].$oid;\n  }\n\n  if (typeof (delivery[field]) === 'object' && delivery[field] !== null && delivery[field].$date) {\n    return new Date(delivery[field].$date);\n  }\n  if (field === 'created_at' || field === 'updated_at') {\n    return new Date(delivery[field]);\n  }\n\n  return delivery[field];\n};\n\nconst mapModel = (delivery) => {\n  const model = Delivery({});\n\n  Object.keys(model).forEach((field) => {\n    model[field] = getFieldValue(delivery, field);\n  });\n\n  return model;\n};\n\nexport const getAllDeliveryOrders = async () => {\n  try {\n    const response = await api.get('/api/movimentacao');\n\n    return response.data || [];\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const saveDelivery = async (entrega) => {\n  try {\n    const doc = mapModel(entrega);\n    const response = await api.post(\n      '/api/movimentacao',\n      Object.assign(doc, {\n        updated_at: new Date(),\n      }),\n    );\n    return response.data || [];\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const updateEntrega = async (entrega) => {\n  try {\n    const doc = mapModel(entrega);\n    const response = await api.put(\n      `/api/movimentacao/${entrega.id}`,\n      Object.assign(doc, {\n        updated_at: new Date(),\n      }),\n      {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../_layout/Layout';\nimport ServiceOrdersCollapseList from './ServiceOrdersCollapseList';\nimport { getAllServiceOrder } from '../../modelServices/serviceOrderService';\nimport LoadingBar from '../_common/components/LoadingBar';\nimport { getAllDeliveryOrders } from '../../modelServices/deliveryOrderService';\n\n\nconst useStyle = makeStyles((theme) => ({\n  titlePage: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst IndexServiceOrder = () => {\n  const classes = useStyle();\n  const [serviceOrders, setServiceOrders] = useState([]);\n  const [deliveryOrders, setDeliveryOrders] = useState([]);\n  const [ammountDelivery, setAmmountDelivery] = useState([]);\n  const [loadingData, setLoadingData] = useState(true);\n  const [progressLoad, setProgerssLoad] = useState(0);\n\n  const getData = () => {\n    if (loadingData) {\n      setProgerssLoad(80);\n      Promise.all([\n        getAllServiceOrder(),\n        getAllDeliveryOrders(),\n      ])\n        .then((result) => {\n          setProgerssLoad(80);\n          setServiceOrders(result[0]);\n          setDeliveryOrders(result[1]);\n          setAmmountDelivery(\n            result[1]\n              .map((item) => item.equipamentos_id.length)\n              .reduce((a, c) => (a + c), 0),\n          );\n          setLoadingData(false);\n        });\n    }\n  };\n\n  useEffect(getData, [getData]);\n\n  if (loadingData) {\n    return <LoadingBar progress={progressLoad} />;\n  }\n\n  return (\n    <>\n      <Layout>\n        <Container>\n          <Typography variant=\"h5\" className={classes.titlePage}>\n            Ordens de serviços\n          </Typography>\n          <ServiceOrdersCollapseList\n            deliveryOrders={deliveryOrders}\n            data={serviceOrders}\n            ammountDelivery={ammountDelivery}\n          />\n        </Container>\n      </Layout>\n    </>\n  );\n};\n\nexport default IndexServiceOrder;\n","const messageErros = {\n  required: 'Campo obrigatório',\n};\n\nexport default messageErros;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport messageErros from './ErrorMessages';\n\n\nconst ErrorAlertText = (props) => {\n  const { error } = props;\n  const [type, setType] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      setType(error.type);\n      setMessage(error.message);\n    }\n  }, [error]);\n\n  if (!error) {\n    return (<></>);\n  }\n\n  return (\n    <>\n      <Typography\n        variant=\"caption\"\n        component=\"small\"\n        color=\"error\"\n      >\n        {!message || message === ''\n          ? messageErros[type]\n          : message}\n      </Typography>\n    </>\n  );\n};\n\nErrorAlertText.defaultProps = {\n  error: {\n    type: '',\n    message: '',\n  },\n};\nErrorAlertText.propTypes = {\n  error: PropTypes.instanceOf(Object),\n};\n\nexport default ErrorAlertText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ErrorAlertText from '../../_common/alerts/ErrorAlertText';\n\n\nconst CadastroEquipamento = (props) => {\n  const {\n    errors,\n    register,\n    diagnosis,\n    updateDiagnosis,\n  } = props;\n\n  const updateParent = (event) => {\n    event.preventDefault();\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateDiagnosis(doc);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        1. Cadastro De Diagnóstico\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            inputRef={register({ required: true })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={updateParent}\n            value={diagnosis.resultado_tecnico}\n            name=\"resultado_tecnico\"\n            multiline\n            rows=\"6\"\n            id=\"resultadoDoDiagnosticoTecnico\"\n            label=\"Resultado do Diagnostico Técnico\"\n            fullWidth\n          />\n          <ErrorAlertText error={errors.resultado_tecnico} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={updateParent}\n            value={diagnosis.demanda_servicos}\n            name=\"demanda_servicos\"\n            multiline\n            rows=\"6\"\n            id=\"demandaPorServicos\"\n            label=\"Demanda por Servicos\"\n            fullWidth\n          />\n\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={updateParent}\n            value={diagnosis.observacoes}\n            name=\"observacoes\"\n            multiline\n            rows=\"6\"\n            id=\"form-observacoes\"\n            label=\"Observações/Anotações Extras\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nCadastroEquipamento.propTypes = {\n  errors: PropTypes.instanceOf(Object).isRequired,\n  register: PropTypes.func.isRequired,\n  diagnosis: PropTypes.instanceOf(Object).isRequired,\n  updateDiagnosis: PropTypes.func.isRequired,\n};\n\nexport default CadastroEquipamento;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst HeaderFormPage = (props) => {\n  const { serviceOrderNumber } = props;\n  return (\n    <Grid container justify=\"space-between\" style={{ marginTop: '3rem' }}>\n      <Grid item xs={12} sm=\"auto\">\n        <Typography variant=\"h5\" component=\"h5\">\n          Cadastro de Diagnóstico e Demanda por Insumos\n        </Typography>\n        <Typography variant=\"h6\" component=\"h6\">\n          <strong>{`OS Nº: ${serviceOrderNumber || ''}`}</strong>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeaderFormPage.propTypes = {\n  serviceOrderNumber: PropTypes.string.isRequired,\n};\n\nexport default HeaderFormPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport orange from '@material-ui/core/colors/orange';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\n\n\nconst ThemeButton = (props) => {\n  const {\n    children,\n    variant,\n    onClick,\n    startIcon,\n    color,\n    bgColor,\n    hoverColor,\n    borderColor,\n    type,\n    size,\n  } = props;\n\n  const ColorButton = withStyles(() => ({\n    root: {\n      borderRadius: 20,\n      color: color && color !== '' ? color : 'white',\n      backgroundColor: bgColor && bgColor !== '' ? bgColor : orange[600],\n      border: variant === 'outlined' ? `solid 1 px ${borderColor}` : 'none',\n      borderColor: variant === 'outlined' ? `${borderColor}` : 'none',\n      '&:hover': {\n        backgroundColor: hoverColor && hoverColor !== '' ? hoverColor : orange[800],\n        color: color && color !== '' ? color : 'white',\n      },\n    },\n  }))(Button);\n\n  return (\n    <ColorButton\n      type={type}\n      size={size}\n      variant={variant}\n      onClick={onClick}\n      startIcon={startIcon}\n    >\n      {children}\n    </ColorButton>\n  );\n};\n\nThemeButton.defaultProps = {\n  onClick: () => console.log('No Action'),\n  startIcon: <SvgIcon />,\n  type: 'button',\n  size: 'large',\n  variant: 'contained',\n  color: '',\n  bgColor: '',\n  hoverColor: '',\n  borderColor: '',\n};\n\nThemeButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  variant: PropTypes.string,\n  onClick: PropTypes.func,\n  startIcon: PropTypes.instanceOf(Object),\n  color: PropTypes.string,\n  bgColor: PropTypes.string,\n  hoverColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n};\n\nexport default ThemeButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport SaveIcon from '@material-ui/icons/Save';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport TextField from '@material-ui/core/TextField';\nimport { itemDiagnosisModel } from '../../../models/itensDiagnosticos';\nimport ThemeButton from '../../_common/forms/ThemeButton';\nimport ErrorAlertText from '../../_common/alerts/ErrorAlertText';\n\n\nconst CreateNewItem = (props) => {\n  const { addNewItem } = props;\n\n  const { register, errors, triggerValidation } = useForm({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n\n  const [item, setItem] = useState(itemDiagnosisModel);\n\n  const updateItem = (event) => {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    setItem({ ...item, ...doc });\n  };\n\n  const registerItem = async () => {\n    await triggerValidation();\n    if (Object.keys(errors).length === 0) {\n      addNewItem(item);\n      setItem({ ...itemDiagnosisModel });\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        2. Cadastro de Itens\n      </Typography>\n\n      <form>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid item xs={12} md={6}>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Tipo do item</FormLabel>\n              <RadioGroup\n                aria-label=\"tipo-do-item\"\n                name=\"tipo\"\n                value={item.tipo}\n                onChange={updateItem}\n                style={{ flexDirection: 'row' }}\n                required\n              >\n                <FormControlLabel\n                  value=\"pecas\"\n                  name=\"tipo\"\n                  control={<Radio color=\"default\" />}\n                  label=\"Peça\"\n                />\n                <FormControlLabel\n                  value=\"acessorio\"\n                  name=\"tipo\"\n                  control={<Radio color=\"default\" />}\n                  label=\"Acessório\"\n                />\n                <FormControlLabel\n                  value=\"insumo\"\n                  name=\"tipo\"\n                  control={<Radio color=\"default\" />}\n                  label=\"Insumo\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              value={item.fabricante}\n              name=\"fabricante\"\n              label=\"Fabricante\"\n              onChange={updateItem}\n            />\n            <ErrorAlertText error={errors.fabricante} />\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <TextField\n              fullWidth\n              value={item.codigo}\n              label=\"Código do item\"\n              onChange={updateItem}\n              name=\"codigo\"\n            />\n            <ErrorAlertText error={errors.codigo} />\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <TextField\n              inputRef={register({ required: true })}\n              fullWidth\n              value={item.nome}\n              label=\"Nome do item\"\n              onChange={updateItem}\n              name=\"nome\"\n              required\n            />\n            <ErrorAlertText error={errors.nome} />\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <TextField\n              inputRef={register({ required: true })}\n              fullWidth\n              value={item.unidade_medida}\n              label=\"Unidade de medida\"\n              onChange={updateItem}\n              name=\"unidade_medida\"\n              required\n            />\n            <ErrorAlertText error={errors.unidade_medida} />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <TextField\n              inputRef={register({ required: true })}\n              fullWidth\n              value={item.quantidade}\n              label=\"Quantidade\"\n              onChange={updateItem}\n              name=\"quantidade\"\n              type=\"number\"\n              required\n            />\n            <ErrorAlertText error={errors.quantidade} />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              value={item.descricao}\n              label=\"Descrição do Item\"\n              onChange={updateItem}\n              name=\"descricao\"\n            />\n          </Grid>\n        </Grid>\n\n\n        <Grid container justify=\"flex-end\" style={{ marginTop: '2rem' }}>\n          <Grid item xs=\"auto\">\n            <ThemeButton onClick={registerItem} startIcon={<SaveIcon />}>\n              ADICIONAR NOVO ITEM\n            </ThemeButton>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n};\n\nCreateNewItem.propTypes = {\n  addNewItem: PropTypes.func.isRequired,\n};\n\nexport default CreateNewItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Chip } from '@material-ui/core';\n\n\nconst ChipStyled = (props) => {\n  const {\n    color,\n    bgColor,\n    hoverColor,\n    deleteIcon,\n    deleteIconColor,\n    deleteIconBgColor,\n    iconBgColor,\n    iconColor,\n    size,\n    label,\n    onDelete,\n  } = props;\n\n  const ColoredChipedStyled = withStyles((theme) => ({\n    root: {\n      color,\n      backgroundColor: bgColor,\n      '&:hover': {\n        backgroundColor: hoverColor,\n      },\n    },\n    icon: {\n      color: iconColor && iconColor !== ''\n        ? iconColor\n        : theme.colorPrimary,\n      backgroundColor: iconBgColor && iconBgColor !== ''\n        ? iconBgColor\n        : theme.colorPrimary,\n    },\n    iconSmall: {\n      color: iconColor && iconColor !== ''\n        ? iconColor\n        : theme.colorPrimary,\n      backgroundColor: iconBgColor && iconBgColor !== ''\n        ? iconBgColor\n        : theme.colorPrimary,\n    },\n    deleteIcon: {\n      color: deleteIconColor && deleteIconColor !== ''\n        ? deleteIconColor\n        : theme.colorPrimary,\n      backgroundColor: deleteIconBgColor && deleteIconBgColor !== ''\n        ? deleteIconBgColor\n        : theme.colorPrimary,\n    },\n  }))(Chip);\n\n  return (\n    <>\n      <ColoredChipedStyled\n        deleteIcon={deleteIcon}\n        size={size}\n        label={label}\n        style={{ color: '#ddddd' }}\n        onDelete={onDelete}\n      />\n    </>\n  );\n};\n\nChipStyled.defaultProps = {\n  deleteIcon: (<></>),\n  deleteIconColor: '',\n  deleteIconBgColor: '',\n  onDelete: () => false,\n  iconBgColor: '',\n  iconColor: '',\n  hoverColor: '',\n};\n\nChipStyled.propTypes = {\n  color: PropTypes.string.isRequired,\n  bgColor: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  hoverColor: PropTypes.string,\n  deleteIcon: PropTypes.instanceOf(Object),\n  deleteIconColor: PropTypes.string,\n  deleteIconBgColor: PropTypes.string,\n  iconBgColor: PropTypes.string,\n  iconColor: PropTypes.string,\n};\n\nexport default ChipStyled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\n\nconst useStyles = makeStyles((theme) => ({\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n  customWidth: {\n    maxWidth: 500,\n    fontSize: 15,\n  },\n}));\n\nconst TooltipInfo = (props) => {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleTooltipClose = () => {\n    setOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpen(true);\n  };\n  return (\n    <ClickAwayListener onClickAway={handleTooltipClose}>\n      <div>\n        <Tooltip\n          placement=\"right\"\n          PopperProps={{\n            disablePortal: true,\n          }}\n          onClose={handleTooltipClose}\n          open={open}\n          disableFocusListener\n          disableHoverListener\n          disableTouchListener\n          title={\n            <React.Fragment>\n              {children}\n            </React.Fragment>\n          }\n          classes={{ tooltip: classes.customWidth }}\n        >\n          <IconButton\n            onClick={handleTooltipOpen}\n            aria-label=\"info\"\n          >\n            <InfoIcon style={{ fontSize: 20 }} />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </ClickAwayListener>\n  );\n};\n\nTooltipInfo.propTypes = {\n  children: PropTypes.instanceOf(Object),\n};\n\nexport default TooltipInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst ColorIconButton = (props) => {\n  const {\n    item,\n    action,\n    name,\n    icon,\n    disabled,\n  } = props;\n\n  const ColoredIconButton = withStyles(() => ({\n    root: {\n      color: icon.color || 'white',\n      backgroundColor: icon.bgColor || orange[500],\n      '&:hover': {\n        backgroundColor: icon.hoverColor || orange[700],\n      },\n    },\n  }))(IconButton);\n\n  return (\n    <>\n      <ColoredIconButton\n        disabled={disabled}\n        title={name}\n        onClick={() => action(item)}\n        size={icon.size || 'small'}\n      >\n        {icon.icon}\n      </ColoredIconButton>\n    </>\n  );\n};\n\nexport function helperPropsColorIconButton(name, action, color, bgColor, hoverColor, icon, size) {\n  return {\n    name,\n    action,\n    icon: {\n      color,\n      bgColor,\n      hoverColor,\n      icon,\n      size: size || 'small',\n    },\n  };\n}\n\nColorIconButton.defaultProps = {\n  disabled: false,\n};\n\nColorIconButton.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  action: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  icon: PropTypes.instanceOf(Object).isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport default ColorIconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { green } from '@material-ui/core/colors';\nimport {\n  Grid,\n  TableCell,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport ColorIconButton from '../forms/ColorIconButton';\n\n\nconst LabelInput = (props) => {\n  const {\n    name,\n    value,\n    action,\n    label,\n  } = props;\n  const [showInput, setShowInput] = React.useState(false);\n  const [currentValue, setCurrentValue] = React.useState('');\n\n  const icons = {\n    done: {\n      icon: <DoneIcon fontSize=\"small\" />,\n      color: green[100],\n      bgColor: green[600],\n      hoverColor: green[800],\n    },\n  };\n\n  function changeInput() {\n    if (!showInput) {\n      setCurrentValue(value);\n      setShowInput(true);\n    }\n  }\n\n  function updateParent() {\n    action(currentValue);\n  }\n\n  return (\n    <>\n      <TableCell onClick={changeInput}>\n        {showInput\n          ? (\n            <>\n              <Grid container>\n                <Grid item xs>\n                  <TextField\n                    onChange={(event) => setCurrentValue(event.target.value)}\n                    fullWidth\n                    label={label}\n                    name={name}\n                    value={currentValue}\n                  />\n                </Grid>\n                <Grid item xs=\"auto\">\n                  <ColorIconButton\n                    action={updateParent}\n                    name=\"Aceitar\"\n                    icon={icons.done}\n                    item={{ value }}\n                  />\n                </Grid>\n              </Grid>\n\n            </>\n          )\n          : (\n            <>\n              <Typography variant=\"subtitle2\">\n                {currentValue !== ''\n                  ? currentValue\n                  : value}\n              </Typography>\n            </>\n          )}\n      </TableCell>\n    </>\n  );\n};\n\nLabelInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default LabelInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport EditIcon from '@material-ui/icons/Edit';\nimport orange from '@material-ui/core/colors/orange';\nimport TooptipInfo from '../../_common/components/TooltipInfo';\nimport LabelInput from '../../_common/components/LabelInput';\nimport ColorIconButton from '../../_common/forms/ColorIconButton';\nimport { randomIndex } from '../../../utils';\n\n\nconst RowTableItem = (props) => {\n  const {\n    index,\n    headTable,\n    updateParent,\n    data,\n    openModelEditDescription,\n  } = props;\n\n  const radioItems = [\n    { value: 'pecas', label: 'Peças' },\n    { value: 'acessorio', label: 'Acessórios' },\n    { value: 'insumo', label: 'Insumo' },\n  ];\n\n  return (\n    <>\n      <TableRow>\n        {\n          headTable.map(\n            (head) => {\n              if (head.id === 'tipo') {\n                return (\n                  <TableCell key={randomIndex()}>\n                    <TextField\n                      select\n                      label=\"\"\n                      value={data[head.id]}\n                      onChange={(event) => updateParent(event.target.value, index, head.id)}\n                      name=\"tipo\"\n                    >\n                      {radioItems.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </TableCell>\n                );\n              }\n\n              return (\n                <LabelInput\n                  key={randomIndex()}\n                  label=\"\"\n                  name={head.id}\n                  action={(value) => updateParent(value, index, head.id)}\n                  value={`${data[head.id]}`}\n                />\n              );\n            },\n          )\n        }\n        <TableCell size=\"small\" align=\"right\">\n          <Grid container spacing={1} justify=\"flex-end\" alignItems=\"center\">\n            <Grid item>\n              <ColorIconButton\n                action={openModelEditDescription}\n                item={{ index }}\n                icon={{\n                  icon: <EditIcon fontSize=\"small\" />,\n                  size: 'small',\n                  bgColor: 'white',\n                  color: orange[500],\n                  hoverColor: orange[50],\n                }}\n                name=\"Editar Descrição\"\n              />\n            </Grid>\n            <Grid item>\n              <TooptipInfo icon={<InfoIcon />}>\n                <Typography variant=\"subtitle1\">\n                  {data.descricao}\n                </Typography>\n              </TooptipInfo>\n            </Grid>\n          </Grid>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nRowTableItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  headTable: PropTypes.instanceOf(Array).isRequired,\n  updateParent: PropTypes.func.isRequired,\n  data: PropTypes.instanceOf(Object).isRequired,\n  openModelEditDescription: PropTypes.func.isRequired,\n};\n\nexport default RowTableItem;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n\nconst FormModalDescription = (props) => {\n  const {\n    open,\n    item,\n    handleClose,\n    updateValue,\n  } = props;\n\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if (item && item.descricao && item.descricao !== '') {\n      setDescription(item);\n    }\n  }, [item]);\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Editar Descrição</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Digite a descrição para o item\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Descrição\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={() => updateValue(description)} color=\"primary\">\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nFormModalDescription.propTypes = {\n  open: PropTypes.bool.isRequired,\n  item: PropTypes.instanceOf(Object).isRequired,\n  handleClose: PropTypes.func.isRequired,\n  updateValue: PropTypes.func.isRequired,\n};\n\nexport default FormModalDescription;\n","import React, { useState } from 'react';\nimport PropType from 'prop-types';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { grey } from '@material-ui/core/colors';\nimport ChipStyled from '../../_common/components/ChipStyled';\nimport RowTableItem from './RowTableItem';\nimport FormModalDescription from './FormModalDescription';\nimport { randomIndex } from '../../../utils';\n\n\nconst TableFormRegisteredItems = (props) => {\n  const {\n    updateItemsFromTable,\n    items,\n  } = props;\n\n  const [open, setOpen] = useState(false);\n  const [itemEdit, setItemEdit] = useState({});\n  const [indexEdit, setIndexEdit] = useState(0);\n\n  const headTable = [\n    { id: 'tipo', name: 'Tipo' },\n    { id: 'nome', name: 'Nome do item' },\n    { id: 'unidade_medida', name: 'Unidade' },\n    { id: 'quantidade', name: 'Quantidade' },\n    { id: 'fabricante', name: 'Fabricante' },\n    { id: 'codigo', name: 'Codigo' },\n  ];\n\n  const updateParent = (value, index, field) => {\n    updateItemsFromTable(value, index, field);\n  };\n\n  const openModelEditDescription = (event) => {\n    const { index } = event;\n    setItemEdit(items[index]);\n    setIndexEdit(index);\n    setOpen(true);\n  };\n\n  const updateDescription = (description) => {\n    updateParent(description, indexEdit, 'descricao');\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table\n          size=\"small\"\n          aria-label=\"Tabela de itens cadastrados\"\n        >\n          <TableHead>\n            <TableRow>\n              {headTable.map((item) => (\n                <TableCell key={randomIndex()}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell align=\"right\">\n                <ChipStyled\n                  color=\"white\"\n                  bgColor={grey[500]}\n                  deleteIconColor=\"white\"\n                  deleteIconBgColor={grey[500]}\n                  deleteIcon={<InfoIcon />}\n                  size=\"small\"\n                  label=\"Descrição\"\n                  style={{ color: '#ddddd' }}\n                  onDelete={() => false}\n                />\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.map((item, index) => (\n              <RowTableItem\n                openModelEditDescription={openModelEditDescription}\n                key={randomIndex()}\n                headTable={headTable}\n                updateParent={updateParent}\n                index={index}\n                data={item}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <FormModalDescription\n        item={itemEdit}\n        open={open}\n        handleClose={handleClose}\n        updateValue={updateDescription}\n      />\n    </>\n  );\n};\n\nTableFormRegisteredItems.propTypes = {\n  items: PropType.instanceOf(Array).isRequired,\n  updateItemsFromTable: PropType.func.isRequired,\n};\n\nexport default TableFormRegisteredItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableFormRegisteredItems from './TableFormRegisteredItems';\n\n\nconst FormRegisteredItems = (props) => {\n  const {\n    items,\n    updateItemsFromTable,\n  } = props;\n\n  return (\n    <>\n      <TableFormRegisteredItems\n        items={items}\n        updateItemsFromTable={updateItemsFromTable}\n      />\n    </>\n  );\n};\n\nFormRegisteredItems.propTypes = {\n  items: PropTypes.instanceOf(Array).isRequired,\n  updateItemsFromTable: PropTypes.func.isRequired,\n};\n\nexport default FormRegisteredItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport CadastroDiagnostico from './CadastroDiagnostico';\nimport HeaderFormPage from './HeaderFormPage';\nimport CadastroItens from './CreateNewItem';\nimport FormRegisteredItems from './FormRegisteredItems';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst FormDiagnosis = (props) => {\n  const classes = useStyles();\n  const { register, errors } = useForm({ mode: 'onBlur', reValidateMode: 'onChange' });\n  const {\n    serviceOrder,\n    updateServiceForm,\n  } = props;\n\n  const updateServiceOrderDiagnosis = (value) => {\n    const diagnosis = { ...serviceOrder.diagnostico, ...value };\n    updateServiceForm({ diagnostico: diagnosis });\n  };\n\n  const addNewItem = (item) => {\n    const items = serviceOrder.diagnostico && serviceOrder.diagnostico.itens\n      ? serviceOrder.diagnostico.itens.slice()\n      : [];\n\n    items.push(item);\n    updateServiceOrderDiagnosis({ itens: items });\n  };\n\n  const updateItemsFromTable = (value, index, field) => {\n    const items = serviceOrder.diagnostico.itens;\n    items[index][field] = value;\n    updateServiceOrderDiagnosis({ itens: items });\n  };\n\n  const getServiceOrderItems = () => (serviceOrder && serviceOrder.diagnostico\n  && serviceOrder.diagnostico.itens\n    ? serviceOrder.diagnostico.itens\n    : []);\n\n  return (\n    <>\n      <CssBaseline />\n\n      <Container>\n        <HeaderFormPage serviceOrderNumber={serviceOrder.numero_ordem_servico} />\n\n        <Paper className={classes.paper}>\n          <CadastroDiagnostico\n            register={register}\n            errors={errors}\n            diagnosis={serviceOrder && serviceOrder.diagnostico ? serviceOrder.diagnostico : {}}\n            updateDiagnosis={updateServiceOrderDiagnosis}\n          />\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <CadastroItens addNewItem={addNewItem} />\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Typography\n            variant=\"h6\"\n            gutterBottom\n            component=\"h6\"\n          >\n            2.1 PEÇAS E ACESSÓRIOS CADASTRADOS\n          </Typography>\n          <FormRegisteredItems\n            items={getServiceOrderItems()}\n            updateItemsFromTable={updateItemsFromTable}\n          />\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nFormDiagnosis.propTypes = {\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n  updateServiceForm: PropTypes.func.isRequired,\n};\n\nexport default FormDiagnosis;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormDiagnosis from './FormDiagnosis';\nimport Layout from '../../_layout/Layout';\n\n\nconst IndexFormDiagnosis = (props) => {\n  const { serviceOrder } = props;\n  if (!serviceOrder) {\n    return <></>;\n  }\n\n  return (\n    <Layout>\n      <FormDiagnosis data={serviceOrder} />\n    </Layout>\n  );\n};\n\nIndexFormDiagnosis.propTypes = {\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default IndexFormDiagnosis;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  highlight: {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.light, 0.85),\n  },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst ActionBarLayout = (props) => {\n  const classes = useStyles();\n  const {\n    dataChecked,\n    action,\n    textButton,\n    titleBar,\n    ammount,\n  } = props;\n\n  return (\n    <Toolbar className={`${classes.root} ${ammount > 0 ? classes.highlight : ''}`}>\n      {ammount > 0\n        ? (\n          <Typography\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {ammount}\n            {ammount > 1 ? 'Itens' : 'Item'}\n            selecionados\n          </Typography>\n        )\n        : (\n          <Typography\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {titleBar}\n          </Typography>\n        )}\n\n      {ammount > 0\n        ? (\n          <Tooltip title=\"Gerar Ordem Serviço\">\n            <Button\n              onClick={(event) => action(Object.keys(dataChecked), event)}\n              variant=\"outlined\"\n            >\n              {textButton}\n            </Button>\n          </Tooltip>\n        )\n        : (\n          <Button\n            disabled\n            variant=\"outlined\"\n          >\n            {textButton}\n          </Button>\n        )}\n\n    </Toolbar>\n  );\n};\n\nActionBarLayout.defaultProps = {\n  dataChecked: {},\n};\n\nActionBarLayout.propTypes = {\n  textButton: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n  dataChecked: PropTypes.instanceOf(Object),\n  titleBar: PropTypes.string.isRequired,\n  ammount: PropTypes.number.isRequired,\n};\n\nexport default ActionBarLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableHead } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst HeaderTableLayout = (props) => {\n  const {\n    headerData,\n    checkAllRow,\n    hasActions,\n    amountChecked,\n    amount,\n  } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\" align=\"center\">\n          <Checkbox\n            indeterminate={amountChecked > 0 && amountChecked < amount}\n            checked={amount > 0 && amountChecked === amount}\n            onChange={() => checkAllRow(amountChecked > 0)}\n          />\n        </TableCell>\n        {\n          headerData.map((item) => (\n            <TableCell\n              key={item.id}\n              align=\"left\"\n              padding=\"default\"\n            >\n              {item.name}\n            </TableCell>\n          ))\n        }\n        {hasActions ? <TableCell>Ações</TableCell> : <></>}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nHeaderTableLayout.defaultProps = {\n  amountChecked: 0,\n  amount: 0,\n  hasActions: false,\n};\n\nHeaderTableLayout.propTypes = {\n  headerData: PropTypes.instanceOf(Array).isRequired,\n  checkAllRow: PropTypes.func.isRequired,\n  hasActions: PropTypes.bool,\n  amountChecked: PropTypes.number,\n  amount: PropTypes.number,\n};\n\nexport default HeaderTableLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport ColorIconButton from '../forms/ColorIconButton';\n\n\nconst isChecked = (checkedData, field) => Object.prototype.hasOwnProperty.call(checkedData, field)\n  && checkedData[field];\n\nconst BodyTableLayout = (props) => {\n  const {\n    data,\n    headerKeys,\n    checkSelectedRow,\n    selectKeyField,\n    hasActions,\n    actions,\n    checkedData,\n  } = props;\n\n  return (\n    <TableBody>\n      {data.map((item, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`;\n        return (\n          <TableRow\n            key={labelId}\n            hover\n            role=\"checkbox\"\n            tabIndex={-1}\n            aria-checked={checkedData[item[selectKeyField]]}\n            selected={checkedData[item[selectKeyField]]}\n          >\n            <TableCell padding=\"checkbox\">\n              <FormControl>\n                <Checkbox\n                  onClick={(event) => checkSelectedRow(item[selectKeyField], event.target.checked)}\n                  checked={isChecked(checkedData, item[selectKeyField])}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </FormControl>\n            </TableCell>\n            {headerKeys.map((key) => (\n              <TableCell key={key}>{item[key].toString() || ''}</TableCell>\n            ))}\n            {hasActions\n              ? (\n                <TableCell>\n                  {actions.map((action) => (\n                    <ColorIconButton\n                      key={Math.round(Math.random() * 100000)}\n                      disabled={isChecked(checkedData, item[selectKeyField])}\n                      item={item}\n                      action={() => action.handleEvent(item)}\n                      name={action.name}\n                      bgColor={action.bgColor}\n                      hoverColor={action.hoverColor}\n                      icon={action.icon}\n                    />\n                  ))}\n                </TableCell>\n              )\n              : (<></>)}\n          </TableRow>\n        );\n      })}\n    </TableBody>\n  );\n};\n\nBodyTableLayout.defaultProps = {\n  hasActions: false,\n  actions: [],\n  checkedData: {},\n};\n\nBodyTableLayout.propTypes = {\n  data: PropTypes.instanceOf(Array).isRequired,\n  headerKeys: PropTypes.instanceOf(Array).isRequired,\n  checkSelectedRow: PropTypes.func.isRequired,\n  selectKeyField: PropTypes.string.isRequired,\n  hasActions: PropTypes.bool,\n  actions: PropTypes.instanceOf(Array),\n  checkedData: PropTypes.instanceOf(Object),\n};\n\nexport default BodyTableLayout;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport ActionBarLayout from './ActionBarLayout';\nimport HeaderTableLayout from './HeaderTableLayout';\nimport BodyTableLayout from './BodyTableLayout';\n\n\nconst TableCheckedList = (props) => {\n  const [hasActions, setHasActions] = useState(false);\n  const [checkedData, setCheckedData] = useState({});\n  const [ammountChecked, setAmmountChecked] = useState(0);\n\n  const {\n    actions,\n    dataTable,\n    selectKeyField,\n    headerTable,\n    actionFunction,\n    actionBarTitle,\n    actionBarTextButton,\n  } = props;\n\n  useEffect(() => {\n    if (actions && actions.length > 0) {\n      setHasActions(true);\n    }\n  }, [actions]);\n\n  function updateAmmountChecked() {\n    setAmmountChecked(Object.values(checkedData).filter((item) => item === true).length);\n  }\n\n  function checkSelectedRow(keyValue, check) {\n    const checking = {};\n    checking[keyValue] = check;\n    setCheckedData(Object.assign(checkedData, checking));\n    updateAmmountChecked();\n  }\n\n  function checkAllSelectedRows(checked) {\n    const checking = {};\n    dataTable.forEach((item) => {\n      checking[item[selectKeyField]] = !checked;\n    });\n    setCheckedData(Object.assign(checkedData, checking));\n    updateAmmountChecked();\n  }\n\n  return (\n    <div style={{ marginTop: '15px' }}>\n      <ActionBarLayout\n        dataChecked={checkedData}\n        ammount={ammountChecked}\n        action={actionFunction}\n        titleBar={actionBarTitle}\n        textButton={actionBarTextButton}\n      />\n      <TableContainer>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          aria-label=\"enhanced table\"\n        >\n          <HeaderTableLayout\n            hasActions={hasActions}\n            headerData={headerTable}\n            checkAllRow={checkAllSelectedRows}\n            amount={dataTable.length}\n            amountChecked={Object.values(checkedData).filter((item) => item).length}\n          />\n          <BodyTableLayout\n            checkedData={checkedData}\n            hasActions={hasActions}\n            actions={actions}\n            data={dataTable}\n            selectKeyField={selectKeyField}\n            headerKeys={headerTable.map((item) => item.id)}\n            checkSelectedRow={checkSelectedRow}\n          />\n        </Table>\n      </TableContainer>\n      <ActionBarLayout\n        dataChecked={checkedData}\n        ammount={ammountChecked}\n        action={actionFunction}\n        titleBar={actionBarTitle}\n        textButton={actionBarTextButton}\n      />\n    </div>\n  );\n};\n\nTableCheckedList.defaultProps = {\n  actions: [],\n};\n\nTableCheckedList.propTypes = {\n  dataTable: PropTypes.instanceOf(Array).isRequired,\n  headerTable: PropTypes.instanceOf(Array).isRequired,\n  actionFunction: PropTypes.func.isRequired,\n  actionBarTitle: PropTypes.string.isRequired,\n  actionBarTextButton: PropTypes.string.isRequired,\n  selectKeyField: PropTypes.string.isRequired,\n  actions: PropTypes.instanceOf(Array),\n};\n\nexport default TableCheckedList;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment-timezone';\nimport Paper from '@material-ui/core/Paper';\nimport { orange } from '@material-ui/core/colors';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TableCheckedList from '../_common/SelectableTable/TableCheckedList';\n\n\nconst IndexScreening = (props) => {\n  const history = useHistory();\n  const selectKeyField = 'numero_ordem_servico';\n\n  const { serviceOrders, editScreening } = props;\n\n  const [screening, setScreening] = useState([]);\n  const [dataTable, setDataTable] = useState([]);\n  const [load, setLoad] = useState(true);\n\n  const headerData = [\n    { id: 'numero_ordem_servico', name: 'Ordem de Serviço' },\n    { id: 'numero_de_serie', name: 'Número de Série' },\n    { id: 'marca', name: 'Marca' },\n    { id: 'modelo', name: 'Modelo' },\n    { id: 'origem', name: 'Origem' },\n    { id: 'created_at', name: 'Data de criação' },\n  ];\n\n  const actions = [\n    {\n      name: 'Editar',\n      handleEvent: editScreening,\n      icon: {\n        bgColor: orange[500],\n        hoverColor: orange[700],\n        icon: <EditIcon />,\n      },\n    },\n  ];\n\n  function defineData() {\n    if (!serviceOrders) return;\n    if (!load) return;\n\n    setScreening(serviceOrders);\n    setDataTable(\n      serviceOrders\n        .sort((a, b) => {\n          let orderA = a;\n          let orderB = b;\n          if (\n            typeof a.created_at === 'object'\n            && a.created_at\n            && a.created_at.$date\n          ) {\n            orderA = a.created_at.$date;\n          }\n          if (\n            typeof b.created_at === 'object'\n            && b.created_at\n            && b.created_at.$date\n          ) {\n            orderB = b.created_at.$date;\n          }\n          return new Date(orderB) - new Date(orderA);\n        })\n        .map((item) => {\n          const newItem = { ...item };\n          const equip = item.equipamento[0] || {};\n          if (\n            typeof item.created_at === 'object'\n            && item.created_at\n            && item.created_at.$date\n          ) {\n            newItem.created_at = item.created_at.$date;\n          }\n          return {\n            numero_ordem_servico: item.numero_ordem_servico,\n            marca: equip.marca || '',\n            modelo: equip.modelo || '',\n            instituicao_de_origem: equip.instituicao_de_origem || '',\n            numero_de_serie: equip.numero_de_serie || '',\n            origem: equip.nome_instituicao_origem || '',\n            created_at: moment\n              .tz(new Date(newItem.created_at), 'America/Fortaleza')\n              .format('DD/MM/Y'),\n          };\n        }),\n    );\n    setLoad(false);\n  }\n\n  const actionPrint = (data) => {\n    history.push(\n      {\n        pathname: '/osprint',\n        state: {\n          data: screening\n            .filter((item) => data\n              .find((d) => d === item.numero_ordem_servico)),\n        },\n      }, [screening],\n    );\n  };\n\n  useEffect(defineData, [defineData, serviceOrders]);\n\n  if (load) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper>\n        <TableCheckedList\n          actions={actions}\n          dataTable={dataTable}\n          selectKeyField={selectKeyField}\n          headerTable={headerData}\n          actionFunction={actionPrint}\n          actionBarTitle=\"Lista de Equipamento (Nenhum item selecionado)\"\n          actionBarTextButton=\"Visualizar Ordem de Serviços\"\n        />\n      </Paper>\n    </>\n  );\n};\n\nIndexScreening.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  editScreening: PropTypes.func.isRequired,\n};\n\nexport default IndexScreening;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst TabPanel = (props) => {\n  const {\n    children,\n    value,\n    index,\n  } = props;\n\n  return (\n    <div hidden={value !== index}>\n      <Grid container>\n        <Grid item xs={12}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.instanceOf(Object).isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default TabPanel;\n","export const accessoryConservationStateList = [\n  'Bom', 'Regular', 'Ruim',\n];\n\nexport const accessoryMapOptionsConservationState = () => accessoryConservationStateList\n  .map((item) => ({ label: item, value: item }));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { accessoryMapOptionsConservationState } from '../../../models/conservationState';\nimport { randomIndex } from '../../../utils';\n\n\nconst AccessoryFormRow = (props) => {\n  const {\n    acessorio,\n    atualizarAcessorio,\n    removerLinha,\n    index,\n  } = props;\n  const conservationOption = accessoryMapOptionsConservationState();\n\n  const atualizarAcessorioParent = (event) => {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    atualizarAcessorio(index, doc);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"flex-start\"\n      alignItems=\"flex-end\"\n    >\n      <Grid\n        item\n        xs={6}\n        sm={5}\n      >\n        <TextField\n          required\n          onChange={atualizarAcessorioParent}\n          value={acessorio.descricao}\n          name=\"descricao\"\n          label=\"Descrição\"\n          fullWidth\n        />\n      </Grid>\n      <Grid\n        item\n        xs={6}\n        sm={1}\n      >\n        <FormControl fullWidth>\n          <InputLabel>Acompanha</InputLabel>\n          <Select\n            name=\"acompanha\"\n            value={acessorio.acompanha || false}\n            onChange={atualizarAcessorioParent}\n          >\n            <MenuItem value>Sim</MenuItem>\n            <MenuItem value={false}>Não</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        item\n        xs={6}\n        sm={2}\n      >\n        <TextField\n          required\n          onChange={atualizarAcessorioParent}\n          value={acessorio.quantidade}\n          name=\"quantidade\"\n          label=\"Quantidade\"\n          type=\"number\"\n          fullWidth\n        />\n      </Grid>\n      <Grid\n        item\n        xs={5}\n        sm={3}\n      >\n        <TextField\n          select\n          required\n          onChange={atualizarAcessorioParent}\n          value={acessorio.estado_de_conservacao || ''}\n          name=\"estado_de_conservacao\"\n          label=\"Estado de Conservação\"\n          fullWidth\n        >\n          {conservationOption.map((item) => (\n            <MenuItem key={randomIndex()} value={item.value}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={1}\n      >\n        <Tooltip title=\"Remover\">\n          <Button onClick={() => removerLinha(index)}>\n            <DeleteIcon />\n          </Button>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\nAccessoryFormRow.propTypes = {\n  acessorio: PropTypes.instanceOf(Object).isRequired,\n  atualizarAcessorio: PropTypes.func.isRequired,\n  removerLinha: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n};\nexport default AccessoryFormRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccessoryFormRow from './AccessoryFormRow';\nimport { randomIndex } from '../../../utils';\n\n\nconst AccessoryFormList = (props) => {\n  const {\n    atualizarAcessorioParent,\n    adicionarAcessorio,\n    removerLinha,\n    accessories,\n  } = props;\n\n  return (\n    <>\n      {\n        accessories.map((accessory, index) => (\n          <AccessoryFormRow\n            ultimo={index === (accessory.length - 1)}\n            penultimo={index === (accessory.length - 2)}\n            acessorio={accessory}\n            atualizarAcessorio={atualizarAcessorioParent}\n            adicionarAcessorio={adicionarAcessorio}\n            removerLinha={removerLinha}\n            index={index}\n            key={randomIndex()}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nAccessoryFormList.propTypes = {\n  atualizarAcessorioParent: PropTypes.func.isRequired,\n  adicionarAcessorio: PropTypes.func.isRequired,\n  removerLinha: PropTypes.func.isRequired,\n  accessories: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default AccessoryFormList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport { blue } from '@material-ui/core/colors';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Acessorio } from '../../../models/acessorio';\nimport AccessoryFormList from './AccessoryFormList';\nimport ThemeButton from '../../_common/forms/ThemeButton';\n\n\nconst useStyle = makeStyles((theme) => ({\n  actionGrid: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst acessorioModel = Acessorio();\n\nconst RelacaoDeMaterial = (props) => {\n  const classes = useStyle();\n  const { acessorios, atualizarAcessorios } = props;\n\n  const adicionarAcessorio = () => {\n    const acess = [...acessorios, { ...acessorioModel }];\n    atualizarAcessorios(acess);\n  };\n\n  const atualizarAcessorioParent = (index, value) => {\n    const acess = acessorios.slice(0);\n    acess[index] = { ...acess[index], ...value };\n    atualizarAcessorios(acess);\n  };\n\n  const removerLinha = (index) => {\n    atualizarAcessorios(acessorios.slice().filter((i, ind) => index !== ind));\n  };\n\n  return (\n    <>\n      <AccessoryFormList\n        accessories={acessorios}\n        atualizarAcessorioParent={atualizarAcessorioParent}\n        adicionarAcessorio={adicionarAcessorio}\n        removerLinha={removerLinha}\n      />\n      <Grid container justify=\"flex-end\" className={classes.actionGrid}>\n        <Grid item>\n          <ThemeButton\n            onClick={adicionarAcessorio}\n            bgColor={blue[600]}\n            hoverColor={blue[800]}\n            startIcon={<PlusOneIcon />}\n          >\n            Item\n          </ThemeButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nRelacaoDeMaterial.defaultProps = {\n  acessorios: [],\n};\n\nRelacaoDeMaterial.propTypes = {\n  acessorios: PropTypes.instanceOf(Array),\n  atualizarAcessorios: PropTypes.func.isRequired,\n};\n\nexport default RelacaoDeMaterial;\n","const Equipamento = (equipamento) => ({\n  _id: '',\n  status: equipamento.status || 'recebido',\n  created_at: equipamento.created_at || new Date(),\n  updated_at: equipamento.updated_at || new Date(),\n  numero_de_serie: '',\n  nome_equipamento: 'Ventilador Mecânico',\n  numero_do_patrimonio: '',\n  tipo: '',\n  marca: '',\n  modelo: '',\n  fabricante: '',\n  municipio_origem: '',\n  nome_instituicao_origem: '',\n  tipo_instituicao_origem: '',\n  nome_responsavel: '',\n  contato_responsavel: '',\n  ...equipamento,\n});\n\nexport default Equipamento;\n","const equipmentTypes = [\n  'Ventilador pulmonar de circuito duplo/ UTI/ COVID-19',\n  'Ventilador pulmonar de circuito único/ Enfermaria /Não COVID-19',\n  'Ventilador pulmonar de transporte',\n  'Monitor',\n];\nexport default equipmentTypes;\n","const brasil = {\n  brasil: [\n    {\n      sigla: 'RS',\n      nome: 'Rio Grande do Sul',\n      cidades: [\n        'Aceguá',\n        'Água Santa',\n        'Agudo',\n        'Ajuricaba',\n        'Alecrim',\n        'Alegrete',\n        'Alegria',\n        'Almirante Tamandaré do Sul',\n        'Alpestre',\n        'Alto Alegre',\n        'Alto Feliz',\n        'Alvorada',\n        'Amaral Ferrador',\n        'Ametista do Sul',\n        'André da Rocha',\n        'Anta Gorda',\n        'Antônio Prado',\n        'Arambaré',\n        'Araricá',\n        'Aratiba',\n        'Arroio do Meio',\n        'Arroio do Padre',\n        'Arroio do Sal',\n        'Arroio do Tigre',\n        'Arroio dos Ratos',\n        'Arroio Grande',\n        'Arvorezinha',\n        'Augusto Pestana',\n        'Áurea',\n        'Bagé',\n        'Balneário Pinhal',\n        'Barão',\n        'Barão de Cotegipe',\n        'Barão do Triunfo',\n        'Barra do Guarita',\n        'Barra do Quaraí',\n        'Barra do Ribeiro',\n        'Barra do Rio Azul',\n        'Barra Funda',\n        'Barracão',\n        'Barros Cassal',\n        'Benjamin Constan do Sul',\n        'Bento Gonçalves',\n        'Boa Vista das Missões',\n        'Boa Vista do Buricá',\n        'Boa Vista do Cadeado',\n        'Boa Vista do Incra',\n        'Boa Vista do Sul',\n        'Bom Jesus',\n        'Bom Princípio',\n        'Bom Progresso',\n        'Bom Retiro do Sul',\n        'Boqueirão do Leão',\n        'Bossoroca',\n        'Bozano',\n        'Braga',\n        'Brochier',\n        'Butiá',\n        'Caçapava do Sul',\n        'Cacequi',\n        'Cachoeira do Sul',\n        'Cachoeirinha',\n        'Cacique Doble',\n        'Caibaté',\n        'Caiçara',\n        'Camaquã',\n        'Camargo',\n        'Cambará do Sul',\n        'Campestre da Serra',\n        'Campina das Missões',\n        'Campinas do Sul',\n        'Campo Bom',\n        'Campo Novo',\n        'Campos Borges',\n        'Candelária',\n        'Cândido Godói',\n        'Candiota',\n        'Canela',\n        'Canguçu',\n        'Canoas',\n        'Canudos do Vale',\n        'Capão Bonito do Sul',\n        'Capão da Canoa',\n        'Capão do Cipó',\n        'Capão do Leão',\n        'Capela de Santana',\n        'Capitão',\n        'Capivari do Sul',\n        'Caraá',\n        'Carazinho',\n        'Carlos Barbosa',\n        'Carlos Gomes',\n        'Casca',\n        'Caseiros',\n        'Catuípe',\n        'Caxias do Sul',\n        'Centenário',\n        'Cerrito',\n        'Cerro Branco',\n        'Cerro Grande',\n        'Cerro Grande do Sul',\n        'Cerro Largo',\n        'Chapada',\n        'Charqueadas',\n        'Charrua',\n        'Chiapeta',\n        'Chuí',\n        'Chuvisca',\n        'Cidreira',\n        'Ciríaco',\n        'Colinas',\n        'Colorado',\n        'Condor',\n        'Constantina',\n        'Coqueiro Baixo',\n        'Coqueiros do Sul',\n        'Coronel Barros',\n        'Coronel Bicaco',\n        'Coronel Pilar',\n        'Cotiporã',\n        'Coxilha',\n        'Crissiumal',\n        'Cristal',\n        'Cristal do Sul',\n        'Cruz Alta',\n        'Cruzaltense',\n        'Cruzeiro do Sul',\n        'David Canabarro',\n        'Derrubadas',\n        'Dezesseis de Novembro',\n        'Dilermando de Aguiar',\n        'Dois Irmãos',\n        'Dois Irmãos das Missões',\n        'Dois Lajeados',\n        'Dom Feliciano',\n        'Dom Pedrito',\n        'Dom Pedro de Alcântara',\n        'Dona Francisca',\n        'Doutor Maurício Cardoso',\n        'Doutor Ricardo',\n        'Eldorado do Sul',\n        'Encantado',\n        'Encruzilhada do Sul',\n        'Engenho Velho',\n        'Entre Rios do Sul',\n        'Entre-Ijuís',\n        'Erebango',\n        'Erechim',\n        'Ernestina',\n        'Erval Grande',\n        'Erval Seco',\n        'Esmeralda',\n        'Esperança do Sul',\n        'Espumoso',\n        'Estação',\n        'Estância Velha',\n        'Esteio',\n        'Estrela',\n        'Estrela Velha',\n        'Eugênio de Castro',\n        'Fagundes Varela',\n        'Farroupilha',\n        'Faxinal do Soturno',\n        'Faxinalzinho',\n        'Fazenda Vilanova',\n        'Feliz',\n        'Flores da Cunha',\n        'Floriano Peixoto',\n        'Fontoura Xavier',\n        'Formigueiro',\n        'Forquetinha',\n        'Fortaleza dos Valos',\n        'Frederico Westphalen',\n        'Garibaldi',\n        'Garruchos',\n        'Gaurama',\n        'General Câmara',\n        'Gentil',\n        'Getúlio Vargas',\n        'Giruá',\n        'Glorinha',\n        'Gramado',\n        'Gramado dos Loureiros',\n        'Gramado Xavier',\n        'Gravataí',\n        'Guabiju',\n        'Guaíba',\n        'Guaporé',\n        'Guarani das Missões',\n        'Harmonia',\n        'Herval',\n        'Herveiras',\n        'Horizontina',\n        'Hulha Negra',\n        'Humaitá',\n        'Ibarama',\n        'Ibiaçá',\n        'Ibiraiaras',\n        'Ibirapuitã',\n        'Ibirubá',\n        'Igrejinha',\n        'Ijuí',\n        'Ilópolis',\n        'Imbé',\n        'Imigrante',\n        'Independência',\n        'Inhacorá',\n        'Ipê',\n        'Ipiranga do Sul',\n        'Iraí',\n        'Itaara',\n        'Itacurubi',\n        'Itapuca',\n        'Itaqui',\n        'Itati',\n        'Itatiba do Sul',\n        'Ivorá',\n        'Ivoti',\n        'Jaboticaba',\n        'Jacuizinho',\n        'Jacutinga',\n        'Jaguarão',\n        'Jaguari',\n        'Jaquirana',\n        'Jari',\n        'Jóia',\n        'Júlio de Castilhos',\n        'Lagoa Bonita do Sul',\n        'Lagoa dos Três Cantos',\n        'Lagoa Vermelha',\n        'Lagoão',\n        'Lajeado',\n        'Lajeado do Bugre',\n        'Lavras do Sul',\n        'Liberato Salzano',\n        'Lindolfo Collor',\n        'Linha Nova',\n        'Maçambara',\n        'Machadinho',\n        'Mampituba',\n        'Manoel Viana',\n        'Maquiné',\n        'Maratá',\n        'Marau',\n        'Marcelino Ramos',\n        'Mariana Pimentel',\n        'Mariano Moro',\n        'Marques de Souza',\n        'Mata',\n        'Mato Castelhano',\n        'Mato Leitão',\n        'Mato Queimado',\n        'Maximiliano de Almeida',\n        'Minas do Leão',\n        'Miraguaí',\n        'Montauri',\n        'Monte Alegre dos Campos',\n        'Monte Belo do Sul',\n        'Montenegro',\n        'Mormaço',\n        'Morrinhos do Sul',\n        'Morro Redondo',\n        'Morro Reuter',\n        'Mostardas',\n        'Muçum',\n        'Muitos Capões',\n        'Muliterno',\n        'Não-Me-Toque',\n        'Nicolau Vergueiro',\n        'Nonoai',\n        'Nova Alvorada',\n        'Nova Araçá',\n        'Nova Bassano',\n        'Nova Boa Vista',\n        'Nova Bréscia',\n        'Nova Candelária',\n        'Nova Esperança do Sul',\n        'Nova Hartz',\n        'Nova Pádua',\n        'Nova Palma',\n        'Nova Petrópolis',\n        'Nova Prata',\n        'Nova Ramada',\n        'Nova Roma do Sul',\n        'Nova Santa Rita',\n        'Novo Barreiro',\n        'Novo Cabrais',\n        'Novo Hamburgo',\n        'Novo Machado',\n        'Novo Tiradentes',\n        'Novo Xingu',\n        'Osório',\n        'Paim Filho',\n        'Palmares do Sul',\n        'Palmeira das Missões',\n        'Palmitinho',\n        'Panambi',\n        'Pântano Grande',\n        'Paraí',\n        'Paraíso do Sul',\n        'Pareci Novo',\n        'Parobé',\n        'Passa Sete',\n        'Passo do Sobrado',\n        'Passo Fundo',\n        'Paulo Bento',\n        'Paverama',\n        'Pedras Altas',\n        'Pedro Osório',\n        'Pejuçara',\n        'Pelotas',\n        'Picada Café',\n        'Pinhal',\n        'Pinhal da Serra',\n        'Pinhal Grande',\n        'Pinheirinho do Vale',\n        'Pinheiro Machado',\n        'Pirapó',\n        'Piratini',\n        'Planalto',\n        'Poço das Antas',\n        'Pontão',\n        'Ponte Preta',\n        'Portão',\n        'Porto Alegre',\n        'Porto Lucena',\n        'Porto Mauá',\n        'Porto Vera Cruz',\n        'Porto Xavier',\n        'Pouso Novo',\n        'Presidente Lucena',\n        'Progresso',\n        'Protásio Alves',\n        'Putinga',\n        'Quaraí',\n        'Quatro Irmãos',\n        'Quevedos',\n        'Quinze de Novembro',\n        'Redentora',\n        'Relvado',\n        'Restinga Seca',\n        'Rio dos Índios',\n        'Rio Grande',\n        'Rio Pardo',\n        'Riozinho',\n        'Roca Sales',\n        'Rodeio Bonito',\n        'Rolador',\n        'Rolante',\n        'Ronda Alta',\n        'Rondinha',\n        'Roque Gonzales',\n        'Rosário do Sul',\n        'Sagrada Família',\n        'Saldanha Marinho',\n        'Salto do Jacuí',\n        'Salvador das Missões',\n        'Salvador do Sul',\n        'Sananduva',\n        'Santa Bárbara do Sul',\n        'Santa Cecília do Sul',\n        'Santa Clara do Sul',\n        'Santa Cruz do Sul',\n        'Santa Margarida do Sul',\n        'Santa Maria',\n        'Santa Maria do Herval',\n        'Santa Rosa',\n        'Santa Tereza',\n        'Santa Vitória do Palmar',\n        'Santana da Boa Vista',\n        'Santana do Livramento',\n        'Santiago',\n        'Santo Ângelo',\n        'Santo Antônio da Patrulha',\n        'Santo Antônio das Missões',\n        'Santo Antônio do Palma',\n        'Santo Antônio do Planalto',\n        'Santo Augusto',\n        'Santo Cristo',\n        'Santo Expedito do Sul',\n        'São Borja',\n        'São Domingos do Sul',\n        'São Francisco de Assis',\n        'São Francisco de Paula',\n        'São Gabriel',\n        'São Jerônimo',\n        'São João da Urtiga',\n        'São João do Polêsine',\n        'São Jorge',\n        'São José das Missões',\n        'São José do Herval',\n        'São José do Hortêncio',\n        'São José do Inhacorá',\n        'São José do Norte',\n        'São José do Ouro',\n        'São José do Sul',\n        'São José dos Ausentes',\n        'São Leopoldo',\n        'São Lourenço do Sul',\n        'São Luiz Gonzaga',\n        'São Marcos',\n        'São Martinho',\n        'São Martinho da Serra',\n        'São Miguel das Missões',\n        'São Nicolau',\n        'São Paulo das Missões',\n        'São Pedro da Serra',\n        'São Pedro das Missões',\n        'São Pedro do Butiá',\n        'São Pedro do Sul',\n        'São Sebastião do Caí',\n        'São Sepé',\n        'São Valentim',\n        'São Valentim do Sul',\n        'São Valério do Sul',\n        'São Vendelino',\n        'São Vicente do Sul',\n        'Sapiranga',\n        'Sapucaia do Sul',\n        'Sarandi',\n        'Seberi',\n        'Sede Nova',\n        'Segredo',\n        'Selbach',\n        'Senador Salgado Filho',\n        'Sentinela do Sul',\n        'Serafina Corrêa',\n        'Sério',\n        'Sertão',\n        'Sertão Santana',\n        'Sete de Setembro',\n        'Severiano de Almeida',\n        'Silveira Martins',\n        'Sinimbu',\n        'Sobradinho',\n        'Soledade',\n        'Tabaí',\n        'Tapejara',\n        'Tapera',\n        'Tapes',\n        'Taquara',\n        'Taquari',\n        'Taquaruçu do Sul',\n        'Tavares',\n        'Tenente Portela',\n        'Terra de Areia',\n        'Teutônia',\n        'Tio Hugo',\n        'Tiradentes do Sul',\n        'Toropi',\n        'Torres',\n        'Tramandaí',\n        'Travesseiro',\n        'Três Arroios',\n        'Três Cachoeiras',\n        'Três Coroas',\n        'Três de Maio',\n        'Três Forquilhas',\n        'Três Palmeiras',\n        'Três Passos',\n        'Trindade do Sul',\n        'Triunfo',\n        'Tucunduva',\n        'Tunas',\n        'Tupanci do Sul',\n        'Tupanciretã',\n        'Tupandi',\n        'Tuparendi',\n        'Turuçu',\n        'Ubiretama',\n        'União da Serra',\n        'Unistalda',\n        'Uruguaiana',\n        'Vacaria',\n        'Vale do Sol',\n        'Vale Real',\n        'Vale Verde',\n        'Vanini',\n        'Venâncio Aires',\n        'Vera Cruz',\n        'Veranópolis',\n        'Vespasiano Correa',\n        'Viadutos',\n        'Viamão',\n        'Vicente Dutra',\n        'Victor Graeff',\n        'Vila Flores',\n        'Vila Lângaro',\n        'Vila Maria',\n        'Vila Nova do Sul',\n        'Vista Alegre',\n        'Vista Alegre do Prata',\n        'Vista Gaúcha',\n        'Vitória das Missões',\n        'Westfália',\n        'Xangri-lá',\n      ],\n    },\n    {\n      sigla: 'SC',\n      nome: 'Santa Catarina',\n      cidades: [\n        'Abdon Batista',\n        'Abelardo Luz',\n        'Agrolândia',\n        'Agronômica',\n        'Água Doce',\n        'Águas de Chapecó',\n        'Águas Frias',\n        'Águas Mornas',\n        'Alfredo Wagner',\n        'Alto Bela Vista',\n        'Anchieta',\n        'Angelina',\n        'Anita Garibaldi',\n        'Anitápolis',\n        'Antônio Carlos',\n        'Apiúna',\n        'Arabutã',\n        'Araquari',\n        'Araranguá',\n        'Armazém',\n        'Arroio Trinta',\n        'Arvoredo',\n        'Ascurra',\n        'Atalanta',\n        'Aurora',\n        'Balneário Arroio do Silva',\n        'Balneário Barra do Sul',\n        'Balneário Camboriú',\n        'Balneário Gaivota',\n        'Bandeirante',\n        'Barra Bonita',\n        'Barra Velha',\n        'Bela Vista do Toldo',\n        'Belmonte',\n        'Benedito Novo',\n        'Biguaçu',\n        'Blumenau',\n        'Bocaina do Sul',\n        'Bom Jardim da Serra',\n        'Bom Jesus',\n        'Bom Jesus do Oeste',\n        'Bom Retiro',\n        'Bombinhas',\n        'Botuverá',\n        'Braço do Norte',\n        'Braço do Trombudo',\n        'Brunópolis',\n        'Brusque',\n        'Caçador',\n        'Caibi',\n        'Calmon',\n        'Camboriú',\n        'Campo Alegre',\n        'Campo Belo do Sul',\n        'Campo Erê',\n        'Campos Novos',\n        'Canelinha',\n        'Canoinhas',\n        'Capão Alto',\n        'Capinzal',\n        'Capivari de Baixo',\n        'Catanduvas',\n        'Caxambu do Sul',\n        'Celso Ramos',\n        'Cerro Negro',\n        'Chapadão do Lageado',\n        'Chapecó',\n        'Cocal do Sul',\n        'Concórdia',\n        'Cordilheira Alta',\n        'Coronel Freitas',\n        'Coronel Martins',\n        'Correia Pinto',\n        'Corupá',\n        'Criciúma',\n        'Cunha Porã',\n        'Cunhataí',\n        'Curitibanos',\n        'Descanso',\n        'Dionísio Cerqueira',\n        'Dona Emma',\n        'Doutor Pedrinho',\n        'Entre Rios',\n        'Ermo',\n        'Erval Velho',\n        'Faxinal dos Guedes',\n        'Flor do Sertão',\n        'Florianópolis',\n        'Formosa do Sul',\n        'Forquilhinha',\n        'Fraiburgo',\n        'Frei Rogério',\n        'Galvão',\n        'Garopaba',\n        'Garuva',\n        'Gaspar',\n        'Governador Celso Ramos',\n        'Grão Pará',\n        'Gravatal',\n        'Guabiruba',\n        'Guaraciaba',\n        'Guaramirim',\n        'Guarujá do Sul',\n        'Guatambú',\n        'Herval d\\'Oeste',\n        'Ibiam',\n        'Ibicaré',\n        'Ibirama',\n        'Içara',\n        'Ilhota',\n        'Imaruí',\n        'Imbituba',\n        'Imbuia',\n        'Indaial',\n        'Iomerê',\n        'Ipira',\n        'Iporã do Oeste',\n        'Ipuaçu',\n        'Ipumirim',\n        'Iraceminha',\n        'Irani',\n        'Irati',\n        'Irineópolis',\n        'Itá',\n        'Itaiópolis',\n        'Itajaí',\n        'Itapema',\n        'Itapiranga',\n        'Itapoá',\n        'Ituporanga',\n        'Jaborá',\n        'Jacinto Machado',\n        'Jaguaruna',\n        'Jaraguá do Sul',\n        'Jardinópolis',\n        'Joaçaba',\n        'Joinville',\n        'José Boiteux',\n        'Jupiá',\n        'Lacerdópolis',\n        'Lages',\n        'Laguna',\n        'Lajeado Grande',\n        'Laurentino',\n        'Lauro Muller',\n        'Lebon Régis',\n        'Leoberto Leal',\n        'Lindóia do Sul',\n        'Lontras',\n        'Luiz Alves',\n        'Luzerna',\n        'Macieira',\n        'Mafra',\n        'Major Gercino',\n        'Major Vieira',\n        'Maracajá',\n        'Maravilha',\n        'Marema',\n        'Massaranduba',\n        'Matos Costa',\n        'Meleiro',\n        'Mirim Doce',\n        'Modelo',\n        'Mondaí',\n        'Monte Carlo',\n        'Monte Castelo',\n        'Morro da Fumaça',\n        'Morro Grande',\n        'Navegantes',\n        'Nova Erechim',\n        'Nova Itaberaba',\n        'Nova Trento',\n        'Nova Veneza',\n        'Novo Horizonte',\n        'Orleans',\n        'Otacílio Costa',\n        'Ouro',\n        'Ouro Verde',\n        'Paial',\n        'Painel',\n        'Palhoça',\n        'Palma Sola',\n        'Palmeira',\n        'Palmitos',\n        'Papanduva',\n        'Paraíso',\n        'Passo de Torres',\n        'Passos Maia',\n        'Paulo Lopes',\n        'Pedras Grandes',\n        'Penha',\n        'Peritiba',\n        'Petrolândia',\n        'Piçarras',\n        'Pinhalzinho',\n        'Pinheiro Preto',\n        'Piratuba',\n        'Planalto Alegre',\n        'Pomerode',\n        'Ponte Alta',\n        'Ponte Alta do Norte',\n        'Ponte Serrada',\n        'Porto Belo',\n        'Porto União',\n        'Pouso Redondo',\n        'Praia Grande',\n        'Presidente Castelo Branco',\n        'Presidente Getúlio',\n        'Presidente Nereu',\n        'Princesa',\n        'Quilombo',\n        'Rancho Queimado',\n        'Rio das Antas',\n        'Rio do Campo',\n        'Rio do Oeste',\n        'Rio do Sul',\n        'Rio dos Cedros',\n        'Rio Fortuna',\n        'Rio Negrinho',\n        'Rio Rufino',\n        'Riqueza',\n        'Rodeio',\n        'Romelândia',\n        'Salete',\n        'Saltinho',\n        'Salto Veloso',\n        'Sangão',\n        'Santa Cecília',\n        'Santa Helena',\n        'Santa Rosa de Lima',\n        'Santa Rosa do Sul',\n        'Santa Terezinha',\n        'Santa Terezinha do Progresso',\n        'Santiago do Sul',\n        'Santo Amaro da Imperatriz',\n        'São Bento do Sul',\n        'São Bernardino',\n        'São Bonifácio',\n        'São Carlos',\n        'São Cristovão do Sul',\n        'São Domingos',\n        'São Francisco do Sul',\n        'São João Batista',\n        'São João do Itaperiú',\n        'São João do Oeste',\n        'São João do Sul',\n        'São Joaquim',\n        'São José',\n        'São José do Cedro',\n        'São José do Cerrito',\n        'São Lourenço do Oeste',\n        'São Ludgero',\n        'São Martinho',\n        'São Miguel da Boa Vista',\n        'São Miguel do Oeste',\n        'São Pedro de Alcântara',\n        'Saudades',\n        'Schroeder',\n        'Seara',\n        'Serra Alta',\n        'Siderópolis',\n        'Sombrio',\n        'Sul Brasil',\n        'Taió',\n        'Tangará',\n        'Tigrinhos',\n        'Tijucas',\n        'Timbé do Sul',\n        'Timbó',\n        'Timbó Grande',\n        'Três Barras',\n        'Treviso',\n        'Treze de Maio',\n        'Treze Tílias',\n        'Trombudo Central',\n        'Tubarão',\n        'Tunápolis',\n        'Turvo',\n        'União do Oeste',\n        'Urubici',\n        'Urupema',\n        'Urussanga',\n        'Vargeão',\n        'Vargem',\n        'Vargem Bonita',\n        'Vidal Ramos',\n        'Videira',\n        'Vitor Meireles',\n        'Witmarsum',\n        'Xanxerê',\n        'Xavantina',\n        'Xaxim',\n        'Zortéa',\n      ],\n    },\n    {\n      sigla: 'MA',\n      nome: 'Maranhão',\n      cidades: [\n        'Açailândia',\n        'Afonso Cunha',\n        'Água Doce do Maranhão',\n        'Alcântara',\n        'Aldeias Altas',\n        'Altamira do Maranhão',\n        'Alto Alegre do Maranhão',\n        'Alto Alegre do Pindaré',\n        'Alto Parnaíba',\n        'Amapá do Maranhão',\n        'Amarante do Maranhão',\n        'Anajatuba',\n        'Anapurus',\n        'Apicum-Açu',\n        'Araguanã',\n        'Araioses',\n        'Arame',\n        'Arari',\n        'Axixá',\n        'Bacabal',\n        'Bacabeira',\n        'Bacuri',\n        'Bacurituba',\n        'Balsas',\n        'Barão de Grajaú',\n        'Barra do Corda',\n        'Barreirinhas',\n        'Bela Vista do Maranhão',\n        'Belágua',\n        'Benedito Leite',\n        'Bequimão',\n        'Bernardo do Mearim',\n        'Boa Vista do Gurupi',\n        'Bom Jardim',\n        'Bom Jesus das Selvas',\n        'Bom Lugar',\n        'Brejo',\n        'Brejo de Areia',\n        'Buriti',\n        'Buriti Bravo',\n        'Buriticupu',\n        'Buritirana',\n        'Cachoeira Grande',\n        'Cajapió',\n        'Cajari',\n        'Campestre do Maranhão',\n        'Cândido Mendes',\n        'Cantanhede',\n        'Capinzal do Norte',\n        'Carolina',\n        'Carutapera',\n        'Caxias',\n        'Cedral',\n        'Central do Maranhão',\n        'Centro do Guilherme',\n        'Centro Novo do Maranhão',\n        'Chapadinha',\n        'Cidelândia',\n        'Codó',\n        'Coelho Neto',\n        'Colinas',\n        'Conceição do Lago-Açu',\n        'Coroatá',\n        'Cururupu',\n        'Davinópolis',\n        'Dom Pedro',\n        'Duque Bacelar',\n        'Esperantinópolis',\n        'Estreito',\n        'Feira Nova do Maranhão',\n        'Fernando Falcão',\n        'Formosa da Serra Negra',\n        'Fortaleza dos Nogueiras',\n        'Fortuna',\n        'Godofredo Viana',\n        'Gonçalves Dias',\n        'Governador Archer',\n        'Governador Edison Lobão',\n        'Governador Eugênio Barros',\n        'Governador Luiz Rocha',\n        'Governador Newton Bello',\n        'Governador Nunes Freire',\n        'Graça Aranha',\n        'Grajaú',\n        'Guimarães',\n        'Humberto de Campos',\n        'Icatu',\n        'Igarapé do Meio',\n        'Igarapé Grande',\n        'Imperatriz',\n        'Itaipava do Grajaú',\n        'Itapecuru Mirim',\n        'Itinga do Maranhão',\n        'Jatobá',\n        'Jenipapo dos Vieiras',\n        'João Lisboa',\n        'Joselândia',\n        'Junco do Maranhão',\n        'Lago da Pedra',\n        'Lago do Junco',\n        'Lago dos Rodrigues',\n        'Lago Verde',\n        'Lagoa do Mato',\n        'Lagoa Grande do Maranhão',\n        'Lajeado Novo',\n        'Lima Campos',\n        'Loreto',\n        'Luís Domingues',\n        'Magalhães de Almeida',\n        'Maracaçumé',\n        'Marajá do Sena',\n        'Maranhãozinho',\n        'Mata Roma',\n        'Matinha',\n        'Matões',\n        'Matões do Norte',\n        'Milagres do Maranhão',\n        'Mirador',\n        'Miranda do Norte',\n        'Mirinzal',\n        'Monção',\n        'Montes Altos',\n        'Morros',\n        'Nina Rodrigues',\n        'Nova Colinas',\n        'Nova Iorque',\n        'Nova Olinda do Maranhão',\n        'Olho d\\'Água das Cunhãs',\n        'Olinda Nova do Maranhão',\n        'Paço do Lumiar',\n        'Palmeirândia',\n        'Paraibano',\n        'Parnarama',\n        'Passagem Franca',\n        'Pastos Bons',\n        'Paulino Neves',\n        'Paulo Ramos',\n        'Pedreiras',\n        'Pedro do Rosário',\n        'Penalva',\n        'Peri Mirim',\n        'Peritoró',\n        'Pindaré Mirim',\n        'Pinheiro',\n        'Pio XII',\n        'Pirapemas',\n        'Poção de Pedras',\n        'Porto Franco',\n        'Porto Rico do Maranhão',\n        'Presidente Dutra',\n        'Presidente Juscelino',\n        'Presidente Médici',\n        'Presidente Sarney',\n        'Presidente Vargas',\n        'Primeira Cruz',\n        'Raposa',\n        'Riachão',\n        'Ribamar Fiquene',\n        'Rosário',\n        'Sambaíba',\n        'Santa Filomena do Maranhão',\n        'Santa Helena',\n        'Santa Inês',\n        'Santa Luzia',\n        'Santa Luzia do Paruá',\n        'Santa Quitéria do Maranhão',\n        'Santa Rita',\n        'Santana do Maranhão',\n        'Santo Amaro do Maranhão',\n        'Santo Antônio dos Lopes',\n        'São Benedito do Rio Preto',\n        'São Bento',\n        'São Bernardo',\n        'São Domingos do Azeitão',\n        'São Domingos do Maranhão',\n        'São Félix de Balsas',\n        'São Francisco do Brejão',\n        'São Francisco do Maranhão',\n        'São João Batista',\n        'São João do Carú',\n        'São João do Paraíso',\n        'São João do Soter',\n        'São João dos Patos',\n        'São José de Ribamar',\n        'São José dos Basílios',\n        'São Luís',\n        'São Luís Gonzaga do Maranhão',\n        'São Mateus do Maranhão',\n        'São Pedro da Água Branca',\n        'São Pedro dos Crentes',\n        'São Raimundo das Mangabeiras',\n        'São Raimundo do Doca Bezerra',\n        'São Roberto',\n        'São Vicente Ferrer',\n        'Satubinha',\n        'Senador Alexandre Costa',\n        'Senador La Rocque',\n        'Serrano do Maranhão',\n        'Sítio Novo',\n        'Sucupira do Norte',\n        'Sucupira do Riachão',\n        'Tasso Fragoso',\n        'Timbiras',\n        'Timon',\n        'Trizidela do Vale',\n        'Tufilândia',\n        'Tuntum',\n        'Turiaçu',\n        'Turilândia',\n        'Tutóia',\n        'Urbano Santos',\n        'Vargem Grande',\n        'Viana',\n        'Vila Nova dos Martírios',\n        'Vitória do Mearim',\n        'Vitorino Freire',\n        'Zé Doca',\n      ],\n    },\n    {\n      sigla: 'SE',\n      nome: 'Sergipe',\n      cidades: [\n        'Amparo de São Francisco',\n        'Aquidabã',\n        'Aracaju',\n        'Arauá',\n        'Areia Branca',\n        'Barra dos Coqueiros',\n        'Boquim',\n        'Brejo Grande',\n        'Campo do Brito',\n        'Canhoba',\n        'Canindé de São Francisco',\n        'Capela',\n        'Carira',\n        'Carmópolis',\n        'Cedro de São João',\n        'Cristinápolis',\n        'Cumbe',\n        'Divina Pastora',\n        'Estância',\n        'Feira Nova',\n        'Frei Paulo',\n        'Gararu',\n        'General Maynard',\n        'Gracho Cardoso',\n        'Ilha das Flores',\n        'Indiaroba',\n        'Itabaiana',\n        'Itabaianinha',\n        'Itabi',\n        'Itaporanga d\\'Ajuda',\n        'Japaratuba',\n        'Japoatã',\n        'Lagarto',\n        'Laranjeiras',\n        'Macambira',\n        'Malhada dos Bois',\n        'Malhador',\n        'Maruim',\n        'Moita Bonita',\n        'Monte Alegre de Sergipe',\n        'Muribeca',\n        'Neópolis',\n        'Nossa Senhora Aparecida',\n        'Nossa Senhora da Glória',\n        'Nossa Senhora das Dores',\n        'Nossa Senhora de Lourdes',\n        'Nossa Senhora do Socorro',\n        'Pacatuba',\n        'Pedra Mole',\n        'Pedrinhas',\n        'Pinhão',\n        'Pirambu',\n        'Poço Redondo',\n        'Poço Verde',\n        'Porto da Folha',\n        'Propriá',\n        'Riachão do Dantas',\n        'Riachuelo',\n        'Ribeirópolis',\n        'Rosário do Catete',\n        'Salgado',\n        'Santa Luzia do Itanhy',\n        'Santa Rosa de Lima',\n        'Santana do São Francisco',\n        'Santo Amaro das Brotas',\n        'São Cristóvão',\n        'São Domingos',\n        'São Francisco',\n        'São Miguel do Aleixo',\n        'Simão Dias',\n        'Siriri',\n        'Telha',\n        'Tobias Barreto',\n        'Tomar do Geru',\n        'Umbaúba',\n      ],\n    },\n    {\n      sigla: 'SP',\n      nome: 'São Paulo',\n      cidades: [\n        'Adamantina',\n        'Adolfo',\n        'Aguaí',\n        'Águas da Prata',\n        'Águas de Lindóia',\n        'Águas de Santa Bárbara',\n        'Águas de São Pedro',\n        'Agudos',\n        'Alambari',\n        'Alfredo Marcondes',\n        'Altair',\n        'Altinópolis',\n        'Alto Alegre',\n        'Alumínio',\n        'Álvares Florence',\n        'Álvares Machado',\n        'Álvaro de Carvalho',\n        'Alvinlândia',\n        'Americana',\n        'Américo Brasiliense',\n        'Américo de Campos',\n        'Amparo',\n        'Analândia',\n        'Andradina',\n        'Angatuba',\n        'Anhembi',\n        'Anhumas',\n        'Aparecida',\n        'Aparecida d\\'Oeste',\n        'Apiaí',\n        'Araçariguama',\n        'Araçatuba',\n        'Araçoiaba da Serra',\n        'Aramina',\n        'Arandu',\n        'Arapeí',\n        'Araraquara',\n        'Araras',\n        'Arco-Íris',\n        'Arealva',\n        'Areias',\n        'Areiópolis',\n        'Ariranha',\n        'Artur Nogueira',\n        'Arujá',\n        'Aspásia',\n        'Assis',\n        'Atibaia',\n        'Auriflama',\n        'Avaí',\n        'Avanhandava',\n        'Avaré',\n        'Bady Bassitt',\n        'Balbinos',\n        'Bálsamo',\n        'Bananal',\n        'Barão de Antonina',\n        'Barbosa',\n        'Bariri',\n        'Barra Bonita',\n        'Barra do Chapéu',\n        'Barra do Turvo',\n        'Barretos',\n        'Barrinha',\n        'Barueri',\n        'Bastos',\n        'Batatais',\n        'Bauru',\n        'Bebedouro',\n        'Bento de Abreu',\n        'Bernardino de Campos',\n        'Bertioga',\n        'Bilac',\n        'Birigui',\n        'Biritiba-Mirim',\n        'Boa Esperança do Sul',\n        'Bocaina',\n        'Bofete',\n        'Boituva',\n        'Bom Jesus dos Perdões',\n        'Bom Sucesso de Itararé',\n        'Borá',\n        'Boracéia',\n        'Borborema',\n        'Borebi',\n        'Botucatu',\n        'Bragança Paulista',\n        'Braúna',\n        'Brejo Alegre',\n        'Brodowski',\n        'Brotas',\n        'Buri',\n        'Buritama',\n        'Buritizal',\n        'Cabrália Paulista',\n        'Cabreúva',\n        'Caçapava',\n        'Cachoeira Paulista',\n        'Caconde',\n        'Cafelândia',\n        'Caiabu',\n        'Caieiras',\n        'Caiuá',\n        'Cajamar',\n        'Cajati',\n        'Cajobi',\n        'Cajuru',\n        'Campina do Monte Alegre',\n        'Campinas',\n        'Campo Limpo Paulista',\n        'Campos do Jordão',\n        'Campos Novos Paulista',\n        'Cananéia',\n        'Canas',\n        'Cândido Mota',\n        'Cândido Rodrigues',\n        'Canitar',\n        'Capão Bonito',\n        'Capela do Alto',\n        'Capivari',\n        'Caraguatatuba',\n        'Carapicuíba',\n        'Cardoso',\n        'Casa Branca',\n        'Cássia dos Coqueiros',\n        'Castilho',\n        'Catanduva',\n        'Catiguá',\n        'Cedral',\n        'Cerqueira César',\n        'Cerquilho',\n        'Cesário Lange',\n        'Charqueada',\n        'Chavantes',\n        'Clementina',\n        'Colina',\n        'Colômbia',\n        'Conchal',\n        'Conchas',\n        'Cordeirópolis',\n        'Coroados',\n        'Coronel Macedo',\n        'Corumbataí',\n        'Cosmópolis',\n        'Cosmorama',\n        'Cotia',\n        'Cravinhos',\n        'Cristais Paulista',\n        'Cruzália',\n        'Cruzeiro',\n        'Cubatão',\n        'Cunha',\n        'Descalvado',\n        'Diadema',\n        'Dirce Reis',\n        'Divinolândia',\n        'Dobrada',\n        'Dois Córregos',\n        'Dolcinópolis',\n        'Dourado',\n        'Dracena',\n        'Duartina',\n        'Dumont',\n        'Echaporã',\n        'Eldorado',\n        'Elias Fausto',\n        'Elisiário',\n        'Embaúba',\n        'Embu',\n        'Embu-Guaçu',\n        'Emilianópolis',\n        'Engenheiro Coelho',\n        'Espírito Santo do Pinhal',\n        'Espírito Santo do Turvo',\n        'Estiva Gerbi',\n        'Estrela d\\'Oeste',\n        'Estrela do Norte',\n        'Euclides da Cunha Paulista',\n        'Fartura',\n        'Fernando Prestes',\n        'Fernandópolis',\n        'Fernão',\n        'Ferraz de Vasconcelos',\n        'Flora Rica',\n        'Floreal',\n        'Florínia',\n        'Flórida Paulista',\n        'Franca',\n        'Francisco Morato',\n        'Franco da Rocha',\n        'Gabriel Monteiro',\n        'Gália',\n        'Garça',\n        'Gastão Vidigal',\n        'Gavião Peixoto',\n        'General Salgado',\n        'Getulina',\n        'Glicério',\n        'Guaiçara',\n        'Guaimbê',\n        'Guaíra',\n        'Guapiaçu',\n        'Guapiara',\n        'Guará',\n        'Guaraçaí',\n        'Guaraci',\n        'Guarani d\\'Oeste',\n        'Guarantã',\n        'Guararapes',\n        'Guararema',\n        'Guaratinguetá',\n        'Guareí',\n        'Guariba',\n        'Guarujá',\n        'Guarulhos',\n        'Guatapará',\n        'Guzolândia',\n        'Herculândia',\n        'Holambra',\n        'Hortolândia',\n        'Iacanga',\n        'Iacri',\n        'Iaras',\n        'Ibaté',\n        'Ibirá',\n        'Ibirarema',\n        'Ibitinga',\n        'Ibiúna',\n        'Icém',\n        'Iepê',\n        'Igaraçu do Tietê',\n        'Igarapava',\n        'Igaratá',\n        'Iguape',\n        'Ilha Comprida',\n        'Ilha Solteira',\n        'Ilhabela',\n        'Indaiatuba',\n        'Indiana',\n        'Indiaporã',\n        'Inúbia Paulista',\n        'Ipauçu',\n        'Iperó',\n        'Ipeúna',\n        'Ipiguá',\n        'Iporanga',\n        'Ipuã',\n        'Iracemápolis',\n        'Irapuã',\n        'Irapuru',\n        'Itaberá',\n        'Itaí',\n        'Itajobi',\n        'Itaju',\n        'Itanhaém',\n        'Itaóca',\n        'Itapecerica da Serra',\n        'Itapetininga',\n        'Itapeva',\n        'Itapevi',\n        'Itapira',\n        'Itapirapuã Paulista',\n        'Itápolis',\n        'Itaporanga',\n        'Itapuí',\n        'Itapura',\n        'Itaquaquecetuba',\n        'Itararé',\n        'Itariri',\n        'Itatiba',\n        'Itatinga',\n        'Itirapina',\n        'Itirapuã',\n        'Itobi',\n        'Itu',\n        'Itupeva',\n        'Ituverava',\n        'Jaborandi',\n        'Jaboticabal',\n        'Jacareí',\n        'Jaci',\n        'Jacupiranga',\n        'Jaguariúna',\n        'Jales',\n        'Jambeiro',\n        'Jandira',\n        'Jardinópolis',\n        'Jarinu',\n        'Jaú',\n        'Jeriquara',\n        'Joanópolis',\n        'João Ramalho',\n        'José Bonifácio',\n        'Júlio Mesquita',\n        'Jumirim',\n        'Jundiaí',\n        'Junqueirópolis',\n        'Juquiá',\n        'Juquitiba',\n        'Lagoinha',\n        'Laranjal Paulista',\n        'Lavínia',\n        'Lavrinhas',\n        'Leme',\n        'Lençóis Paulista',\n        'Limeira',\n        'Lindóia',\n        'Lins',\n        'Lorena',\n        'Lourdes',\n        'Louveira',\n        'Lucélia',\n        'Lucianópolis',\n        'Luís Antônio',\n        'Luiziânia',\n        'Lupércio',\n        'Lutécia',\n        'Macatuba',\n        'Macaubal',\n        'Macedônia',\n        'Magda',\n        'Mairinque',\n        'Mairiporã',\n        'Manduri',\n        'Marabá Paulista',\n        'Maracaí',\n        'Marapoama',\n        'Mariápolis',\n        'Marília',\n        'Marinópolis',\n        'Martinópolis',\n        'Matão',\n        'Mauá',\n        'Mendonça',\n        'Meridiano',\n        'Mesópolis',\n        'Miguelópolis',\n        'Mineiros do Tietê',\n        'Mira Estrela',\n        'Miracatu',\n        'Mirandópolis',\n        'Mirante do Paranapanema',\n        'Mirassol',\n        'Mirassolândia',\n        'Mococa',\n        'Mogi das Cruzes',\n        'Mogi-Guaçu',\n        'Mogi-Mirim',\n        'Mombuca',\n        'Monções',\n        'Mongaguá',\n        'Monte Alegre do Sul',\n        'Monte Alto',\n        'Monte Aprazível',\n        'Monte Azul Paulista',\n        'Monte Castelo',\n        'Monte Mor',\n        'Monteiro Lobato',\n        'Morro Agudo',\n        'Morungaba',\n        'Motuca',\n        'Murutinga do Sul',\n        'Nantes',\n        'Narandiba',\n        'Natividade da Serra',\n        'Nazaré Paulista',\n        'Neves Paulista',\n        'Nhandeara',\n        'Nipoã',\n        'Nova Aliança',\n        'Nova Campina',\n        'Nova Canaã Paulista',\n        'Nova Castilho',\n        'Nova Europa',\n        'Nova Granada',\n        'Nova Guataporanga',\n        'Nova Independência',\n        'Nova Luzitânia',\n        'Nova Odessa',\n        'Novais',\n        'Novo Horizonte',\n        'Nuporanga',\n        'Ocauçu',\n        'Óleo',\n        'Olímpia',\n        'Onda Verde',\n        'Oriente',\n        'Orindiúva',\n        'Orlândia',\n        'Osasco',\n        'Oscar Bressane',\n        'Osvaldo Cruz',\n        'Ourinhos',\n        'Ouro Verde',\n        'Ouroeste',\n        'Pacaembu',\n        'Palestina',\n        'Palmares Paulista',\n        'Palmeira d\\'Oeste',\n        'Palmital',\n        'Panorama',\n        'Paraguaçu Paulista',\n        'Paraibuna',\n        'Paraíso',\n        'Paranapanema',\n        'Paranapuã',\n        'Parapuã',\n        'Pardinho',\n        'Pariquera-Açu',\n        'Parisi',\n        'Patrocínio Paulista',\n        'Paulicéia',\n        'Paulínia',\n        'Paulistânia',\n        'Paulo de Faria',\n        'Pederneiras',\n        'Pedra Bela',\n        'Pedranópolis',\n        'Pedregulho',\n        'Pedreira',\n        'Pedrinhas Paulista',\n        'Pedro de Toledo',\n        'Penápolis',\n        'Pereira Barreto',\n        'Pereiras',\n        'Peruíbe',\n        'Piacatu',\n        'Piedade',\n        'Pilar do Sul',\n        'Pindamonhangaba',\n        'Pindorama',\n        'Pinhalzinho',\n        'Piquerobi',\n        'Piquete',\n        'Piracaia',\n        'Piracicaba',\n        'Piraju',\n        'Pirajuí',\n        'Pirangi',\n        'Pirapora do Bom Jesus',\n        'Pirapozinho',\n        'Pirassununga',\n        'Piratininga',\n        'Pitangueiras',\n        'Planalto',\n        'Platina',\n        'Poá',\n        'Poloni',\n        'Pompéia',\n        'Pongaí',\n        'Pontal',\n        'Pontalinda',\n        'Pontes Gestal',\n        'Populina',\n        'Porangaba',\n        'Porto Feliz',\n        'Porto Ferreira',\n        'Potim',\n        'Potirendaba',\n        'Pracinha',\n        'Pradópolis',\n        'Praia Grande',\n        'Pratânia',\n        'Presidente Alves',\n        'Presidente Bernardes',\n        'Presidente Epitácio',\n        'Presidente Prudente',\n        'Presidente Venceslau',\n        'Promissão',\n        'Quadra',\n        'Quatá',\n        'Queiroz',\n        'Queluz',\n        'Quintana',\n        'Rafard',\n        'Rancharia',\n        'Redenção da Serra',\n        'Regente Feijó',\n        'Reginópolis',\n        'Registro',\n        'Restinga',\n        'Ribeira',\n        'Ribeirão Bonito',\n        'Ribeirão Branco',\n        'Ribeirão Corrente',\n        'Ribeirão do Sul',\n        'Ribeirão dos Índios',\n        'Ribeirão Grande',\n        'Ribeirão Pires',\n        'Ribeirão Preto',\n        'Rifaina',\n        'Rincão',\n        'Rinópolis',\n        'Rio Claro',\n        'Rio das Pedras',\n        'Rio Grande da Serra',\n        'Riolândia',\n        'Riversul',\n        'Rosana',\n        'Roseira',\n        'Rubiácea',\n        'Rubinéia',\n        'Sabino',\n        'Sagres',\n        'Sales',\n        'Sales Oliveira',\n        'Salesópolis',\n        'Salmourão',\n        'Saltinho',\n        'Salto',\n        'Salto de Pirapora',\n        'Salto Grande',\n        'Sandovalina',\n        'Santa Adélia',\n        'Santa Albertina',\n        'Santa Bárbara d\\'Oeste',\n        'Santa Branca',\n        'Santa Clara d\\'Oeste',\n        'Santa Cruz da Conceição',\n        'Santa Cruz da Esperança',\n        'Santa Cruz das Palmeiras',\n        'Santa Cruz do Rio Pardo',\n        'Santa Ernestina',\n        'Santa Fé do Sul',\n        'Santa Gertrudes',\n        'Santa Isabel',\n        'Santa Lúcia',\n        'Santa Maria da Serra',\n        'Santa Mercedes',\n        'Santa Rita d\\'Oeste',\n        'Santa Rita do Passa Quatro',\n        'Santa Rosa de Viterbo',\n        'Santa Salete',\n        'Santana da Ponte Pensa',\n        'Santana de Parnaíba',\n        'Santo Anastácio',\n        'Santo André',\n        'Santo Antônio da Alegria',\n        'Santo Antônio de Posse',\n        'Santo Antônio do Aracanguá',\n        'Santo Antônio do Jardim',\n        'Santo Antônio do Pinhal',\n        'Santo Expedito',\n        'Santópolis do Aguapeí',\n        'Santos',\n        'São Bento do Sapucaí',\n        'São Bernardo do Campo',\n        'São Caetano do Sul',\n        'São Carlos',\n        'São Francisco',\n        'São João da Boa Vista',\n        'São João das Duas Pontes',\n        'São João de Iracema',\n        'São João do Pau d\\'Alho',\n        'São Joaquim da Barra',\n        'São José da Bela Vista',\n        'São José do Barreiro',\n        'São José do Rio Pardo',\n        'São José do Rio Preto',\n        'São José dos Campos',\n        'São Lourenço da Serra',\n        'São Luís do Paraitinga',\n        'São Manuel',\n        'São Miguel Arcanjo',\n        'São Paulo',\n        'São Pedro',\n        'São Pedro do Turvo',\n        'São Roque',\n        'São Sebastião',\n        'São Sebastião da Grama',\n        'São Simão',\n        'São Vicente',\n        'Sarapuí',\n        'Sarutaiá',\n        'Sebastianópolis do Sul',\n        'Serra Azul',\n        'Serra Negra',\n        'Serrana',\n        'Sertãozinho',\n        'Sete Barras',\n        'Severínia',\n        'Silveiras',\n        'Socorro',\n        'Sorocaba',\n        'Sud Mennucci',\n        'Sumaré',\n        'Suzanápolis',\n        'Suzano',\n        'Tabapuã',\n        'Tabatinga',\n        'Taboão da Serra',\n        'Taciba',\n        'Taguaí',\n        'Taiaçu',\n        'Taiúva',\n        'Tambaú',\n        'Tanabi',\n        'Tapiraí',\n        'Tapiratiba',\n        'Taquaral',\n        'Taquaritinga',\n        'Taquarituba',\n        'Taquarivaí',\n        'Tarabai',\n        'Tarumã',\n        'Tatuí',\n        'Taubaté',\n        'Tejupá',\n        'Teodoro Sampaio',\n        'Terra Roxa',\n        'Tietê',\n        'Timburi',\n        'Torre de Pedra',\n        'Torrinha',\n        'Trabiju',\n        'Tremembé',\n        'Três Fronteiras',\n        'Tuiuti',\n        'Tupã',\n        'Tupi Paulista',\n        'Turiúba',\n        'Turmalina',\n        'Ubarana',\n        'Ubatuba',\n        'Ubirajara',\n        'Uchoa',\n        'União Paulista',\n        'Urânia',\n        'Uru',\n        'Urupês',\n        'Valentim Gentil',\n        'Valinhos',\n        'Valparaíso',\n        'Vargem',\n        'Vargem Grande do Sul',\n        'Vargem Grande Paulista',\n        'Várzea Paulista',\n        'Vera Cruz',\n        'Vinhedo',\n        'Viradouro',\n        'Vista Alegre do Alto',\n        'Vitória Brasil',\n        'Votorantim',\n        'Votuporanga',\n        'Zacarias',\n      ],\n    },\n    {\n      sigla: 'TO',\n      nome: 'Tocantins',\n      cidades: [\n        'Abreulândia',\n        'Aguiarnópolis',\n        'Aliança do Tocantins',\n        'Almas',\n        'Alvorada',\n        'Ananás',\n        'Angico',\n        'Aparecida do Rio Negro',\n        'Aragominas',\n        'Araguacema',\n        'Araguaçu',\n        'Araguaína',\n        'Araguanã',\n        'Araguatins',\n        'Arapoema',\n        'Arraias',\n        'Augustinópolis',\n        'Aurora do Tocantins',\n        'Axixá do Tocantins',\n        'Babaçulândia',\n        'Bandeirantes do Tocantins',\n        'Barra do Ouro',\n        'Barrolândia',\n        'Bernardo Sayão',\n        'Bom Jesus do Tocantins',\n        'Brasilândia do Tocantins',\n        'Brejinho de Nazaré',\n        'Buriti do Tocantins',\n        'Cachoeirinha',\n        'Campos Lindos',\n        'Cariri do Tocantins',\n        'Carmolândia',\n        'Carrasco Bonito',\n        'Caseara',\n        'Centenário',\n        'Chapada da Natividade',\n        'Chapada de Areia',\n        'Colinas do Tocantins',\n        'Colméia',\n        'Combinado',\n        'Conceição do Tocantins',\n        'Couto de Magalhães',\n        'Cristalândia',\n        'Crixás do Tocantins',\n        'Darcinópolis',\n        'Dianópolis',\n        'Divinópolis do Tocantins',\n        'Dois Irmãos do Tocantins',\n        'Dueré',\n        'Esperantina',\n        'Fátima',\n        'Figueirópolis',\n        'Filadélfia',\n        'Formoso do Araguaia',\n        'Fortaleza do Tabocão',\n        'Goianorte',\n        'Goiatins',\n        'Guaraí',\n        'Gurupi',\n        'Ipueiras',\n        'Itacajá',\n        'Itaguatins',\n        'Itapiratins',\n        'Itaporã do Tocantins',\n        'Jaú do Tocantins',\n        'Juarina',\n        'Lagoa da Confusão',\n        'Lagoa do Tocantins',\n        'Lajeado',\n        'Lavandeira',\n        'Lizarda',\n        'Luzinópolis',\n        'Marianópolis do Tocantins',\n        'Mateiros',\n        'Maurilândia do Tocantins',\n        'Miracema do Tocantins',\n        'Miranorte',\n        'Monte do Carmo',\n        'Monte Santo do Tocantins',\n        'Muricilândia',\n        'Natividade',\n        'Nazaré',\n        'Nova Olinda',\n        'Nova Rosalândia',\n        'Novo Acordo',\n        'Novo Alegre',\n        'Novo Jardim',\n        'Oliveira de Fátima',\n        'Palmas',\n        'Palmeirante',\n        'Palmeiras do Tocantins',\n        'Palmeirópolis',\n        'Paraíso do Tocantins',\n        'Paranã',\n        'Pau d\\'Arco',\n        'Pedro Afonso',\n        'Peixe',\n        'Pequizeiro',\n        'Pindorama do Tocantins',\n        'Piraquê',\n        'Pium',\n        'Ponte Alta do Bom Jesus',\n        'Ponte Alta do Tocantins',\n        'Porto Alegre do Tocantins',\n        'Porto Nacional',\n        'Praia Norte',\n        'Presidente Kennedy',\n        'Pugmil',\n        'Recursolândia',\n        'Riachinho',\n        'Rio da Conceição',\n        'Rio dos Bois',\n        'Rio Sono',\n        'Sampaio',\n        'Sandolândia',\n        'Santa Fé do Araguaia',\n        'Santa Maria do Tocantins',\n        'Santa Rita do Tocantins',\n        'Santa Rosa do Tocantins',\n        'Santa Tereza do Tocantins',\n        'Santa Terezinha Tocantins',\n        'São Bento do Tocantins',\n        'São Félix do Tocantins',\n        'São Miguel do Tocantins',\n        'São Salvador do Tocantins',\n        'São Sebastião do Tocantins',\n        'São Valério da Natividade',\n        'Silvanópolis',\n        'Sítio Novo do Tocantins',\n        'Sucupira',\n        'Taguatinga',\n        'Taipas do Tocantins',\n        'Talismã',\n        'Tocantínia',\n        'Tocantinópolis',\n        'Tupirama',\n        'Tupiratins',\n        'Wanderlândia',\n        'Xambioá',\n      ],\n    },\n    {\n      sigla: 'BA',\n      nome: 'Bahia',\n      cidades: [\n        'Abaíra',\n        'Abaré',\n        'Acajutiba',\n        'Adustina',\n        'Água Fria',\n        'Aiquara',\n        'Alagoinhas',\n        'Alcobaça',\n        'Almadina',\n        'Amargosa',\n        'Amélia Rodrigues',\n        'América Dourada',\n        'Anagé',\n        'Andaraí',\n        'Andorinha',\n        'Angical',\n        'Anguera',\n        'Antas',\n        'Antônio Cardoso',\n        'Antônio Gonçalves',\n        'Aporá',\n        'Apuarema',\n        'Araças',\n        'Aracatu',\n        'Araci',\n        'Aramari',\n        'Arataca',\n        'Aratuípe',\n        'Aurelino Leal',\n        'Baianópolis',\n        'Baixa Grande',\n        'Banzaê',\n        'Barra',\n        'Barra da Estiva',\n        'Barra do Choça',\n        'Barra do Mendes',\n        'Barra do Rocha',\n        'Barreiras',\n        'Barro Alto',\n        'Barrocas',\n        'Barro Preto',\n        'Belmonte',\n        'Belo Campo',\n        'Biritinga',\n        'Boa Nova',\n        'Boa Vista do Tupim',\n        'Bom Jesus da Lapa',\n        'Bom Jesus da Serra',\n        'Boninal',\n        'Bonito',\n        'Boquira',\n        'Botuporã',\n        'Brejões',\n        'Brejolândia',\n        'Brotas de Macaúbas',\n        'Brumado',\n        'Buerarema',\n        'Buritirama',\n        'Caatiba',\n        'Cabaceiras do Paraguaçu',\n        'Cachoeira',\n        'Caculé',\n        'Caém',\n        'Caetanos',\n        'Caetité',\n        'Cafarnaum',\n        'Cairu',\n        'Caldeirão Grande',\n        'Camacan',\n        'Camaçari',\n        'Camamu',\n        'Campo Alegre de Lourdes',\n        'Campo Formoso',\n        'Canápolis',\n        'Canarana',\n        'Canavieiras',\n        'Candeal',\n        'Candeias',\n        'Candiba',\n        'Cândido Sales',\n        'Cansanção',\n        'Canudos',\n        'Capela do Alto Alegre',\n        'Capim Grosso',\n        'Caraíbas',\n        'Caravelas',\n        'Cardeal da Silva',\n        'Carinhanha',\n        'Casa Nova',\n        'Castro Alves',\n        'Catolândia',\n        'Catu',\n        'Caturama',\n        'Central',\n        'Chorrochó',\n        'Cícero Dantas',\n        'Cipó',\n        'Coaraci',\n        'Cocos',\n        'Conceição da Feira',\n        'Conceição do Almeida',\n        'Conceição do Coité',\n        'Conceição do Jacuípe',\n        'Conde',\n        'Condeúba',\n        'Contendas do Sincorá',\n        'Coração de Maria',\n        'Cordeiros',\n        'Coribe',\n        'Coronel João Sá',\n        'Correntina',\n        'Cotegipe',\n        'Cravolândia',\n        'Crisópolis',\n        'Cristópolis',\n        'Cruz das Almas',\n        'Curaçá',\n        'Dário Meira',\n        'Dias d\\'Ávila',\n        'Dom Basílio',\n        'Dom Macedo Costa',\n        'Elísio Medrado',\n        'Encruzilhada',\n        'Entre Rios',\n        'Érico Cardoso',\n        'Esplanada',\n        'Euclides da Cunha',\n        'Eunápolis',\n        'Fátima',\n        'Feira da Mata',\n        'Feira de Santana',\n        'Filadélfia',\n        'Firmino Alves',\n        'Floresta Azul',\n        'Formosa do Rio Preto',\n        'Gandu',\n        'Gavião',\n        'Gentio do Ouro',\n        'Glória',\n        'Gongogi',\n        'Governador Mangabeira',\n        'Guajeru',\n        'Guanambi',\n        'Guaratinga',\n        'Heliópolis',\n        'Iaçu',\n        'Ibiassucê',\n        'Ibicaraí',\n        'Ibicoara',\n        'Ibicuí',\n        'Ibipeba',\n        'Ibipitanga',\n        'Ibiquera',\n        'Ibirapitanga',\n        'Ibirapuã',\n        'Ibirataia',\n        'Ibitiara',\n        'Ibititá',\n        'Ibotirama',\n        'Ichu',\n        'Igaporã',\n        'Igrapiúna',\n        'Iguaí',\n        'Ilhéus',\n        'Inhambupe',\n        'Ipecaetá',\n        'Ipiaú',\n        'Ipirá',\n        'Ipupiara',\n        'Irajuba',\n        'Iramaia',\n        'Iraquara',\n        'Irará',\n        'Irecê',\n        'Itabela',\n        'Itaberaba',\n        'Itabuna',\n        'Itacaré',\n        'Itaeté',\n        'Itagi',\n        'Itagibá',\n        'Itagimirim',\n        'Itaguaçu da Bahia',\n        'Itaju do Colônia',\n        'Itajuípe',\n        'Itamaraju',\n        'Itamari',\n        'Itambé',\n        'Itanagra',\n        'Itanhém',\n        'Itaparica',\n        'Itapé',\n        'Itapebi',\n        'Itapetinga',\n        'Itapicuru',\n        'Itapitanga',\n        'Itaquara',\n        'Itarantim',\n        'Itatim',\n        'Itiruçu',\n        'Itiúba',\n        'Itororó',\n        'Ituaçu',\n        'Ituberá',\n        'Iuiú',\n        'Jaborandi',\n        'Jacaraci',\n        'Jacobina',\n        'Jaguaquara',\n        'Jaguarari',\n        'Jaguaripe',\n        'Jandaíra',\n        'Jequié',\n        'Jeremoabo',\n        'Jiquiriçá',\n        'Jitaúna',\n        'João Dourado',\n        'Juazeiro',\n        'Jucuruçu',\n        'Jussara',\n        'Jussari',\n        'Jussiape',\n        'Lafaiete Coutinho',\n        'Lagoa Real',\n        'Laje',\n        'Lajedão',\n        'Lajedinho',\n        'Lajedo do Tabocal',\n        'Lamarão',\n        'Lapão',\n        'Lauro de Freitas',\n        'Lençóis',\n        'Licínio de Almeida',\n        'Livramento de Nossa Senhora',\n        'Luís Eduardo Magalhães',\n        'Macajuba',\n        'Macarani',\n        'Macaúbas',\n        'Macururé',\n        'Madre de Deus',\n        'Maetinga',\n        'Maiquinique',\n        'Mairi',\n        'Malhada',\n        'Malhada de Pedras',\n        'Manoel Vitorino',\n        'Mansidão',\n        'Maracás',\n        'Maragogipe',\n        'Maraú',\n        'Marcionílio Souza',\n        'Mascote',\n        'Mata de São João',\n        'Matina',\n        'Medeiros Neto',\n        'Miguel Calmon',\n        'Milagres',\n        'Mirangaba',\n        'Mirante',\n        'Monte Santo',\n        'Morpará',\n        'Morro do Chapéu',\n        'Mortugaba',\n        'Mucugê',\n        'Mucuri',\n        'Mulungu do Morro',\n        'Mundo Novo',\n        'Muniz Ferreira',\n        'Muquém de São Francisco',\n        'Muritiba',\n        'Mutuípe',\n        'Nazaré',\n        'Nilo Peçanha',\n        'Nordestina',\n        'Nova Canaã',\n        'Nova Fátima',\n        'Nova Ibiá',\n        'Nova Itarana',\n        'Nova Redenção',\n        'Nova Soure',\n        'Nova Viçosa',\n        'Novo Horizonte',\n        'Novo Triunfo',\n        'Olindina',\n        'Oliveira dos Brejinhos',\n        'Ouriçangas',\n        'Ourolândia',\n        'Palmas de Monte Alto',\n        'Palmeiras',\n        'Paramirim',\n        'Paratinga',\n        'Paripiranga',\n        'Pau Brasil',\n        'Paulo Afonso',\n        'Pé de Serra',\n        'Pedrão',\n        'Pedro Alexandre',\n        'Piatã',\n        'Pilão Arcado',\n        'Pindaí',\n        'Pindobaçu',\n        'Pintadas',\n        'Piraí do Norte',\n        'Piripá',\n        'Piritiba',\n        'Planaltino',\n        'Planalto',\n        'Poções',\n        'Pojuca',\n        'Ponto Novo',\n        'Porto Seguro',\n        'Potiraguá',\n        'Prado',\n        'Presidente Dutra',\n        'Presidente Jânio Quadros',\n        'Presidente Tancredo Neves',\n        'Queimadas',\n        'Quijingue',\n        'Quixabeira',\n        'Rafael Jambeiro',\n        'Remanso',\n        'Retirolândia',\n        'Riachão das Neves',\n        'Riachão do Jacuípe',\n        'Riacho de Santana',\n        'Ribeira do Amparo',\n        'Ribeira do Pombal',\n        'Ribeirão do Largo',\n        'Rio de Contas',\n        'Rio do Antônio',\n        'Rio do Pires',\n        'Rio Real',\n        'Rodelas',\n        'Ruy Barbosa',\n        'Salinas da Margarida',\n        'Salvador',\n        'Santa Bárbara',\n        'Santa Brígida',\n        'Santa Cruz Cabrália',\n        'Santa Cruz da Vitória',\n        'Santa Inês',\n        'Santa Luzia',\n        'Santa Maria da Vitória',\n        'Santa Rita de Cássia',\n        'Santa Teresinha',\n        'Santaluz',\n        'Santana',\n        'Santanópolis',\n        'Santo Amaro',\n        'Santo Antônio de Jesus',\n        'Santo Estêvão',\n        'São Desidério',\n        'São Domingos',\n        'São Felipe',\n        'São Félix',\n        'São Félix do Coribe',\n        'São Francisco do Conde',\n        'São Gabriel',\n        'São Gonçalo dos Campos',\n        'São José da Vitória',\n        'São José do Jacuípe',\n        'São Miguel das Matas',\n        'São Sebastião do Passé',\n        'Sapeaçu',\n        'Sátiro Dias',\n        'Saubara',\n        'Saúde',\n        'Seabra',\n        'Sebastião Laranjeiras',\n        'Senhor do Bonfim',\n        'Sento Sé',\n        'Serra do Ramalho',\n        'Serra Dourada',\n        'Serra Preta',\n        'Serrinha',\n        'Serrolândia',\n        'Simões Filho',\n        'Sítio do Mato',\n        'Sítio do Quinto',\n        'Sobradinho',\n        'Souto Soares',\n        'Tabocas do Brejo Velho',\n        'Tanhaçu',\n        'Tanque Novo',\n        'Tanquinho',\n        'Taperoá',\n        'Tapiramutá',\n        'Teixeira de Freitas',\n        'Teodoro Sampaio',\n        'Teofilândia',\n        'Teolândia',\n        'Terra Nova',\n        'Tremedal',\n        'Tucano',\n        'Uauá',\n        'Ubaíra',\n        'Ubaitaba',\n        'Ubatã',\n        'Uibaí',\n        'Umburanas',\n        'Una',\n        'Urandi',\n        'Uruçuca',\n        'Utinga',\n        'Valença',\n        'Valente',\n        'Várzea da Roça',\n        'Várzea do Poço',\n        'Várzea Nova',\n        'Varzedo',\n        'Vera Cruz',\n        'Vereda',\n        'Vitória da Conquista',\n        'Wagner',\n        'Wanderley',\n        'Wenceslau Guimarães',\n        'Xique-Xique',\n      ],\n    },\n    {\n      sigla: 'MT',\n      nome: 'Mato Grosso',\n      cidades: [\n        'Acorizal',\n        'Água Boa',\n        'Alta Floresta',\n        'Alto Araguaia',\n        'Alto Boa Vista',\n        'Alto Garças',\n        'Alto Paraguai',\n        'Alto Taquari',\n        'Apiacás',\n        'Araguaiana',\n        'Araguainha',\n        'Araputanga',\n        'Arenápolis',\n        'Aripuanã',\n        'Barão de Melgaço',\n        'Barra do Bugres',\n        'Barra do Garças',\n        'Bom Jesus do Araguaia',\n        'Brasnorte',\n        'Cáceres',\n        'Campinápolis',\n        'Campo Novo do Parecis',\n        'Campo Verde',\n        'Campos de Júlio',\n        'Canabrava do Norte',\n        'Canarana',\n        'Carlinda',\n        'Castanheira',\n        'Chapada dos Guimarães',\n        'Cláudia',\n        'Cocalinho',\n        'Colíder',\n        'Colniza',\n        'Comodoro',\n        'Confresa',\n        'Conquista d\\'Oeste',\n        'Cotriguaçu',\n        'Curvelândia',\n        'Cuiabá',\n        'Denise',\n        'Diamantino',\n        'Dom Aquino',\n        'Feliz Natal',\n        'Figueirópolis d\\'Oeste',\n        'Gaúcha do Norte',\n        'General Carneiro',\n        'Glória d\\'Oeste',\n        'Guarantã do Norte',\n        'Guiratinga',\n        'Indiavaí',\n        'Itaúba',\n        'Itiquira',\n        'Jaciara',\n        'Jangada',\n        'Jauru',\n        'Juara',\n        'Juína',\n        'Juruena',\n        'Juscimeira',\n        'Lambari d\\'Oeste',\n        'Lucas do Rio Verde',\n        'Luciára',\n        'Marcelândia',\n        'Matupá',\n        'Mirassol d\\'Oeste',\n        'Nobres',\n        'Nortelândia',\n        'Nossa Senhora do Livramento',\n        'Nova Bandeirantes',\n        'Nova Brasilândia',\n        'Nova Canãa do Norte',\n        'Nova Guarita',\n        'Nova Lacerda',\n        'Nova Marilândia',\n        'Nova Maringá',\n        'Nova Monte Verde',\n        'Nova Mutum',\n        'Nova Nazaré',\n        'Nova Olímpia',\n        'Nova Santa Helena',\n        'Nova Ubiratã',\n        'Nova Xavantina',\n        'Novo Horizonte do Norte',\n        'Novo Mundo',\n        'Novo Santo Antônio',\n        'Novo São Joaquim',\n        'Paranaíta',\n        'Paranatinga',\n        'Pedra Preta',\n        'Peixoto de Azevedo',\n        'Planalto da Serra',\n        'Poconé',\n        'Pontal do Araguaia',\n        'Ponte Branca',\n        'Pontes e Lacerda',\n        'Porto Alegre do Norte',\n        'Porto dos Gaúchos',\n        'Porto Esperidião',\n        'Porto Estrela',\n        'Poxoréo',\n        'Primavera do Leste',\n        'Querência',\n        'Reserva do Cabaçal',\n        'Ribeirão Cascalheira',\n        'Ribeirãozinho',\n        'Rio Branco',\n        'Rondolândia',\n        'Rondonópolis',\n        'Rosário Oeste',\n        'Salto do Céu',\n        'Santa Carmem',\n        'Santa Cruz do Xingu',\n        'Santa Rita do Trivelato',\n        'Santa Terezinha',\n        'Santo Afonso',\n        'Santo Antônio do Leste',\n        'Santo Antônio do Leverger',\n        'São Félix do Araguaia',\n        'São José do Povo',\n        'São José do Rio Claro',\n        'São José do Xingu',\n        'São José dos Quatro Marcos',\n        'São Pedro da Cipa',\n        'Sapezal',\n        'Serra Nova Dourada',\n        'Sinop',\n        'Sorriso',\n        'Tabaporã',\n        'Tangará da Serra',\n        'Tapurah',\n        'Terra Nova do Norte',\n        'Tesouro',\n        'Torixoréu',\n        'União do Sul',\n        'Vale de São Domingos',\n        'Várzea Grande',\n        'Vera',\n        'Vila Bela da Santíssima Trindade',\n        'Vila Rica',\n      ],\n    },\n    {\n      sigla: 'GO',\n      nome: 'Goiás',\n      cidades: [\n        'Abadia de Goiás',\n        'Abadiânia',\n        'Acreúna',\n        'Adelândia',\n        'Água Fria de Goiás',\n        'Água Limpa',\n        'Águas Lindas de Goiás',\n        'Alexânia',\n        'Aloândia',\n        'Alto Horizonte',\n        'Alto Paraíso de Goiás',\n        'Alvorada do Norte',\n        'Amaralina',\n        'Americano do Brasil',\n        'Amorinópolis',\n        'Anápolis',\n        'Anhanguera',\n        'Anicuns',\n        'Aparecida de Goiânia',\n        'Aparecida do Rio Doce',\n        'Aporé',\n        'Araçu',\n        'Aragarças',\n        'Aragoiânia',\n        'Araguapaz',\n        'Arenópolis',\n        'Aruanã',\n        'Aurilândia',\n        'Avelinópolis',\n        'Baliza',\n        'Barro Alto',\n        'Bela Vista de Goiás',\n        'Bom Jardim de Goiás',\n        'Bom Jesus de Goiás',\n        'Bonfinópolis',\n        'Bonópolis',\n        'Brazabrantes',\n        'Britânia',\n        'Buriti Alegre',\n        'Buriti de Goiás',\n        'Buritinópolis',\n        'Cabeceiras',\n        'Cachoeira Alta',\n        'Cachoeira de Goiás',\n        'Cachoeira Dourada',\n        'Caçu',\n        'Caiapônia',\n        'Caldas Novas',\n        'Caldazinha',\n        'Campestre de Goiás',\n        'Campinaçu',\n        'Campinorte',\n        'Campo Alegre de Goiás',\n        'Campos Limpo de Goiás',\n        'Campos Belos',\n        'Campos Verdes',\n        'Carmo do Rio Verde',\n        'Castelândia',\n        'Catalão',\n        'Caturaí',\n        'Cavalcante',\n        'Ceres',\n        'Cezarina',\n        'Chapadão do Céu',\n        'Cidade Ocidental',\n        'Cocalzinho de Goiás',\n        'Colinas do Sul',\n        'Córrego do Ouro',\n        'Corumbá de Goiás',\n        'Corumbaíba',\n        'Cristalina',\n        'Cristianópolis',\n        'Crixás',\n        'Cromínia',\n        'Cumari',\n        'Damianópolis',\n        'Damolândia',\n        'Davinópolis',\n        'Diorama',\n        'Divinópolis de Goiás',\n        'Doverlândia',\n        'Edealina',\n        'Edéia',\n        'Estrela do Norte',\n        'Faina',\n        'Fazenda Nova',\n        'Firminópolis',\n        'Flores de Goiás',\n        'Formosa',\n        'Formoso',\n        'Gameleira de Goiás',\n        'Goianápolis',\n        'Goiandira',\n        'Goianésia',\n        'Goiânia',\n        'Goianira',\n        'Goiás',\n        'Goiatuba',\n        'Gouvelândia',\n        'Guapó',\n        'Guaraíta',\n        'Guarani de Goiás',\n        'Guarinos',\n        'Heitoraí',\n        'Hidrolândia',\n        'Hidrolina',\n        'Iaciara',\n        'Inaciolândia',\n        'Indiara',\n        'Inhumas',\n        'Ipameri',\n        'Ipiranga de Goiás',\n        'Iporá',\n        'Israelândia',\n        'Itaberaí',\n        'Itaguari',\n        'Itaguaru',\n        'Itajá',\n        'Itapaci',\n        'Itapirapuã',\n        'Itapuranga',\n        'Itarumã',\n        'Itauçu',\n        'Itumbiara',\n        'Ivolândia',\n        'Jandaia',\n        'Jaraguá',\n        'Jataí',\n        'Jaupaci',\n        'Jesúpolis',\n        'Joviânia',\n        'Jussara',\n        'Lagoa Santa',\n        'Leopoldo de Bulhões',\n        'Luziânia',\n        'Mairipotaba',\n        'Mambaí',\n        'Mara Rosa',\n        'Marzagão',\n        'Matrinchã',\n        'Maurilândia',\n        'Mimoso de Goiás',\n        'Minaçu',\n        'Mineiros',\n        'Moiporá',\n        'Monte Alegre de Goiás',\n        'Montes Claros de Goiás',\n        'Montividiu',\n        'Montividiu do Norte',\n        'Morrinhos',\n        'Morro Agudo de Goiás',\n        'Mossâmedes',\n        'Mozarlândia',\n        'Mundo Novo',\n        'Mutunópolis',\n        'Nazário',\n        'Nerópolis',\n        'Niquelândia',\n        'Nova América',\n        'Nova Aurora',\n        'Nova Crixás',\n        'Nova Glória',\n        'Nova Iguaçu de Goiás',\n        'Nova Roma',\n        'Nova Veneza',\n        'Novo Brasil',\n        'Novo Gama',\n        'Novo Planalto',\n        'Orizona',\n        'Ouro Verde de Goiás',\n        'Ouvidor',\n        'Padre Bernardo',\n        'Palestina de Goiás',\n        'Palmeiras de Goiás',\n        'Palmelo',\n        'Palminópolis',\n        'Panamá',\n        'Paranaiguara',\n        'Paraúna',\n        'Perolândia',\n        'Petrolina de Goiás',\n        'Pilar de Goiás',\n        'Piracanjuba',\n        'Piranhas',\n        'Pirenópolis',\n        'Pires do Rio',\n        'Planaltina',\n        'Pontalina',\n        'Porangatu',\n        'Porteirão',\n        'Portelândia',\n        'Posse',\n        'Professor Jamil',\n        'Quirinópolis',\n        'Rialma',\n        'Rianápolis',\n        'Rio Quente',\n        'Rio Verde',\n        'Rubiataba',\n        'Sanclerlândia',\n        'Santa Bárbara de Goiás',\n        'Santa Cruz de Goiás',\n        'Santa Fé de Goiás',\n        'Santa Helena de Goiás',\n        'Santa Isabel',\n        'Santa Rita do Araguaia',\n        'Santa Rita do Novo Destino',\n        'Santa Rosa de Goiás',\n        'Santa Tereza de Goiás',\n        'Santa Terezinha de Goiás',\n        'Santo Antônio da Barra',\n        'Santo Antônio de Goiás',\n        'Santo Antônio do Descoberto',\n        'São Domingos',\n        'São Francisco de Goiás',\n        'São João d\\'Aliança',\n        'São João da Paraúna',\n        'São Luís de Montes Belos',\n        'São Luíz do Norte',\n        'São Miguel do Araguaia',\n        'São Miguel do Passa Quatro',\n        'São Patrício',\n        'São Simão',\n        'Senador Canedo',\n        'Serranópolis',\n        'Silvânia',\n        'Simolândia',\n        'Sítio d\\'Abadia',\n        'Taquaral de Goiás',\n        'Teresina de Goiás',\n        'Terezópolis de Goiás',\n        'Três Ranchos',\n        'Trindade',\n        'Trombas',\n        'Turvânia',\n        'Turvelândia',\n        'Uirapuru',\n        'Uruaçu',\n        'Uruana',\n        'Urutaí',\n        'Valparaíso de Goiás',\n        'Varjão',\n        'Vianópolis',\n        'Vicentinópolis',\n        'Vila Boa',\n        'Vila Propício',\n      ],\n    },\n    {\n      sigla: 'PA',\n      nome: 'Pará',\n      cidades: [\n        'Abaetetuba',\n        'Abel Figueiredo',\n        'Acará',\n        'Afuá',\n        'Água Azul do Norte',\n        'Alenquer',\n        'Almeirim',\n        'Altamira',\n        'Anajás',\n        'Ananindeua',\n        'Anapu',\n        'Augusto Corrêa',\n        'Aurora do Pará',\n        'Aveiro',\n        'Bagre',\n        'Baião',\n        'Bannach',\n        'Barcarena',\n        'Belém',\n        'Belterra',\n        'Benevides',\n        'Bom Jesus do Tocantins',\n        'Bonito',\n        'Bragança',\n        'Brasil Novo',\n        'Brejo Grande do Araguaia',\n        'Breu Branco',\n        'Breves',\n        'Bujaru',\n        'Cachoeira do Arari',\n        'Cachoeira do Piriá',\n        'Cametá',\n        'Canaã dos Carajás',\n        'Capanema',\n        'Capitão Poço',\n        'Castanhal',\n        'Chaves',\n        'Colares',\n        'Conceição do Araguaia',\n        'Concórdia do Pará',\n        'Cumaru do Norte',\n        'Curionópolis',\n        'Curralinho',\n        'Curuá',\n        'Curuçá',\n        'Dom Eliseu',\n        'Eldorado dos Carajás',\n        'Faro',\n        'Floresta do Araguaia',\n        'Garrafão do Norte',\n        'Goianésia do Pará',\n        'Gurupá',\n        'Igarapé-Açu',\n        'Igarapé-Miri',\n        'Inhangapi',\n        'Ipixuna do Pará',\n        'Irituia',\n        'Itaituba',\n        'Itupiranga',\n        'Jacareacanga',\n        'Jacundá',\n        'Juruti',\n        'Limoeiro do Ajuru',\n        'Mãe do Rio',\n        'Magalhães Barata',\n        'Marabá',\n        'Maracanã',\n        'Marapanim',\n        'Marituba',\n        'Medicilândia',\n        'Melgaço',\n        'Mocajuba',\n        'Moju',\n        'Monte Alegre',\n        'Muaná',\n        'Nova Esperança do Piriá',\n        'Nova Ipixuna',\n        'Nova Timboteua',\n        'Novo Progresso',\n        'Novo Repartimento',\n        'Óbidos',\n        'Oeiras do Pará',\n        'Oriximiná',\n        'Ourém',\n        'Ourilândia do Norte',\n        'Pacajá',\n        'Palestina do Pará',\n        'Paragominas',\n        'Parauapebas',\n        'Pau d\\'Arco',\n        'Peixe-Boi',\n        'Piçarra',\n        'Placas',\n        'Ponta de Pedras',\n        'Portel',\n        'Porto de Moz',\n        'Prainha',\n        'Primavera',\n        'Quatipuru',\n        'Redenção',\n        'Rio Maria',\n        'Rondon do Pará',\n        'Rurópolis',\n        'Salinópolis',\n        'Salvaterra',\n        'Santa Bárbara do Pará',\n        'Santa Cruz do Arari',\n        'Santa Isabel do Pará',\n        'Santa Luzia do Pará',\n        'Santa Maria das Barreiras',\n        'Santa Maria do Pará',\n        'Santana do Araguaia',\n        'Santarém',\n        'Santarém Novo',\n        'Santo Antônio do Tauá',\n        'São Caetano de Odivela',\n        'São Domingos do Araguaia',\n        'São Domingos do Capim',\n        'São Félix do Xingu',\n        'São Francisco do Pará',\n        'São Geraldo do Araguaia',\n        'São João da Ponta',\n        'São João de Pirabas',\n        'São João do Araguaia',\n        'São Miguel do Guamá',\n        'São Sebastião da Boa Vista',\n        'Sapucaia',\n        'Senador José Porfírio',\n        'Soure',\n        'Tailândia',\n        'Terra Alta',\n        'Terra Santa',\n        'Tomé-Açu',\n        'Tracuateua',\n        'Trairão',\n        'Tucumã',\n        'Tucuruí',\n        'Ulianópolis',\n        'Uruará',\n        'Vigia',\n        'Viseu',\n        'Vitória do Xingu',\n        'Xinguara',\n      ],\n    },\n    {\n      sigla: 'ES',\n      nome: 'Espírito Santo',\n      cidades: [\n        'Afonso Cláudio',\n        'Água Doce do Norte',\n        'Águia Branca',\n        'Alegre',\n        'Alfredo Chaves',\n        'Alto Rio Novo',\n        'Anchieta',\n        'Apiacá',\n        'Aracruz',\n        'Atilio Vivacqua',\n        'Baixo Guandu',\n        'Barra de São Francisco',\n        'Boa Esperança',\n        'Bom Jesus do Norte',\n        'Brejetuba',\n        'Cachoeiro de Itapemirim',\n        'Cariacica',\n        'Castelo',\n        'Colatina',\n        'Conceição da Barra',\n        'Conceição do Castelo',\n        'Divino de São Lourenço',\n        'Domingos Martins',\n        'Dores do Rio Preto',\n        'Ecoporanga',\n        'Fundão',\n        'Governador Lindenberg',\n        'Guaçuí',\n        'Guarapari',\n        'Ibatiba',\n        'Ibiraçu',\n        'Ibitirama',\n        'Iconha',\n        'Irupi',\n        'Itaguaçu',\n        'Itapemirim',\n        'Itarana',\n        'Iúna',\n        'Jaguaré',\n        'Jerônimo Monteiro',\n        'João Neiva',\n        'Laranja da Terra',\n        'Linhares',\n        'Mantenópolis',\n        'Marataizes',\n        'Marechal Floriano',\n        'Marilândia',\n        'Mimoso do Sul',\n        'Montanha',\n        'Mucurici',\n        'Muniz Freire',\n        'Muqui',\n        'Nova Venécia',\n        'Pancas',\n        'Pedro Canário',\n        'Pinheiros',\n        'Piúma',\n        'Ponto Belo',\n        'Presidente Kennedy',\n        'Rio Bananal',\n        'Rio Novo do Sul',\n        'Santa Leopoldina',\n        'Santa Maria de Jetibá',\n        'Santa Teresa',\n        'São Domingos do Norte',\n        'São Gabriel da Palha',\n        'São José do Calçado',\n        'São Mateus',\n        'São Roque do Canaã',\n        'Serra',\n        'Sooretama',\n        'Vargem Alta',\n        'Venda Nova do Imigrante',\n        'Viana',\n        'Vila Pavão',\n        'Vila Valério',\n        'Vila Velha',\n        'Vitória',\n      ],\n    },\n    {\n      sigla: 'AM',\n      nome: 'Amazonas',\n      cidades: [\n        'Alvarães',\n        'Amaturá',\n        'Anamã',\n        'Anori',\n        'Apuí',\n        'Atalaia do Norte',\n        'Autazes',\n        'Barcelos',\n        'Barreirinha',\n        'Benjamin Constant',\n        'Beruri',\n        'Boa Vista do Ramos',\n        'Boca do Acre',\n        'Borba',\n        'Caapiranga',\n        'Canutama',\n        'Carauari',\n        'Careiro',\n        'Careiro da Várzea',\n        'Coari',\n        'Codajás',\n        'Eirunepé',\n        'Envira',\n        'Fonte Boa',\n        'Guajará',\n        'Humaitá',\n        'Ipixuna',\n        'Iranduba',\n        'Itacoatiara',\n        'Itamarati',\n        'Itapiranga',\n        'Japurá',\n        'Juruá',\n        'Jutaí',\n        'Lábrea',\n        'Manacapuru',\n        'Manaquiri',\n        'Manaus',\n        'Manicoré',\n        'Maraã',\n        'Maués',\n        'Nhamundá',\n        'Nova Olinda do Norte',\n        'Novo Airão',\n        'Novo Aripuanã',\n        'Parintins',\n        'Pauini',\n        'Presidente Figueiredo',\n        'Rio Preto da Eva',\n        'Santa Isabel do Rio Negro',\n        'Santo Antônio do Içá',\n        'São Gabriel da Cachoeira',\n        'São Paulo de Olivença',\n        'São Sebastião do Uatumã',\n        'Silves',\n        'Tabatinga',\n        'Tapauá',\n        'Tefé',\n        'Tonantins',\n        'Uarini',\n        'Urucará',\n        'Urucurituba',\n      ],\n    },\n    {\n      sigla: 'CE',\n      nome: 'Ceará',\n      cidades: [\n        'Abaiara',\n        'Acarapé',\n        'Acaraú',\n        'Acopiara',\n        'Aiuaba',\n        'Alcântaras',\n        'Altaneira',\n        'Alto Santo',\n        'Amontada',\n        'Antonina do Norte',\n        'Apuiarés',\n        'Aquiraz',\n        'Aracati',\n        'Aracoiaba',\n        'Ararendá',\n        'Araripe',\n        'Aratuba',\n        'Arneiroz',\n        'Assaré',\n        'Aurora',\n        'Baixio',\n        'Banabuiú',\n        'Barbalha',\n        'Barreira',\n        'Barro',\n        'Barroquinha',\n        'Baturité',\n        'Beberibe',\n        'Bela Cruz',\n        'Boa Viagem',\n        'Brejo Santo',\n        'Camocim',\n        'Campos Sales',\n        'Canindé',\n        'Capistrano',\n        'Caridade',\n        'Cariré',\n        'Caririaçu',\n        'Cariús',\n        'Carnaubal',\n        'Cascavel',\n        'Catarina',\n        'Catunda',\n        'Caucaia',\n        'Cedro',\n        'Chaval',\n        'Choró',\n        'Chorozinho',\n        'Coreaú',\n        'Crateús',\n        'Crato',\n        'Croatá',\n        'Cruz',\n        'Deputado Irapuan Pinheiro',\n        'Ererê',\n        'Eusébio',\n        'Farias Brito',\n        'Forquilha',\n        'Fortaleza',\n        'Fortim',\n        'Frecheirinha',\n        'General Sampaio',\n        'Graça',\n        'Granja',\n        'Granjeiro',\n        'Groaíras',\n        'Guaiúba',\n        'Guaraciaba do Norte',\n        'Guaramiranga',\n        'Hidrolândia',\n        'Horizonte',\n        'Ibaretama',\n        'Ibiapina',\n        'Ibicuitinga',\n        'Icapuí',\n        'Icó',\n        'Iguatu',\n        'Independência',\n        'Ipaporanga',\n        'Ipaumirim',\n        'Ipu',\n        'Ipueiras',\n        'Iracema',\n        'Irauçuba',\n        'Itaiçaba',\n        'Itaitinga',\n        'Itapagé',\n        'Itapipoca',\n        'Itapiúna',\n        'Itarema',\n        'Itatira',\n        'Jaguaretama',\n        'Jaguaribara',\n        'Jaguaribe',\n        'Jaguaruana',\n        'Jardim',\n        'Jati',\n        'Jijoca de Jericoaroara',\n        'Juazeiro do Norte',\n        'Jucás',\n        'Lavras da Mangabeira',\n        'Limoeiro do Norte',\n        'Madalena',\n        'Maracanaú',\n        'Maranguape',\n        'Marco',\n        'Martinópole',\n        'Massapê',\n        'Mauriti',\n        'Meruoca',\n        'Milagres',\n        'Milhã',\n        'Miraíma',\n        'Missão Velha',\n        'Mombaça',\n        'Monsenhor Tabosa',\n        'Morada Nova',\n        'Moraújo',\n        'Morrinhos',\n        'Mucambo',\n        'Mulungu',\n        'Nova Olinda',\n        'Nova Russas',\n        'Novo Oriente',\n        'Ocara',\n        'Orós',\n        'Pacajus',\n        'Pacatuba',\n        'Pacoti',\n        'Pacujá',\n        'Palhano',\n        'Palmácia',\n        'Paracuru',\n        'Paraipaba',\n        'Parambu',\n        'Paramoti',\n        'Pedra Branca',\n        'Penaforte',\n        'Pentecoste',\n        'Pereiro',\n        'Pindoretama',\n        'Piquet Carneiro',\n        'Pires Ferreira',\n        'Poranga',\n        'Porteiras',\n        'Potengi',\n        'Potiretama',\n        'Quiterianópolis',\n        'Quixadá',\n        'Quixelô',\n        'Quixeramobim',\n        'Quixeré',\n        'Redenção',\n        'Reriutaba',\n        'Russas',\n        'Saboeiro',\n        'Salitre',\n        'Santa Quitéria',\n        'Santana do Acaraú',\n        'Santana do Cariri',\n        'São Benedito',\n        'São Gonçalo do Amarante',\n        'São João do Jaguaribe',\n        'São Luís do Curu',\n        'Senador Pompeu',\n        'Senador Sá',\n        'Sobral',\n        'Solonópole',\n        'Tabuleiro do Norte',\n        'Tamboril',\n        'Tarrafas',\n        'Tauá',\n        'Tejuçuoca',\n        'Tianguá',\n        'Trairi',\n        'Tururu',\n        'Ubajara',\n        'Umari',\n        'Umirim',\n        'Uruburetama',\n        'Uruoca',\n        'Varjota',\n        'Várzea Alegre',\n        'Viçosa do Ceará',\n      ],\n    },\n    {\n      sigla: 'PI',\n      nome: 'Piauí',\n      cidades: [\n        'Acauã',\n        'Agricolândia',\n        'Água Branca',\n        'Alagoinha do Piauí',\n        'Alegrete do Piauí',\n        'Alto Longá',\n        'Altos',\n        'Alvorada do Gurguéia',\n        'Amarante',\n        'Angical do Piauí',\n        'Anísio de Abreu',\n        'Antônio Almeida',\n        'Aroazes',\n        'Arraial',\n        'Assunção do Piauí',\n        'Avelino Lopes',\n        'Baixa Grande do Ribeiro',\n        'Barra d\\'Alcântara',\n        'Barras',\n        'Barreiras do Piauí',\n        'Barro Duro',\n        'Batalha',\n        'Bela Vista do Piauí',\n        'Belém do Piauí',\n        'Beneditinos',\n        'Bertolínia',\n        'Betânia do Piauí',\n        'Boa Hora',\n        'Bocaina',\n        'Bom Jesus',\n        'Bom Princípio do Piauí',\n        'Bonfim do Piauí',\n        'Boqueirão do Piauí',\n        'Brasileira',\n        'Brejo do Piauí',\n        'Buriti dos Lopes',\n        'Buriti dos Montes',\n        'Cabeceiras do Piauí',\n        'Cajazeiras do Piauí',\n        'Cajueiro da Praia',\n        'Caldeirão Grande do Piauí',\n        'Campinas do Piauí',\n        'Campo Alegre do Fidalgo',\n        'Campo Grande do Piauí',\n        'Campo Largo do Piauí',\n        'Campo Maior',\n        'Canavieira',\n        'Canto do Buriti',\n        'Capitão de Campos',\n        'Capitão Gervásio Oliveira',\n        'Caracol',\n        'Caraúbas do Piauí',\n        'Caridade do Piauí',\n        'Castelo do Piauí',\n        'Caxingó',\n        'Cocal',\n        'Cocal de Telha',\n        'Cocal dos Alves',\n        'Coivaras',\n        'Colônia do Gurguéia',\n        'Colônia do Piauí',\n        'Conceição do Canindé',\n        'Coronel José Dias',\n        'Corrente',\n        'Cristalândia do Piauí',\n        'Cristino Castro',\n        'Curimatá',\n        'Currais',\n        'Curral Novo do Piauí',\n        'Curralinhos',\n        'Demerval Lobão',\n        'Dirceu Arcoverde',\n        'Dom Expedito Lopes',\n        'Dom Inocêncio',\n        'Domingos Mourão',\n        'Elesbão Veloso',\n        'Eliseu Martins',\n        'Esperantina',\n        'Fartura do Piauí',\n        'Flores do Piauí',\n        'Floresta do Piauí',\n        'Floriano',\n        'Francinópolis',\n        'Francisco Ayres',\n        'Francisco Macedo',\n        'Francisco Santos',\n        'Fronteiras',\n        'Geminiano',\n        'Gilbués',\n        'Guadalupe',\n        'Guaribas',\n        'Hugo Napoleão',\n        'Ilha Grande',\n        'Inhuma',\n        'Ipiranga do Piauí',\n        'Isaías Coelho',\n        'Itainópolis',\n        'Itaueira',\n        'Jacobina do Piauí',\n        'Jaicós',\n        'Jardim do Mulato',\n        'Jatobá do Piauí',\n        'Jerumenha',\n        'João Costa',\n        'Joaquim Pires',\n        'Joca Marques',\n        'José de Freitas',\n        'Juazeiro do Piauí',\n        'Júlio Borges',\n        'Jurema',\n        'Lagoa Alegre',\n        'Lagoa de São Francisco',\n        'Lagoa do Barro do Piauí',\n        'Lagoa do Piauí',\n        'Lagoa do Sítio',\n        'Lagoinha do Piauí',\n        'Landri Sales',\n        'Luís Correia',\n        'Luzilândia',\n        'Madeiro',\n        'Manoel Emídio',\n        'Marcolândia',\n        'Marcos Parente',\n        'Massapê do Piauí',\n        'Matias Olímpio',\n        'Miguel Alves',\n        'Miguel Leão',\n        'Milton Brandão',\n        'Monsenhor Gil',\n        'Monsenhor Hipólito',\n        'Monte Alegre do Piauí',\n        'Morro Cabeça no Tempo',\n        'Morro do Chapéu do Piauí',\n        'Murici dos Portelas',\n        'Nazaré do Piauí',\n        'Nossa Senhora de Nazaré',\n        'Nossa Senhora dos Remédios',\n        'Nova Santa Rita',\n        'Novo Oriente do Piauí',\n        'Novo Santo Antônio',\n        'Oeiras',\n        'Olho d\\'Água do Piauí',\n        'Padre Marcos',\n        'Paes Landim',\n        'Pajeú do Piauí',\n        'Palmeira do Piauí',\n        'Palmeirais',\n        'Paquetá',\n        'Parnaguá',\n        'Parnaíba',\n        'Passagem Franca do Piauí',\n        'Patos do Piauí',\n        'Pau d\\'Arco do Piauí',\n        'Paulistana',\n        'Pavussu',\n        'Pedro II',\n        'Pedro Laurentino',\n        'Picos',\n        'Pimenteiras',\n        'Pio IX',\n        'Piracuruca',\n        'Piripiri',\n        'Porto',\n        'Porto Alegre do Piauí',\n        'Prata do Piauí',\n        'Queimada Nova',\n        'Redenção do Gurguéia',\n        'Regeneração',\n        'Riacho Frio',\n        'Ribeira do Piauí',\n        'Ribeiro Gonçalves',\n        'Rio Grande do Piauí',\n        'Santa Cruz do Piauí',\n        'Santa Cruz dos Milagres',\n        'Santa Filomena',\n        'Santa Luz',\n        'Santa Rosa do Piauí',\n        'Santana do Piauí',\n        'Santo Antônio de Lisboa',\n        'Santo Antônio dos Milagres',\n        'Santo Inácio do Piauí',\n        'São Braz do Piauí',\n        'São Félix do Piauí',\n        'São Francisco de Assis do Piauí',\n        'São Francisco do Piauí',\n        'São Gonçalo do Gurguéia',\n        'São Gonçalo do Piauí',\n        'São João da Canabrava',\n        'São João da Fronteira',\n        'São João da Serra',\n        'São João da Varjota',\n        'São João do Arraial',\n        'São João do Piauí',\n        'São José do Divino',\n        'São José do Peixe',\n        'São José do Piauí',\n        'São Julião',\n        'São Lourenço do Piauí',\n        'São Luis do Piauí',\n        'São Miguel da Baixa Grande',\n        'São Miguel do Fidalgo',\n        'São Miguel do Tapuio',\n        'São Pedro do Piauí',\n        'São Raimundo Nonato',\n        'Sebastião Barros',\n        'Sebastião Leal',\n        'Sigefredo Pacheco',\n        'Simões',\n        'Simplício Mendes',\n        'Socorro do Piauí',\n        'Sussuapara',\n        'Tamboril do Piauí',\n        'Tanque do Piauí',\n        'Teresina',\n        'União',\n        'Uruçuí',\n        'Valença do Piauí',\n        'Várzea Branca',\n        'Várzea Grande',\n        'Vera Mendes',\n        'Vila Nova do Piauí',\n        'Wall Ferraz',\n      ],\n    },\n    {\n      sigla: 'MS',\n      nome: 'Mato Grosso do Sul',\n      cidades: [\n        'Água Clara',\n        'Alcinópolis',\n        'Amambaí',\n        'Anastácio',\n        'Anaurilândia',\n        'Angélica',\n        'Antônio João',\n        'Aparecida do Taboado',\n        'Aquidauana',\n        'Aral Moreira',\n        'Bandeirantes',\n        'Bataguassu',\n        'Bataiporã',\n        'Bela Vista',\n        'Bodoquena',\n        'Bonito',\n        'Brasilândia',\n        'Caarapó',\n        'Camapuã',\n        'Campo Grande',\n        'Caracol',\n        'Cassilândia',\n        'Chapadão do Sul',\n        'Corguinho',\n        'Coronel Sapucaia',\n        'Corumbá',\n        'Costa Rica',\n        'Coxim',\n        'Deodápolis',\n        'Dois Irmãos do Buriti',\n        'Douradina',\n        'Dourados',\n        'Eldorado',\n        'Fátima do Sul',\n        'Glória de Dourados',\n        'Guia Lopes da Laguna',\n        'Iguatemi',\n        'Inocência',\n        'Itaporã',\n        'Itaquiraí',\n        'Ivinhema',\n        'Japorã',\n        'Jaraguari',\n        'Jardim',\n        'Jateí',\n        'Juti',\n        'Ladário',\n        'Laguna Carapã',\n        'Maracaju',\n        'Miranda',\n        'Mundo Novo',\n        'Naviraí',\n        'Nioaque',\n        'Nova Alvorada do Sul',\n        'Nova Andradina',\n        'Novo Horizonte do Sul',\n        'Paranaíba',\n        'Paranhos',\n        'Pedro Gomes',\n        'Ponta Porã',\n        'Porto Murtinho',\n        'Ribas do Rio Pardo',\n        'Rio Brilhante',\n        'Rio Negro',\n        'Rio Verde de Mato Grosso',\n        'Rochedo',\n        'Santa Rita do Pardo',\n        'São Gabriel do Oeste',\n        'Selvíria',\n        'Sete Quedas',\n        'Sidrolândia',\n        'Sonora',\n        'Tacuru',\n        'Taquarussu',\n        'Terenos',\n        'Três Lagoas',\n        'Vicentina',\n      ],\n    },\n    {\n      sigla: 'RO',\n      nome: 'Rondônia',\n      cidades: [\n        'Alta Floresta d\\'Oeste',\n        'Alto Alegre do Parecis',\n        'Alto Paraíso',\n        'Alvorada d\\'Oeste',\n        'Ariquemes',\n        'Buritis',\n        'Cabixi',\n        'Cacaulândia',\n        'Cacoal',\n        'Campo Novo de Rondônia',\n        'Candeias do Jamari',\n        'Castanheiras',\n        'Cerejeiras',\n        'Chupinguaia',\n        'Colorado do Oeste',\n        'Corumbiara',\n        'Costa Marques',\n        'Cujubim',\n        'Espigão d\\'Oeste',\n        'Governador Jorge Teixeira',\n        'Guajará-Mirim',\n        'Itapuã do Oeste',\n        'Jaru',\n        'Ji-Paraná',\n        'Machadinho d\\'Oeste',\n        'Ministro Andreazza',\n        'Mirante da Serra',\n        'Monte Negro',\n        'Nova Brasilândia d\\'Oeste',\n        'Nova Mamoré',\n        'Nova União',\n        'Novo Horizonte do Oeste',\n        'Ouro Preto do Oeste',\n        'Parecis',\n        'Pimenta Bueno',\n        'Pimenteiras do Oeste',\n        'Porto Velho',\n        'Presidente Médici',\n        'Primavera de Rondônia',\n        'Rio Crespo',\n        'Rolim de Moura',\n        'Santa Luzia d\\'Oeste',\n        'São Felipe d\\'Oeste',\n        'São Francisco do Guaporé',\n        'São Miguel do Guaporé',\n        'Seringueiras',\n        'Teixeirópolis',\n        'Theobroma',\n        'Urupá',\n        'Vale do Anari',\n        'Vale do Paraíso',\n        'Vilhena',\n      ],\n    },\n    {\n      sigla: 'MG',\n      nome: 'Minas Gerais',\n      cidades: [\n        'Abadia dos Dourados',\n        'Abaeté',\n        'Abre Campo',\n        'Acaiaca',\n        'Açucena',\n        'Água Boa',\n        'Água Comprida',\n        'Aguanil',\n        'Águas Formosas',\n        'Águas Vermelhas',\n        'Aimorés',\n        'Aiuruoca',\n        'Alagoa',\n        'Albertina',\n        'Além Paraíba',\n        'Alfenas',\n        'Alfredo Vasconcelos',\n        'Almenara',\n        'Alpercata',\n        'Alpinópolis',\n        'Alterosa',\n        'Alto Caparaó',\n        'Alto Jequitibá',\n        'Alto Rio Doce',\n        'Alvarenga',\n        'Alvinópolis',\n        'Alvorada de Minas',\n        'Amparo do Serra',\n        'Andradas',\n        'Andrelândia',\n        'Angelândia',\n        'Antônio Carlos',\n        'Antônio Dias',\n        'Antônio Prado de Minas',\n        'Araçaí',\n        'Aracitaba',\n        'Araçuaí',\n        'Araguari',\n        'Arantina',\n        'Araponga',\n        'Araporã',\n        'Arapuá',\n        'Araújos',\n        'Araxá',\n        'Arceburgo',\n        'Arcos',\n        'Areado',\n        'Argirita',\n        'Aricanduva',\n        'Arinos',\n        'Astolfo Dutra',\n        'Ataléia',\n        'Augusto de Lima',\n        'Baependi',\n        'Baldim',\n        'Bambuí',\n        'Bandeira',\n        'Bandeira do Sul',\n        'Barão de Cocais',\n        'Barão de Monte Alto',\n        'Barbacena',\n        'Barra Longa',\n        'Barroso',\n        'Bela Vista de Minas',\n        'Belmiro Braga',\n        'Belo Horizonte',\n        'Belo Oriente',\n        'Belo Vale',\n        'Berilo',\n        'Berizal',\n        'Bertópolis',\n        'Betim',\n        'Bias Fortes',\n        'Bicas',\n        'Biquinhas',\n        'Boa Esperança',\n        'Bocaina de Minas',\n        'Bocaiúva',\n        'Bom Despacho',\n        'Bom Jardim de Minas',\n        'Bom Jesus da Penha',\n        'Bom Jesus do Amparo',\n        'Bom Jesus do Galho',\n        'Bom Repouso',\n        'Bom Sucesso',\n        'Bonfim',\n        'Bonfinópolis de Minas',\n        'Bonito de Minas',\n        'Borda da Mata',\n        'Botelhos',\n        'Botumirim',\n        'Brás Pires',\n        'Brasilândia de Minas',\n        'Brasília de Minas',\n        'Brasópolis',\n        'Braúnas',\n        'Brumadinho',\n        'Bueno Brandão',\n        'Buenópolis',\n        'Bugre',\n        'Buritis',\n        'Buritizeiro',\n        'Cabeceira Grande',\n        'Cabo Verde',\n        'Cachoeira da Prata',\n        'Cachoeira de Minas',\n        'Cachoeira de Pajeú',\n        'Cachoeira Dourada',\n        'Caetanópolis',\n        'Caeté',\n        'Caiana',\n        'Cajuri',\n        'Caldas',\n        'Camacho',\n        'Camanducaia',\n        'Cambuí',\n        'Cambuquira',\n        'Campanário',\n        'Campanha',\n        'Campestre',\n        'Campina Verde',\n        'Campo Azul',\n        'Campo Belo',\n        'Campo do Meio',\n        'Campo Florido',\n        'Campos Altos',\n        'Campos Gerais',\n        'Cana Verde',\n        'Canaã',\n        'Canápolis',\n        'Candeias',\n        'Cantagalo',\n        'Caparaó',\n        'Capela Nova',\n        'Capelinha',\n        'Capetinga',\n        'Capim Branco',\n        'Capinópolis',\n        'Capitão Andrade',\n        'Capitão Enéas',\n        'Capitólio',\n        'Caputira',\n        'Caraí',\n        'Caranaíba',\n        'Carandaí',\n        'Carangola',\n        'Caratinga',\n        'Carbonita',\n        'Careaçu',\n        'Carlos Chagas',\n        'Carmésia',\n        'Carmo da Cachoeira',\n        'Carmo da Mata',\n        'Carmo de Minas',\n        'Carmo do Cajuru',\n        'Carmo do Paranaíba',\n        'Carmo do Rio Claro',\n        'Carmópolis de Minas',\n        'Carneirinho',\n        'Carrancas',\n        'Carvalhópolis',\n        'Carvalhos',\n        'Casa Grande',\n        'Cascalho Rico',\n        'Cássia',\n        'Cataguases',\n        'Catas Altas',\n        'Catas Altas da Noruega',\n        'Catuji',\n        'Catuti',\n        'Caxambu',\n        'Cedro do Abaeté',\n        'Central de Minas',\n        'Centralina',\n        'Chácara',\n        'Chalé',\n        'Chapada do Norte',\n        'Chapada Gaúcha',\n        'Chiador',\n        'Cipotânea',\n        'Claraval',\n        'Claro dos Poções',\n        'Cláudio',\n        'Coimbra',\n        'Coluna',\n        'Comendador Gomes',\n        'Comercinho',\n        'Conceição da Aparecida',\n        'Conceição da Barra de Minas',\n        'Conceição das Alagoas',\n        'Conceição das Pedras',\n        'Conceição de Ipanema',\n        'Conceição do Mato Dentro',\n        'Conceição do Pará',\n        'Conceição do Rio Verde',\n        'Conceição dos Ouros',\n        'Cônego Marinho',\n        'Confins',\n        'Congonhal',\n        'Congonhas',\n        'Congonhas do Norte',\n        'Conquista',\n        'Conselheiro Lafaiete',\n        'Conselheiro Pena',\n        'Consolação',\n        'Contagem',\n        'Coqueiral',\n        'Coração de Jesus',\n        'Cordisburgo',\n        'Cordislândia',\n        'Corinto',\n        'Coroaci',\n        'Coromandel',\n        'Coronel Fabriciano',\n        'Coronel Murta',\n        'Coronel Pacheco',\n        'Coronel Xavier Chaves',\n        'Córrego Danta',\n        'Córrego do Bom Jesus',\n        'Córrego Fundo',\n        'Córrego Novo',\n        'Couto de Magalhães de Minas',\n        'Crisólita',\n        'Cristais',\n        'Cristália',\n        'Cristiano Otoni',\n        'Cristina',\n        'Crucilândia',\n        'Cruzeiro da Fortaleza',\n        'Cruzília',\n        'Cuparaque',\n        'Curral de Dentro',\n        'Curvelo',\n        'Datas',\n        'Delfim Moreira',\n        'Delfinópolis',\n        'Delta',\n        'Descoberto',\n        'Desterro de Entre Rios',\n        'Desterro do Melo',\n        'Diamantina',\n        'Diogo de Vasconcelos',\n        'Dionísio',\n        'Divinésia',\n        'Divino',\n        'Divino das Laranjeiras',\n        'Divinolândia de Minas',\n        'Divinópolis',\n        'Divisa Alegre',\n        'Divisa Nova',\n        'Divisópolis',\n        'Dom Bosco',\n        'Dom Cavati',\n        'Dom Joaquim',\n        'Dom Silvério',\n        'Dom Viçoso',\n        'Dona Euzébia',\n        'Dores de Campos',\n        'Dores de Guanhães',\n        'Dores do Indaiá',\n        'Dores do Turvo',\n        'Doresópolis',\n        'Douradoquara',\n        'Durandé',\n        'Elói Mendes',\n        'Engenheiro Caldas',\n        'Engenheiro Navarro',\n        'Entre Folhas',\n        'Entre Rios de Minas',\n        'Ervália',\n        'Esmeraldas',\n        'Espera Feliz',\n        'Espinosa',\n        'Espírito Santo do Dourado',\n        'Estiva',\n        'Estrela Dalva',\n        'Estrela do Indaiá',\n        'Estrela do Sul',\n        'Eugenópolis',\n        'Ewbank da Câmara',\n        'Extrema',\n        'Fama',\n        'Faria Lemos',\n        'Felício dos Santos',\n        'Felisburgo',\n        'Felixlândia',\n        'Fernandes Tourinho',\n        'Ferros',\n        'Fervedouro',\n        'Florestal',\n        'Formiga',\n        'Formoso',\n        'Fortaleza de Minas',\n        'Fortuna de Minas',\n        'Francisco Badaró',\n        'Francisco Dumont',\n        'Francisco Sá',\n        'Franciscópolis',\n        'Frei Gaspar',\n        'Frei Inocêncio',\n        'Frei Lagonegro',\n        'Fronteira',\n        'Fronteira dos Vales',\n        'Fruta de Leite',\n        'Frutal',\n        'Funilândia',\n        'Galiléia',\n        'Gameleiras',\n        'Glaucilândia',\n        'Goiabeira',\n        'Goianá',\n        'Gonçalves',\n        'Gonzaga',\n        'Gouveia',\n        'Governador Valadares',\n        'Grão Mogol',\n        'Grupiara',\n        'Guanhães',\n        'Guapé',\n        'Guaraciaba',\n        'Guaraciama',\n        'Guaranésia',\n        'Guarani',\n        'Guarará',\n        'Guarda-Mor',\n        'Guaxupé',\n        'Guidoval',\n        'Guimarânia',\n        'Guiricema',\n        'Gurinhatã',\n        'Heliodora',\n        'Iapu',\n        'Ibertioga',\n        'Ibiá',\n        'Ibiaí',\n        'Ibiracatu',\n        'Ibiraci',\n        'Ibirité',\n        'Ibitiúra de Minas',\n        'Ibituruna',\n        'Icaraí de Minas',\n        'Igarapé',\n        'Igaratinga',\n        'Iguatama',\n        'Ijaci',\n        'Ilicínea',\n        'Imbé de Minas',\n        'Inconfidentes',\n        'Indaiabira',\n        'Indianópolis',\n        'Ingaí',\n        'Inhapim',\n        'Inhaúma',\n        'Inimutaba',\n        'Ipaba',\n        'Ipanema',\n        'Ipatinga',\n        'Ipiaçu',\n        'Ipuiúna',\n        'Iraí de Minas',\n        'Itabira',\n        'Itabirinha de Mantena',\n        'Itabirito',\n        'Itacambira',\n        'Itacarambi',\n        'Itaguara',\n        'Itaipé',\n        'Itajubá',\n        'Itamarandiba',\n        'Itamarati de Minas',\n        'Itambacuri',\n        'Itambé do Mato Dentro',\n        'Itamogi',\n        'Itamonte',\n        'Itanhandu',\n        'Itanhomi',\n        'Itaobim',\n        'Itapagipe',\n        'Itapecerica',\n        'Itapeva',\n        'Itatiaiuçu',\n        'Itaú de Minas',\n        'Itaúna',\n        'Itaverava',\n        'Itinga',\n        'Itueta',\n        'Ituiutaba',\n        'Itumirim',\n        'Iturama',\n        'Itutinga',\n        'Jaboticatubas',\n        'Jacinto',\n        'Jacuí',\n        'Jacutinga',\n        'Jaguaraçu',\n        'Jaíba',\n        'Jampruca',\n        'Janaúba',\n        'Januária',\n        'Japaraíba',\n        'Japonvar',\n        'Jeceaba',\n        'Jenipapo de Minas',\n        'Jequeri',\n        'Jequitaí',\n        'Jequitibá',\n        'Jequitinhonha',\n        'Jesuânia',\n        'Joaíma',\n        'Joanésia',\n        'João Monlevade',\n        'João Pinheiro',\n        'Joaquim Felício',\n        'Jordânia',\n        'José Gonçalves de Minas',\n        'José Raydan',\n        'Josenópolis',\n        'Juatuba',\n        'Juiz de Fora',\n        'Juramento',\n        'Juruaia',\n        'Juvenília',\n        'Ladainha',\n        'Lagamar',\n        'Lagoa da Prata',\n        'Lagoa dos Patos',\n        'Lagoa Dourada',\n        'Lagoa Formosa',\n        'Lagoa Grande',\n        'Lagoa Santa',\n        'Lajinha',\n        'Lambari',\n        'Lamim',\n        'Laranjal',\n        'Lassance',\n        'Lavras',\n        'Leandro Ferreira',\n        'Leme do Prado',\n        'Leopoldina',\n        'Liberdade',\n        'Lima Duarte',\n        'Limeira do Oeste',\n        'Lontra',\n        'Luisburgo',\n        'Luislândia',\n        'Luminárias',\n        'Luz',\n        'Machacalis',\n        'Machado',\n        'Madre de Deus de Minas',\n        'Malacacheta',\n        'Mamonas',\n        'Manga',\n        'Manhuaçu',\n        'Manhumirim',\n        'Mantena',\n        'Mar de Espanha',\n        'Maravilhas',\n        'Maria da Fé',\n        'Mariana',\n        'Marilac',\n        'Mário Campos',\n        'Maripá de Minas',\n        'Marliéria',\n        'Marmelópolis',\n        'Martinho Campos',\n        'Martins Soares',\n        'Mata Verde',\n        'Materlândia',\n        'Mateus Leme',\n        'Mathias Lobato',\n        'Matias Barbosa',\n        'Matias Cardoso',\n        'Matipó',\n        'Mato Verde',\n        'Matozinhos',\n        'Matutina',\n        'Medeiros',\n        'Medina',\n        'Mendes Pimentel',\n        'Mercês',\n        'Mesquita',\n        'Minas Novas',\n        'Minduri',\n        'Mirabela',\n        'Miradouro',\n        'Miraí',\n        'Miravânia',\n        'Moeda',\n        'Moema',\n        'Monjolos',\n        'Monsenhor Paulo',\n        'Montalvânia',\n        'Monte Alegre de Minas',\n        'Monte Azul',\n        'Monte Belo',\n        'Monte Carmelo',\n        'Monte Formoso',\n        'Monte Santo de Minas',\n        'Monte Sião',\n        'Montes Claros',\n        'Montezuma',\n        'Morada Nova de Minas',\n        'Morro da Garça',\n        'Morro do Pilar',\n        'Munhoz',\n        'Muriaé',\n        'Mutum',\n        'Muzambinho',\n        'Nacip Raydan',\n        'Nanuque',\n        'Naque',\n        'Natalândia',\n        'Natércia',\n        'Nazareno',\n        'Nepomuceno',\n        'Ninheira',\n        'Nova Belém',\n        'Nova Era',\n        'Nova Lima',\n        'Nova Módica',\n        'Nova Ponte',\n        'Nova Porteirinha',\n        'Nova Resende',\n        'Nova Serrana',\n        'Nova União',\n        'Novo Cruzeiro',\n        'Novo Oriente de Minas',\n        'Novorizonte',\n        'Olaria',\n        'Olhos-d\\'Água',\n        'Olímpio Noronha',\n        'Oliveira',\n        'Oliveira Fortes',\n        'Onça de Pitangui',\n        'Oratórios',\n        'Orizânia',\n        'Ouro Branco',\n        'Ouro Fino',\n        'Ouro Preto',\n        'Ouro Verde de Minas',\n        'Padre Carvalho',\n        'Padre Paraíso',\n        'Pai Pedro',\n        'Paineiras',\n        'Pains',\n        'Paiva',\n        'Palma',\n        'Palmópolis',\n        'Papagaios',\n        'Pará de Minas',\n        'Paracatu',\n        'Paraguaçu',\n        'Paraisópolis',\n        'Paraopeba',\n        'Passa Quatro',\n        'Passa Tempo',\n        'Passa-Vinte',\n        'Passabém',\n        'Passos',\n        'Patis',\n        'Patos de Minas',\n        'Patrocínio',\n        'Patrocínio do Muriaé',\n        'Paula Cândido',\n        'Paulistas',\n        'Pavão',\n        'Peçanha',\n        'Pedra Azul',\n        'Pedra Bonita',\n        'Pedra do Anta',\n        'Pedra do Indaiá',\n        'Pedra Dourada',\n        'Pedralva',\n        'Pedras de Maria da Cruz',\n        'Pedrinópolis',\n        'Pedro Leopoldo',\n        'Pedro Teixeira',\n        'Pequeri',\n        'Pequi',\n        'Perdigão',\n        'Perdizes',\n        'Perdões',\n        'Periquito',\n        'Pescador',\n        'Piau',\n        'Piedade de Caratinga',\n        'Piedade de Ponte Nova',\n        'Piedade do Rio Grande',\n        'Piedade dos Gerais',\n        'Pimenta',\n        'Pingo-d\\'Água',\n        'Pintópolis',\n        'Piracema',\n        'Pirajuba',\n        'Piranga',\n        'Piranguçu',\n        'Piranguinho',\n        'Pirapetinga',\n        'Pirapora',\n        'Piraúba',\n        'Pitangui',\n        'Piumhi',\n        'Planura',\n        'Poço Fundo',\n        'Poços de Caldas',\n        'Pocrane',\n        'Pompéu',\n        'Ponte Nova',\n        'Ponto Chique',\n        'Ponto dos Volantes',\n        'Porteirinha',\n        'Porto Firme',\n        'Poté',\n        'Pouso Alegre',\n        'Pouso Alto',\n        'Prados',\n        'Prata',\n        'Pratápolis',\n        'Pratinha',\n        'Presidente Bernardes',\n        'Presidente Juscelino',\n        'Presidente Kubitschek',\n        'Presidente Olegário',\n        'Prudente de Morais',\n        'Quartel Geral',\n        'Queluzito',\n        'Raposos',\n        'Raul Soares',\n        'Recreio',\n        'Reduto',\n        'Resende Costa',\n        'Resplendor',\n        'Ressaquinha',\n        'Riachinho',\n        'Riacho dos Machados',\n        'Ribeirão das Neves',\n        'Ribeirão Vermelho',\n        'Rio Acima',\n        'Rio Casca',\n        'Rio do Prado',\n        'Rio Doce',\n        'Rio Espera',\n        'Rio Manso',\n        'Rio Novo',\n        'Rio Paranaíba',\n        'Rio Pardo de Minas',\n        'Rio Piracicaba',\n        'Rio Pomba',\n        'Rio Preto',\n        'Rio Vermelho',\n        'Ritápolis',\n        'Rochedo de Minas',\n        'Rodeiro',\n        'Romaria',\n        'Rosário da Limeira',\n        'Rubelita',\n        'Rubim',\n        'Sabará',\n        'Sabinópolis',\n        'Sacramento',\n        'Salinas',\n        'Salto da Divisa',\n        'Santa Bárbara',\n        'Santa Bárbara do Leste',\n        'Santa Bárbara do Monte Verde',\n        'Santa Bárbara do Tugúrio',\n        'Santa Cruz de Minas',\n        'Santa Cruz de Salinas',\n        'Santa Cruz do Escalvado',\n        'Santa Efigênia de Minas',\n        'Santa Fé de Minas',\n        'Santa Helena de Minas',\n        'Santa Juliana',\n        'Santa Luzia',\n        'Santa Margarida',\n        'Santa Maria de Itabira',\n        'Santa Maria do Salto',\n        'Santa Maria do Suaçuí',\n        'Santa Rita de Caldas',\n        'Santa Rita de Ibitipoca',\n        'Santa Rita de Jacutinga',\n        'Santa Rita de Minas',\n        'Santa Rita do Itueto',\n        'Santa Rita do Sapucaí',\n        'Santa Rosa da Serra',\n        'Santa Vitória',\n        'Santana da Vargem',\n        'Santana de Cataguases',\n        'Santana de Pirapama',\n        'Santana do Deserto',\n        'Santana do Garambéu',\n        'Santana do Jacaré',\n        'Santana do Manhuaçu',\n        'Santana do Paraíso',\n        'Santana do Riacho',\n        'Santana dos Montes',\n        'Santo Antônio do Amparo',\n        'Santo Antônio do Aventureiro',\n        'Santo Antônio do Grama',\n        'Santo Antônio do Itambé',\n        'Santo Antônio do Jacinto',\n        'Santo Antônio do Monte',\n        'Santo Antônio do Retiro',\n        'Santo Antônio do Rio Abaixo',\n        'Santo Hipólito',\n        'Santos Dumont',\n        'São Bento Abade',\n        'São Brás do Suaçuí',\n        'São Domingos das Dores',\n        'São Domingos do Prata',\n        'São Félix de Minas',\n        'São Francisco',\n        'São Francisco de Paula',\n        'São Francisco de Sales',\n        'São Francisco do Glória',\n        'São Geraldo',\n        'São Geraldo da Piedade',\n        'São Geraldo do Baixio',\n        'São Gonçalo do Abaeté',\n        'São Gonçalo do Pará',\n        'São Gonçalo do Rio Abaixo',\n        'São Gonçalo do Rio Preto',\n        'São Gonçalo do Sapucaí',\n        'São Gotardo',\n        'São João Batista do Glória',\n        'São João da Lagoa',\n        'São João da Mata',\n        'São João da Ponte',\n        'São João das Missões',\n        'São João del Rei',\n        'São João do Manhuaçu',\n        'São João do Manteninha',\n        'São João do Oriente',\n        'São João do Pacuí',\n        'São João do Paraíso',\n        'São João Evangelista',\n        'São João Nepomuceno',\n        'São Joaquim de Bicas',\n        'São José da Barra',\n        'São José da Lapa',\n        'São José da Safira',\n        'São José da Varginha',\n        'São José do Alegre',\n        'São José do Divino',\n        'São José do Goiabal',\n        'São José do Jacuri',\n        'São José do Mantimento',\n        'São Lourenço',\n        'São Miguel do Anta',\n        'São Pedro da União',\n        'São Pedro do Suaçuí',\n        'São Pedro dos Ferros',\n        'São Romão',\n        'São Roque de Minas',\n        'São Sebastião da Bela Vista',\n        'São Sebastião da Vargem Alegre',\n        'São Sebastião do Anta',\n        'São Sebastião do Maranhão',\n        'São Sebastião do Oeste',\n        'São Sebastião do Paraíso',\n        'São Sebastião do Rio Preto',\n        'São Sebastião do Rio Verde',\n        'São Thomé das Letras',\n        'São Tiago',\n        'São Tomás de Aquino',\n        'São Vicente de Minas',\n        'Sapucaí-Mirim',\n        'Sardoá',\n        'Sarzedo',\n        'Sem-Peixe',\n        'Senador Amaral',\n        'Senador Cortes',\n        'Senador Firmino',\n        'Senador José Bento',\n        'Senador Modestino Gonçalves',\n        'Senhora de Oliveira',\n        'Senhora do Porto',\n        'Senhora dos Remédios',\n        'Sericita',\n        'Seritinga',\n        'Serra Azul de Minas',\n        'Serra da Saudade',\n        'Serra do Salitre',\n        'Serra dos Aimorés',\n        'Serrania',\n        'Serranópolis de Minas',\n        'Serranos',\n        'Serro',\n        'Sete Lagoas',\n        'Setubinha',\n        'Silveirânia',\n        'Silvianópolis',\n        'Simão Pereira',\n        'Simonésia',\n        'Sobrália',\n        'Soledade de Minas',\n        'Tabuleiro',\n        'Taiobeiras',\n        'Taparuba',\n        'Tapira',\n        'Tapiraí',\n        'Taquaraçu de Minas',\n        'Tarumirim',\n        'Teixeiras',\n        'Teófilo Otoni',\n        'Timóteo',\n        'Tiradentes',\n        'Tiros',\n        'Tocantins',\n        'Tocos do Moji',\n        'Toledo',\n        'Tombos',\n        'Três Corações',\n        'Três Marias',\n        'Três Pontas',\n        'Tumiritinga',\n        'Tupaciguara',\n        'Turmalina',\n        'Turvolândia',\n        'Ubá',\n        'Ubaí',\n        'Ubaporanga',\n        'Uberaba',\n        'Uberlândia',\n        'Umburatiba',\n        'Unaí',\n        'União de Minas',\n        'Uruana de Minas',\n        'Urucânia',\n        'Urucuia',\n        'Vargem Alegre',\n        'Vargem Bonita',\n        'Vargem Grande do Rio Pardo',\n        'Varginha',\n        'Varjão de Minas',\n        'Várzea da Palma',\n        'Varzelândia',\n        'Vazante',\n        'Verdelândia',\n        'Veredinha',\n        'Veríssimo',\n        'Vermelho Novo',\n        'Vespasiano',\n        'Viçosa',\n        'Vieiras',\n        'Virgem da Lapa',\n        'Virgínia',\n        'Virginópolis',\n        'Virgolândia',\n        'Visconde do Rio Branco',\n        'Volta Grande',\n        'Wenceslau Braz',\n      ],\n    },\n    {\n      sigla: 'RN',\n      nome: 'Rio Grande do Norte',\n      cidades: [\n        'Acari',\n        'Açu',\n        'Afonso Bezerra',\n        'Água Nova',\n        'Alexandria',\n        'Almino Afonso',\n        'Alto do Rodrigues',\n        'Angicos',\n        'Antônio Martins',\n        'Apodi',\n        'Areia Branca',\n        'Arês',\n        'Augusto Severo',\n        'Baía Formosa',\n        'Baraúna',\n        'Barcelona',\n        'Bento Fernandes',\n        'Bodó',\n        'Bom Jesus',\n        'Brejinho',\n        'Caiçara do Norte',\n        'Caiçara do Rio do Vento',\n        'Caicó',\n        'Campo Redondo',\n        'Canguaretama',\n        'Caraúbas',\n        'Carnaúba dos Dantas',\n        'Carnaubais',\n        'Ceará-Mirim',\n        'Cerro Corá',\n        'Coronel Ezequiel',\n        'Coronel João Pessoa',\n        'Cruzeta',\n        'Currais Novos',\n        'Doutor Severiano',\n        'Encanto',\n        'Equador',\n        'Espírito Santo',\n        'Extremoz',\n        'Felipe Guerra',\n        'Fernando Pedroza',\n        'Florânia',\n        'Francisco Dantas',\n        'Frutuoso Gomes',\n        'Galinhos',\n        'Goianinha',\n        'Governador Dix-Sept Rosado',\n        'Grossos',\n        'Guamaré',\n        'Ielmo Marinho',\n        'Ipanguaçu',\n        'Ipueira',\n        'Itajá',\n        'Itaú',\n        'Jaçanã',\n        'Jandaíra',\n        'Janduís',\n        'Januário Cicco',\n        'Japi',\n        'Jardim de Angicos',\n        'Jardim de Piranhas',\n        'Jardim do Seridó',\n        'João Câmara',\n        'João Dias',\n        'José da Penha',\n        'Jucurutu',\n        'Jundiá',\n        'Lagoa d\\'Anta',\n        'Lagoa de Pedras',\n        'Lagoa de Velhos',\n        'Lagoa Nova',\n        'Lagoa Salgada',\n        'Lajes',\n        'Lajes Pintadas',\n        'Lucrécia',\n        'Luís Gomes',\n        'Macaíba',\n        'Macau',\n        'Major Sales',\n        'Marcelino Vieira',\n        'Martins',\n        'Maxaranguape',\n        'Messias Targino',\n        'Montanhas',\n        'Monte Alegre',\n        'Monte das Gameleiras',\n        'Mossoró',\n        'Natal',\n        'Nísia Floresta',\n        'Nova Cruz',\n        'Olho-d\\'Água do Borges',\n        'Ouro Branco',\n        'Paraná',\n        'Paraú',\n        'Parazinho',\n        'Parelhas',\n        'Parnamirim',\n        'Passa e Fica',\n        'Passagem',\n        'Patu',\n        'Pau dos Ferros',\n        'Pedra Grande',\n        'Pedra Preta',\n        'Pedro Avelino',\n        'Pedro Velho',\n        'Pendências',\n        'Pilões',\n        'Poço Branco',\n        'Portalegre',\n        'Porto do Mangue',\n        'Presidente Juscelino',\n        'Pureza',\n        'Rafael Fernandes',\n        'Rafael Godeiro',\n        'Riacho da Cruz',\n        'Riacho de Santana',\n        'Riachuelo',\n        'Rio do Fogo',\n        'Rodolfo Fernandes',\n        'Ruy Barbosa',\n        'Santa Cruz',\n        'Santa Maria',\n        'Santana do Matos',\n        'Santana do Seridó',\n        'Santo Antônio',\n        'São Bento do Norte',\n        'São Bento do Trairí',\n        'São Fernando',\n        'São Francisco do Oeste',\n        'São Gonçalo do Amarante',\n        'São João do Sabugi',\n        'São José de Mipibu',\n        'São José do Campestre',\n        'São José do Seridó',\n        'São Miguel',\n        'São Miguel de Touros',\n        'São Paulo do Potengi',\n        'São Pedro',\n        'São Rafael',\n        'São Tomé',\n        'São Vicente',\n        'Senador Elói de Souza',\n        'Senador Georgino Avelino',\n        'Serra de São Bento',\n        'Serra do Mel',\n        'Serra Negra do Norte',\n        'Serrinha',\n        'Serrinha dos Pintos',\n        'Severiano Melo',\n        'Sítio Novo',\n        'Taboleiro Grande',\n        'Taipu',\n        'Tangará',\n        'Tenente Ananias',\n        'Tenente Laurentino Cruz',\n        'Tibau',\n        'Tibau do Sul',\n        'Timbaúba dos Batistas',\n        'Touros',\n        'Triunfo Potiguar',\n        'Umarizal',\n        'Upanema',\n        'Várzea',\n        'Venha-Ver',\n        'Vera Cruz',\n        'Viçosa',\n        'Vila Flor',\n      ],\n    },\n    {\n      sigla: 'AC',\n      nome: 'Acre',\n      cidades: [\n        'Acrelândia',\n        'Assis Brasil',\n        'Brasiléia',\n        'Bujari',\n        'Capixaba',\n        'Cruzeiro do Sul',\n        'Epitaciolândia',\n        'Feijó',\n        'Jordão',\n        'Mâncio Lima',\n        'Manoel Urbano',\n        'Marechal Thaumaturgo',\n        'Plácido de Castro',\n        'Porto Acre',\n        'Porto Walter',\n        'Rio Branco',\n        'Rodrigues Alves',\n        'Santa Rosa do Purus',\n        'Sena Madureira',\n        'Senador Guiomard',\n        'Tarauacá',\n        'Xapuri',\n      ],\n    },\n    {\n      sigla: 'AL',\n      nome: 'Alagoas',\n      cidades: [\n        'Água Branca',\n        'Anadia',\n        'Arapiraca',\n        'Atalaia',\n        'Barra de Santo Antônio',\n        'Barra de São Miguel',\n        'Batalha',\n        'Belém',\n        'Belo Monte',\n        'Boca da Mata',\n        'Branquinha',\n        'Cacimbinhas',\n        'Cajueiro',\n        'Campestre',\n        'Campo Alegre',\n        'Campo Grande',\n        'Canapi',\n        'Capela',\n        'Carneiros',\n        'Chã Preta',\n        'Coité do Nóia',\n        'Colônia Leopoldina',\n        'Coqueiro Seco',\n        'Coruripe',\n        'Craíbas',\n        'Delmiro Gouveia',\n        'Dois Riachos',\n        'Estrela de Alagoas',\n        'Feira Grande',\n        'Feliz Deserto',\n        'Flexeiras',\n        'Girau do Ponciano',\n        'Ibateguara',\n        'Igaci',\n        'Igreja Nova',\n        'Inhapi',\n        'Jacaré dos Homens',\n        'Jacuípe',\n        'Japaratinga',\n        'Jaramataia',\n        'Jequiá da Praia',\n        'Joaquim Gomes',\n        'Jundiá',\n        'Junqueiro',\n        'Lagoa da Canoa',\n        'Limoeiro de Anadia',\n        'Maceió',\n        'Major Isidoro',\n        'Mar Vermelho',\n        'Maragogi',\n        'Maravilha',\n        'Marechal Deodoro',\n        'Maribondo',\n        'Mata Grande',\n        'Matriz de Camaragibe',\n        'Messias',\n        'Minador do Negrão',\n        'Monteirópolis',\n        'Murici',\n        'Novo Lino',\n        'Olho d\\'Água das Flores',\n        'Olho d\\'Água do Casado',\n        'Olho d\\'Água Grande',\n        'Olivença',\n        'Ouro Branco',\n        'Palestina',\n        'Palmeira dos Índios',\n        'Pão de Açúcar',\n        'Pariconha',\n        'Paripueira',\n        'Passo de Camaragibe',\n        'Paulo Jacinto',\n        'Penedo',\n        'Piaçabuçu',\n        'Pilar',\n        'Pindoba',\n        'Piranhas',\n        'Poço das Trincheiras',\n        'Porto Calvo',\n        'Porto de Pedras',\n        'Porto Real do Colégio',\n        'Quebrangulo',\n        'Rio Largo',\n        'Roteiro',\n        'Santa Luzia do Norte',\n        'Santana do Ipanema',\n        'Santana do Mundaú',\n        'São Brás',\n        'São José da Laje',\n        'São José da Tapera',\n        'São Luís do Quitunde',\n        'São Miguel dos Campos',\n        'São Miguel dos Milagres',\n        'São Sebastião',\n        'Satuba',\n        'Senador Rui Palmeira',\n        'Tanque d\\'Arca',\n        'Taquarana',\n        'Teotônio Vilela',\n        'Traipu',\n        'União dos Palmares',\n        'Viçosa',\n      ],\n    },\n    {\n      sigla: 'DF',\n      nome: 'Distrito Federal',\n      cidades: [\n        'Brasília',\n      ],\n    },\n    {\n      sigla: 'PB',\n      nome: 'Paraíba',\n      cidades: [\n        'Água Branca',\n        'Aguiar',\n        'Alagoa Grande',\n        'Alagoa Nova',\n        'Alagoinha',\n        'Alcantil',\n        'Algodão de Jandaíra',\n        'Alhandra',\n        'Amparo',\n        'Aparecida',\n        'Araçagi',\n        'Arara',\n        'Araruna',\n        'Areia',\n        'Areia de Baraúnas',\n        'Areial',\n        'Aroeiras',\n        'Assunção',\n        'Baía da Traição',\n        'Bananeiras',\n        'Baraúna',\n        'Barra de Santa Rosa',\n        'Barra de Santana',\n        'Barra de São Miguel',\n        'Bayeux',\n        'Belém',\n        'Belém do Brejo do Cruz',\n        'Bernardino Batista',\n        'Boa Ventura',\n        'Boa Vista',\n        'Bom Jesus',\n        'Bom Sucesso',\n        'Bonito de Santa Fé',\n        'Boqueirão',\n        'Borborema',\n        'Brejo do Cruz',\n        'Brejo dos Santos',\n        'Caaporã',\n        'Cabaceiras',\n        'Cabedelo',\n        'Cachoeira dos Índios',\n        'Cacimba de Areia',\n        'Cacimba de Dentro',\n        'Cacimbas',\n        'Caiçara',\n        'Cajazeiras',\n        'Cajazeirinhas',\n        'Caldas Brandão',\n        'Camalaú',\n        'Campina Grande',\n        'Campo de Santana',\n        'Capim',\n        'Caraúbas',\n        'Carrapateira',\n        'Casserengue',\n        'Catingueira',\n        'Catolé do Rocha',\n        'Caturité',\n        'Conceição',\n        'Condado',\n        'Conde',\n        'Congo',\n        'Coremas',\n        'Coxixola',\n        'Cruz do Espírito Santo',\n        'Cubati',\n        'Cuité',\n        'Cuité de Mamanguape',\n        'Cuitegi',\n        'Curral de Cima',\n        'Curral Velho',\n        'Damião',\n        'Desterro',\n        'Diamante',\n        'Dona Inês',\n        'Duas Estradas',\n        'Emas',\n        'Esperança',\n        'Fagundes',\n        'Frei Martinho',\n        'Gado Bravo',\n        'Guarabira',\n        'Gurinhém',\n        'Gurjão',\n        'Ibiara',\n        'Igaracy',\n        'Imaculada',\n        'Ingá',\n        'Itabaiana',\n        'Itaporanga',\n        'Itapororoca',\n        'Itatuba',\n        'Jacaraú',\n        'Jericó',\n        'João Pessoa',\n        'Juarez Távora',\n        'Juazeirinho',\n        'Junco do Seridó',\n        'Juripiranga',\n        'Juru',\n        'Lagoa',\n        'Lagoa de Dentro',\n        'Lagoa Seca',\n        'Lastro',\n        'Livramento',\n        'Logradouro',\n        'Lucena',\n        'Mãe d\\'Água',\n        'Malta',\n        'Mamanguape',\n        'Manaíra',\n        'Marcação',\n        'Mari',\n        'Marizópolis',\n        'Massaranduba',\n        'Mataraca',\n        'Matinhas',\n        'Mato Grosso',\n        'Maturéia',\n        'Mogeiro',\n        'Montadas',\n        'Monte Horebe',\n        'Monteiro',\n        'Mulungu',\n        'Natuba',\n        'Nazarezinho',\n        'Nova Floresta',\n        'Nova Olinda',\n        'Nova Palmeira',\n        'Olho d\\'Água',\n        'Olivedos',\n        'Ouro Velho',\n        'Parari',\n        'Passagem',\n        'Patos',\n        'Paulista',\n        'Pedra Branca',\n        'Pedra Lavrada',\n        'Pedras de Fogo',\n        'Pedro Régis',\n        'Piancó',\n        'Picuí',\n        'Pilar',\n        'Pilões',\n        'Pilõezinhos',\n        'Pirpirituba',\n        'Pitimbu',\n        'Pocinhos',\n        'Poço Dantas',\n        'Poço de José de Moura',\n        'Pombal',\n        'Prata',\n        'Princesa Isabel',\n        'Puxinanã',\n        'Queimadas',\n        'Quixabá',\n        'Remígio',\n        'Riachão',\n        'Riachão do Bacamarte',\n        'Riachão do Poço',\n        'Riacho de Santo Antônio',\n        'Riacho dos Cavalos',\n        'Rio Tinto',\n        'Salgadinho',\n        'Salgado de São Félix',\n        'Santa Cecília',\n        'Santa Cruz',\n        'Santa Helena',\n        'Santa Inês',\n        'Santa Luzia',\n        'Santa Rita',\n        'Santa Teresinha',\n        'Santana de Mangueira',\n        'Santana dos Garrotes',\n        'Santarém',\n        'Santo André',\n        'São Bentinho',\n        'São Bento',\n        'São Domingos de Pombal',\n        'São Domingos do Cariri',\n        'São Francisco',\n        'São João do Cariri',\n        'São João do Rio do Peixe',\n        'São João do Tigre',\n        'São José da Lagoa Tapada',\n        'São José de Caiana',\n        'São José de Espinharas',\n        'São José de Piranhas',\n        'São José de Princesa',\n        'São José do Bonfim',\n        'São José do Brejo do Cruz',\n        'São José do Sabugi',\n        'São José dos Cordeiros',\n        'São José dos Ramos',\n        'São Mamede',\n        'São Miguel de Taipu',\n        'São Sebastião de Lagoa de Roça',\n        'São Sebastião do Umbuzeiro',\n        'Sapé',\n        'Seridó',\n        'Serra Branca',\n        'Serra da Raiz',\n        'Serra Grande',\n        'Serra Redonda',\n        'Serraria',\n        'Sertãozinho',\n        'Sobrado',\n        'Solânea',\n        'Soledade',\n        'Sossêgo',\n        'Sousa',\n        'Sumé',\n        'Taperoá',\n        'Tavares',\n        'Teixeira',\n        'Tenório',\n        'Triunfo',\n        'Uiraúna',\n        'Umbuzeiro',\n        'Várzea',\n        'Vieirópolis',\n        'Vista Serrana',\n        'Zabelê',\n      ],\n    },\n    {\n      sigla: 'PE',\n      nome: 'Pernambuco',\n      cidades: [\n        'Abreu e Lima',\n        'Afogados da Ingazeira',\n        'Afrânio',\n        'Agrestina',\n        'Água Preta',\n        'Águas Belas',\n        'Alagoinha',\n        'Aliança',\n        'Altinho',\n        'Amaraji',\n        'Angelim',\n        'Araçoiaba',\n        'Araripina',\n        'Arcoverde',\n        'Barra de Guabiraba',\n        'Barreiros',\n        'Belém de Maria',\n        'Belém de São Francisco',\n        'Belo Jardim',\n        'Betânia',\n        'Bezerros',\n        'Bodocó',\n        'Bom Conselho',\n        'Bom Jardim',\n        'Bonito',\n        'Brejão',\n        'Brejinho',\n        'Brejo da Madre de Deus',\n        'Buenos Aires',\n        'Buíque',\n        'Cabo de Santo Agostinho',\n        'Cabrobó',\n        'Cachoeirinha',\n        'Caetés',\n        'Calçado',\n        'Calumbi',\n        'Camaragibe',\n        'Camocim de São Félix',\n        'Camutanga',\n        'Canhotinho',\n        'Capoeiras',\n        'Carnaíba',\n        'Carnaubeira da Penha',\n        'Carpina',\n        'Caruaru',\n        'Casinhas',\n        'Catende',\n        'Cedro',\n        'Chã de Alegria',\n        'Chã Grande',\n        'Condado',\n        'Correntes',\n        'Cortês',\n        'Cumaru',\n        'Cupira',\n        'Custódia',\n        'Dormentes',\n        'Escada',\n        'Exu',\n        'Feira Nova',\n        'Fernando de Noronha',\n        'Ferreiros',\n        'Flores',\n        'Floresta',\n        'Frei Miguelinho',\n        'Gameleira',\n        'Garanhuns',\n        'Glória do Goitá',\n        'Goiana',\n        'Granito',\n        'Gravatá',\n        'Iati',\n        'Ibimirim',\n        'Ibirajuba',\n        'Igarassu',\n        'Iguaraci',\n        'Inajá',\n        'Ingazeira',\n        'Ipojuca',\n        'Ipubi',\n        'Itacuruba',\n        'Itaíba',\n        'Itamaracá',\n        'Itambé',\n        'Itapetim',\n        'Itapissuma',\n        'Itaquitinga',\n        'Jaboatão dos Guararapes',\n        'Jaqueira',\n        'Jataúba',\n        'Jatobá',\n        'João Alfredo',\n        'Joaquim Nabuco',\n        'Jucati',\n        'Jupi',\n        'Jurema',\n        'Lagoa do Carro',\n        'Lagoa do Itaenga',\n        'Lagoa do Ouro',\n        'Lagoa dos Gatos',\n        'Lagoa Grande',\n        'Lajedo',\n        'Limoeiro',\n        'Macaparana',\n        'Machados',\n        'Manari',\n        'Maraial',\n        'Mirandiba',\n        'Moreilândia',\n        'Moreno',\n        'Nazaré da Mata',\n        'Olinda',\n        'Orobó',\n        'Orocó',\n        'Ouricuri',\n        'Palmares',\n        'Palmeirina',\n        'Panelas',\n        'Paranatama',\n        'Parnamirim',\n        'Passira',\n        'Paudalho',\n        'Paulista',\n        'Pedra',\n        'Pesqueira',\n        'Petrolândia',\n        'Petrolina',\n        'Poção',\n        'Pombos',\n        'Primavera',\n        'Quipapá',\n        'Quixaba',\n        'Recife',\n        'Riacho das Almas',\n        'Ribeirão',\n        'Rio Formoso',\n        'Sairé',\n        'Salgadinho',\n        'Salgueiro',\n        'Saloá',\n        'Sanharó',\n        'Santa Cruz',\n        'Santa Cruz da Baixa Verde',\n        'Santa Cruz do Capibaribe',\n        'Santa Filomena',\n        'Santa Maria da Boa Vista',\n        'Santa Maria do Cambucá',\n        'Santa Terezinha',\n        'São Benedito do Sul',\n        'São Bento do Una',\n        'São Caitano',\n        'São João',\n        'São Joaquim do Monte',\n        'São José da Coroa Grande',\n        'São José do Belmonte',\n        'São José do Egito',\n        'São Lourenço da Mata',\n        'São Vicente Ferrer',\n        'Serra Talhada',\n        'Serrita',\n        'Sertânia',\n        'Sirinhaém',\n        'Solidão',\n        'Surubim',\n        'Tabira',\n        'Tacaimbó',\n        'Tacaratu',\n        'Tamandaré',\n        'Taquaritinga do Norte',\n        'Terezinha',\n        'Terra Nova',\n        'Timbaúba',\n        'Toritama',\n        'Tracunhaém',\n        'Trindade',\n        'Triunfo',\n        'Tupanatinga',\n        'Tuparetama',\n        'Venturosa',\n        'Verdejante',\n        'Vertente do Lério',\n        'Vertentes',\n        'Vicência',\n        'Vitória de Santo Antão',\n        'Xexéu',\n      ],\n    },\n    {\n      sigla: 'RR',\n      nome: 'Roraima',\n      cidades: [\n        'Alto Alegre',\n        'Amajari',\n        'Boa Vista',\n        'Bonfim',\n        'Cantá',\n        'Caracaraí',\n        'Caroebe',\n        'Iracema',\n        'Mucajaí',\n        'Normandia',\n        'Pacaraima',\n        'Rorainópolis',\n        'São João da Baliza',\n        'São Luiz',\n        'Uiramutã',\n      ],\n    },\n    {\n      sigla: 'AP',\n      nome: 'Amapá',\n      cidades: [\n        'Amapá',\n        'Calçoene',\n        'Cutias',\n        'Ferreira Gomes',\n        'Itaubal',\n        'Laranjal do Jari',\n        'Macapá',\n        'Mazagão',\n        'Oiapoque',\n        'Pedra Branca do Amapari',\n        'Porto Grande',\n        'Pracuúba',\n        'Santana',\n        'Serra do Navio',\n        'Tartarugalzinho',\n        'Vitória do Jari',\n      ],\n    },\n  ],\n};\n\nconst getCities = (uf) => {\n  const stateUf = uf || 'CE';\n  return brasil.brasil.find((item) => item.sigla === stateUf.toUpperCase()).cidades;\n};\n\nexport default getCities;\n","const typeInstitute = [\n  'Privado',\n  'Público',\n];\n\nexport default typeInstitute;\n","const typeStateEquipment = [\n  'Usado',\n  'Novo',\n];\n\nexport default typeStateEquipment;\n","const imageResize = (\n  {\n    file,\n    maxWidth,\n    maxHeight,\n    qualityRate,\n    fullImage,\n  },\n) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  // CONST\n  const MAX_WIDTH = maxWidth || 1280;\n  const MAX_HEIGHT = maxHeight || 720;\n  const QUALITY_IMG = qualityRate || 0.70;\n\n  const imagem = new Image();\n\n  reader.onload = (e) => {\n    imagem.src = e.target.result;\n  };\n\n  let blob;\n  const getBlob = () => new Promise((resolve) => {\n    const convert = (b64Data, contType, sliceSz) => {\n      const contentType = contType || '';\n      const sliceSize = sliceSz || 512;\n      const byteCharacters = atob(b64Data);\n      const byteArrays = [];\n      for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n        const byteNumbers = new Array(slice.length);\n\n        for (let i = 0; i < slice.length; i += 1) byteNumbers[i] = slice.charCodeAt(i);\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n      }\n\n      return new Blob(byteArrays, { type: contentType });\n    };\n\n    imagem.onload = function () {\n      if (this.width === 0 || this.height === 0) {\n        console.log('Image is empty');\n      } else {\n        const scale = (MAX_WIDTH / this.width);\n\n        const can = document.createElement('canvas');\n        can.width = fullImage\n          ? this.width\n          : MAX_WIDTH;\n        can.height = fullImage\n          ? this.height\n          : this.height * scale;\n\n        can.style.visibility = 'hidden';\n\n        const ctx = can.getContext('2d');\n\n        ctx.clearRect(0, 0, MAX_WIDTH, MAX_HEIGHT);\n        if (fullImage) {\n          ctx.drawImage(imagem, 0, 0, this.width, this.height);\n        } else {\n          ctx.drawImage(imagem, 0, 0, MAX_WIDTH, this.height * scale);\n        }\n\n        const canvasUrl = can.toDataURL('image/jpeg', QUALITY_IMG);\n        const BASE64_MARKER = 'base64,';\n        const base64Index = canvasUrl.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n        const base64 = canvasUrl.substring(base64Index);\n        const data = canvasUrl.split(',')[1];\n        const mimeType = canvasUrl.split(',')[0].split(':')[1].split(';')[0];\n        blob = convert(data, mimeType, 1);\n        resolve({ blob, base64 });\n      }\n    };\n  });\n  return getBlob();\n};\n\nexport default imageResize;\n","import React, { createRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport imageResize from '../../../services/imageResize';\n\n\nconst InputFileImage = (props) => {\n  const {\n    action,\n    label,\n    accept,\n    name,\n  } = props;\n\n  const [filename, setFilename] = useState('');\n  const inputFileRef = createRef();\n\n  const activateInputFile = () => {\n    inputFileRef.current.click();\n  };\n\n  const captureFile = (event) => {\n    event.preventDefault();\n    const file = inputFileRef.current.files[0];\n    imageResize({ file, fullImage: true })\n      .then((result) => {\n        action(result.blob, name);\n      });\n\n    setFilename(file.name);\n  };\n\n  return (\n    <>\n      <input\n        accept={accept || 'image/*'}\n        onChange={captureFile}\n        ref={inputFileRef}\n        type=\"file\"\n        hidden\n      />\n      <FormControl\n        fullWidth\n        onClick={activateInputFile}\n      >\n        <InputLabel htmlFor=\"standard-adornment-amount\">{label}</InputLabel>\n        <Input\n          value={filename}\n          endAdornment={<InputAdornment position=\"end\"><AttachFileIcon /></InputAdornment>}\n          readOnly\n        />\n      </FormControl>\n    </>\n  );\n};\n\nInputFileImage.defaultProps = {\n  accept: 'image/*',\n  name: 'Input file',\n};\n\nInputFileImage.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  accept: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default InputFileImage;\n","import api from '../services/api';\n\n\nconst sendEquipmentPhoto = (photo, label, id) => {\n  const formData = new FormData();\n  if (id) {\n    formData.append('_id', id);\n  }\n  formData.append(label, photo, `${label}.jpeg`);\n\n  return api.post('/api/importar/imagem', formData, {\n    header: {\n      'Content-Type': 'multipart/form-data',\n    },\n  })\n    .then((result) => {\n      if (result.data) {\n        return result.data;\n      }\n      return false;\n    })\n    .catch((err) => err);\n};\n\n\nexport default sendEquipmentPhoto;\n","export const manufacturersEquipments = [\n  'Leistung',\n  'Dixtal',\n  'Intermed',\n  'Drager',\n  'Maquet',\n  'Ge',\n  'Bird',\n  'Takaoka (KTK)',\n];\n\nexport const modelsEquipment = [\n  'Luft3',\n  'PR4D',\n  'PR4G',\n  'DX3010',\n  'DX3012',\n  'Inter 3',\n  'Inter 5',\n  'Inter 5 plus',\n  'Inter NEO',\n  'Inter 7',\n  'iX 5',\n  'Evita V300',\n  'Evita V500',\n  'Savina 300',\n  'Oxylog 3000',\n  'Oxylog 2000',\n  'Servo i',\n  'Servo s',\n  'Servo air',\n  'Engestron',\n  'Engestron PRO',\n  'Mark 7',\n  '8400',\n  'Monterey',\n  'Microtak',\n];\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst RadioControl = (props) => {\n  const [value, setValue] = useState('');\n  const [other, setOther] = useState('');\n\n  const {\n    name,\n    action,\n    flexDirection,\n    formLabel,\n    items,\n    hasOther,\n    clean,\n  } = props;\n\n  if (clean && value !== '') {\n    setValue('');\n    setOther('');\n  }\n\n  const updateParent = (event) => {\n    if (value !== 'other' && event.target.value === 'other') {\n      setValue(event.target.value);\n    }\n\n    if (event.target.value !== 'other' && value !== 'other') {\n      setValue(event.target.value);\n      return action(event, value, other);\n    }\n\n    if (value === 'other' ) {\n      setOther(event.target.value);\n      return action(event, value, other);\n    }\n\n    return false;\n  };\n\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">{formLabel}</FormLabel>\n        <RadioGroup\n          style={{ flexDirection: flexDirection || 'row' }}\n          aria-label=\"tipo\"\n          name={name}\n          value={value}\n          onChange={updateParent}\n        >\n          {items.map((item) => (\n            <FormControlLabel\n              key={item.value}\n              value={item.value}\n              control={<Radio color=\"default\" />}\n              label={item.label}\n            />\n          ))}\n          {hasOther\n            ? (\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio color=\"default\" />}\n                label=\"Outros\"\n              />\n            )\n            : (<></>)}\n        </RadioGroup>\n        {hasOther\n          ? (\n            <TextField\n              name={name}\n              value={other}\n              onChange={updateParent}\n            />\n          )\n          : (<></>)}\n      </FormControl>\n    </>\n  );\n};\n\nexport function helperPropsItemsRadioControl(value, label) {\n  return { value, label };\n}\n\nRadioControl.defaultProps = {\n  name: '',\n  flexDirection: 'row',\n  formLabel: '',\n  items: [],\n  hasOther: true,\n  clean: false,\n};\n\nRadioControl.propTypes = {\n  action: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  flexDirection: PropTypes.string,\n  formLabel: PropTypes.string,\n  items: PropTypes.instanceOf(Array),\n  hasOther: PropTypes.bool,\n  clean: PropTypes.bool,\n};\n\nexport default RadioControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport RadioControl from '../../_common/forms/RadioControl';\n\n\nconst DialogModelsEquipments = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [inputOther, setInputOther] = React.useState('');\n  const [radioValue, setRadioValue] = React.useState('');\n\n  const {\n    items,\n    name,\n    updateOpen,\n    hasOther,\n    action,\n    label,\n    dialogTitle,\n    openDialog,\n  } = props;\n\n  React.useEffect(() => {\n    setOpen(openDialog);\n  }, [openDialog]);\n\n  const handleClose = () => {\n    updateOpen(false);\n    setOpen(false);\n  };\n\n  const changeRadio = (event, value, other) => {\n    setRadioValue(value);\n\n    if (value !== 'other') {\n      return action(event);\n    }\n\n    setInputOther(other);\n    return true;\n  };\n\n  const updateParent = () => {\n    const doc = { target: { name, value: '' } };\n    if (radioValue === 'other') {\n      doc.target.value = inputOther;\n    } else {\n      doc.target.value = radioValue;\n    }\n\n    return action(doc);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle\n        onClose={handleClose}\n      >\n        {dialogTitle}\n      </DialogTitle>\n\n      <DialogContent>\n        <RadioControl\n          name={name}\n          action={changeRadio}\n          flexDirection=\"column\"\n          formLabel={label}\n          items={items}\n          hasOther={hasOther}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n          color=\"primary\"\n        >\n          Cancelar\n        </Button>\n        <Button\n          onClick={updateParent}\n          color=\"primary\"\n        >\n          Selecionar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nDialogModelsEquipments.defaultProps = {\n  hasOther: false,\n  label: '',\n  dialogTitle: '',\n  openDialog: false,\n};\n\nDialogModelsEquipments.propTypes = {\n  items: PropTypes.instanceOf(Array).isRequired,\n  name: PropTypes.string.isRequired,\n  updateOpen: PropTypes.func.isRequired,\n  action: PropTypes.func.isRequired,\n  openDialog: PropTypes.bool,\n  hasOther: PropTypes.bool,\n  label: PropTypes.string,\n  dialogTitle: PropTypes.string,\n};\n\nexport default DialogModelsEquipments;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport DialogModelsEquipments from '../../Screening/ScreeningForm/DialogModelsEquipment';\n\n\nconst InputRadioDialog = (props) => {\n  const {\n    action,\n    name,\n    label,\n    hasOther,\n    defaultValue,\n    items,\n  } = props;\n\n  const [valueInput, setValueInput] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  function updateInput() {\n    setValueInput(defaultValue);\n  }\n\n  useEffect(updateInput, [defaultValue]);\n\n  function changeRadio(event) {\n    action(event);\n    setValueInput(event.target.value);\n    setOpen(false);\n  }\n\n  function updateOpen(value) {\n    setOpen(value);\n  }\n\n  function openDialog() {\n    setOpen(false);\n    setOpen(true);\n  }\n\n  return (\n    <>\n      <DialogModelsEquipments\n        openDialog={open}\n        action={changeRadio}\n        updateOpen={updateOpen}\n        defaultValue={defaultValue}\n        name={name}\n        label={label}\n        hasOther={hasOther}\n        items={items}\n        dialogTitle={label}\n      />\n\n      <FormControl\n        fullWidth\n        onClick={openDialog}\n      >\n        <InputLabel htmlFor=\"standard-adornment-amount\">{label}</InputLabel>\n        <Input\n          value={valueInput}\n          endAdornment={<InputAdornment position=\"end\"><ArrowDropDownIcon /></InputAdornment>}\n          readOnly\n        />\n      </FormControl>\n    </>\n  );\n};\n\nInputRadioDialog.defaultProps = {\n  name: '',\n  label: '',\n  hasOther: true,\n  defaultValue: '',\n};\n\nInputRadioDialog.propTypes = {\n  action: PropTypes.func.isRequired,\n  items: PropTypes.instanceOf(Array).isRequired,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  hasOther: PropTypes.bool,\n  defaultValue: PropTypes.string,\n};\n\nexport default InputRadioDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  MenuItem,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport equipmentTypes from '../../../models/equipmentTypes';\nimport getCities from '../../../services/cities';\nimport typeInstitute from '../../../models/typeInstitute';\nimport typeStateEquipment from '../../../models/typeStateEquipment';\nimport InputFileImage from '../../_common/forms/InputFileImage';\nimport sendEquipmentPhoto from '../../../modelServices/photoEquipmentService';\nimport {\n  manufacturersEquipments,\n  modelsEquipment,\n} from '../../../models/manufacturers';\nimport InputRadioDialog from '../../_common/forms/InputRadioDialog';\nimport ErrorAlertText from '../../_common/alerts/ErrorAlertText';\nimport { randomIndex } from '../../../utils';\n\n\nconst CadastroEquipamento = (props) => {\n  const cities = getCities('CE');\n  const {\n    errors,\n    register,\n    serviceOrder,\n    equipment,\n    screening,\n    updateEquipment,\n    updateScreening,\n    updateServiceOrder,\n    editingForm,\n  } = props;\n\n  const handleUpdateEquipmentParent = (event) => {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    if (event.target.name === 'marca' && equipment.fabricante === '') {\n      doc.fabricante = event.target.value;\n    }\n    updateEquipment(doc);\n  };\n\n  const handleUpdateScreeningParent = (event) => {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateScreening(doc);\n  };\n\n  const updateServiceOrderParent = (event) => {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateServiceOrder(doc);\n  };\n\n  const sendPhoto = (photo, name) => {\n    const id = serviceOrder._id.$oid || serviceOrder._id;\n    sendEquipmentPhoto(photo, name, id)\n      .then((result) => {\n        if (result) {\n          updateServiceOrderParent({\n            target: {\n              name: '_id',\n              value: result,\n            },\n          });\n          handleUpdateScreeningParent({\n            target: {\n              name,\n              value: `${result}_${name}.jpeg`,\n            },\n          });\n        }\n      });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        1. Cadastro de Equipamento\n      </Typography>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <InputFileImage\n            name=\"foto_antes_limpeza\"\n            label=\"Foto antes da limpeza\"\n            action={sendPhoto}\n          />\n        </Grid>\n      </Grid>\n\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            inputRef={register({ required: true })}\n            onChange={updateServiceOrderParent}\n            value={serviceOrder.numero_ordem_servico}\n            name=\"numero_ordem_servico\"\n            label=\"Número da Ordem de Serviço\"\n            InputProps={{\n              readOnly: editingForm || false,\n            }}\n            required\n            fullWidth\n          />\n          <ErrorAlertText error={errors.numero_ordem_servico} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            inputRef={register({ required: true })}\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.numero_de_serie}\n            id=\"numeroDeSerie\"\n            name=\"numero_de_serie\"\n            label=\"Número de Série\"\n            required\n            fullWidth\n          />\n          <ErrorAlertText error={errors.numero_de_serie} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            inputRef={register({ required: true })}\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.nome_equipamento}\n            id=\"nomeDoEquipamento\"\n            name=\"nome_equipamento\"\n            label=\"Nome do Equipamento\"\n            fullWidth\n          />\n          <ErrorAlertText error={errors.nome_equipamento} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            value={equipment.numero_do_patrimonio}\n            onChange={handleUpdateEquipmentParent}\n            name=\"numero_do_patrimonio\"\n            id=\"numeroDoPatrimonio\"\n            label=\"Número do Patrimônio\"\n            fullWidth\n          />\n          <ErrorAlertText error={errors.numero_do_patrimonio} />\n        </Grid>\n\n\n        <Grid item xs={12} sm={6}>\n          <InputRadioDialog\n            action={handleUpdateEquipmentParent}\n            name=\"tipo\"\n            label=\"Tipo do Equipamento\"\n            hasOther\n            value={equipment.tipo}\n            defaultValue={equipment.tipo}\n            items={equipmentTypes.map((item) => ({ label: item, value: item }))}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={2}>\n          <InputRadioDialog\n            action={handleUpdateEquipmentParent}\n            name=\"marca\"\n            label=\"Marca\"\n            hasOther\n            value={equipment.marca}\n            defaultValue={equipment.marca}\n            items={manufacturersEquipments.map((item) => ({ label: item, value: item }))}\n          />\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <InputRadioDialog\n            action={handleUpdateEquipmentParent}\n            name=\"modelo\"\n            label=\"Modelo\"\n            hasOther\n            value={equipment.modelo}\n            defaultValue={equipment.modelo}\n            items={modelsEquipment.map((item) => ({ label: item, value: item }))}\n          />\n        </Grid>\n        <Grid item xs={6} sm={2}>\n          <TextField\n            inputRef={register({ required: true })}\n            required\n            id=\"fabricante\"\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.fabricante}\n            name=\"fabricante\"\n            label=\"Fabricante\"\n            fullWidth\n          />\n        </Grid>\n\n\n        <Grid item xs={12} sm={4}>\n          <TextField\n            fullWidth\n            select\n            label=\"Município de Origem\"\n            value={equipment.municipio_origem}\n            onChange={handleUpdateEquipmentParent}\n            name=\"municipio_origem\"\n          >\n            {cities.map((option) => (\n              <MenuItem key={randomIndex()} value={option}>{option}</MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            inputRef={register({ required: true })}\n            required\n            id=\"nome_instituicao_origem\"\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.nome_instituicao_origem}\n            name=\"nome_instituicao_origem\"\n            label=\"Nome da Instituição\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <TextField\n            fullWidth\n            select\n            label=\"Tipo da instituição\"\n            value={equipment.tipo_instituicao_origem}\n            onChange={handleUpdateEquipmentParent}\n            name=\"tipo_instituicao_origem\"\n          >\n            {typeInstitute.map((option) => (\n              <MenuItem key={randomIndex()} value={option}>{option}</MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n\n\n        <Grid item xs={6} sm={4}>\n          <TextField\n            inputRef={register({ required: true })}\n            required\n            id=\"nomeDoResponsavel\"\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.nome_responsavel}\n            name=\"nome_responsavel\"\n            label=\"Nome do Responsável\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            id=\"constatoDoResponsavel\"\n            onChange={handleUpdateEquipmentParent}\n            value={equipment.contato_responsavel}\n            name=\"contato_responsavel\"\n            label=\"Contato do Responsável\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <InputRadioDialog\n            action={handleUpdateScreeningParent}\n            name=\"estado_de_conservacao\"\n            label=\"Estado de Conservação\"\n            value={screening.estado_de_conservacao}\n            defaultValue={screening.estado_de_conservacao}\n            items={typeStateEquipment.map((item) => ({ label: item, value: item }))}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <InputFileImage\n            name=\"foto_apos_limpeza\"\n            label=\"Foto após da limpeza\"\n            action={sendPhoto}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nCadastroEquipamento.defaultProps = {\n  editingForm: false,\n};\n\nCadastroEquipamento.propTypes = {\n  errors: PropTypes.instanceOf(Object).isRequired,\n  register: PropTypes.func.isRequired,\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n  equipment: PropTypes.instanceOf(Object).isRequired,\n  screening: PropTypes.instanceOf(Object).isRequired,\n  updateEquipment: PropTypes.func.isRequired,\n  updateScreening: PropTypes.func.isRequired,\n  updateServiceOrder: PropTypes.func.isRequired,\n  editingForm: PropTypes.bool,\n};\n\nexport default CadastroEquipamento;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst TitleFormScreening = () => (\n  <>\n    <Grid container justify=\"space-between\">\n      <Grid item xs=\"auto\">\n        <Typography style={{ fontSize: 20, fontWeight: 'bold' }}>\n          Triagem do Equipamento\n        </Typography>\n        <Typography style={{ fontSize: 14 }}>\n          Após o recebimento, o cadastro do equipamento deverá ser\n          realizado. Para isso, preencha os campos abaixo:\n        </Typography>\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default TitleFormScreening;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CssBaseline,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RelacaoDeMaterial from './RelacaoDeMaterial';\nimport { listaFormAcessorios } from '../../../models/acessorio';\nimport { ServiceOrderScreening } from '../../../models/serviceOrder';\nimport Equipamento from '../../../models/equipamentos';\nimport CadastroEquipamento from './CadastroEquipamento';\nimport TitleFormScreening from './TitleFormScreening';\n\n\nconst useStyles = makeStyles((theme) => ({\n  divTextFooter: {\n    height: 60,\n    justifyContent: 'space-evenly',\n    display: 'flex',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1200 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    flexDirection: 'row',\n  },\n\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1200 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst FormScreening = (props) => {\n  const {\n    register,\n    errors,\n    serviceOrder,\n    updateFormModel,\n    editingForm,\n  } = props;\n\n  const classes = useStyles();\n\n  const [blockEffect, setBlockEffect] = useState(false);\n\n  const [serviceOrderForm, setServiceOrderForm] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n\n  const [equipamento, setEquipamento] = useState({});\n  const [screening, setScreening] = useState({});\n  const [acessorios, setAcessorios] = useState([]);\n\n  const handleEffect = () => {\n    if (blockEffect) {\n      return;\n    }\n\n    setServiceOrderForm({ ...serviceOrder });\n\n    if (!equipamento.numero_de_serie) {\n      if (serviceOrder.equipamento) {\n        setEquipamento(\n          Object.assign(\n            Equipamento({}),\n            serviceOrder.equipamento[0],\n          ),\n        );\n      } else {\n        setEquipamento({ ...Equipamento({}) });\n      }\n    }\n\n    if (!screening.acessorios) {\n      if (serviceOrder.triagem) {\n        setScreening(ServiceOrderScreening({ triagem: serviceOrder.triagem }));\n      } else {\n        setScreening(ServiceOrderScreening({ triagem: {} }));\n      }\n    }\n\n    if (acessorios.length === 0) {\n      if (serviceOrder.triagem && serviceOrder.triagem.acessorios) {\n        setAcessorios(listaFormAcessorios(serviceOrder.triagem.acessorios));\n      } else {\n        setAcessorios(listaFormAcessorios([]));\n      }\n    }\n\n    setBlockEffect(true);\n  };\n\n  useEffect(handleEffect, [serviceOrderForm]);\n\n  const updateErrors = (values) => {\n    const dataFormErrors = { ...formErrors };\n    Object.keys(values).forEach((indexValue) => {\n      Object.keys(dataFormErrors[indexValue])\n        .forEach((item, index) => {\n          dataFormErrors[indexValue][index] = false;\n        });\n    });\n\n    setFormErrors({ ...dataFormErrors, values });\n  };\n\n  const handleUpdateServiceOrder = (value) => {\n    const doc = { ...serviceOrderForm, ...value };\n    setServiceOrderForm(doc);\n    updateFormModel(doc);\n  };\n\n  const atualizarEquipamento = (value) => {\n    const equip = { ...equipamento, ...value };\n    setEquipamento(equip);\n    updateFormModel({ equipamento: equip });\n  };\n\n  const atualizarTriagem = (value) => {\n    const dataScreening = { ...screening, ...value };\n    setScreening(dataScreening);\n    updateFormModel({ triagem: dataScreening });\n  };\n\n  const atualizarAcessorios = (value) => {\n    setAcessorios(value);\n    atualizarTriagem({ acessorios: value });\n    const dataScreening = { ...screening };\n    screening.acessorios = value;\n    updateFormModel({ triagem: dataScreening });\n  };\n\n  if (!blockEffect) {\n    return <>Carregando...</>;\n  }\n\n  return (\n    <>\n      <CssBaseline />\n\n      <main className={classes.layout}>\n        <TitleFormScreening />\n\n        <Paper className={classes.paper}>\n          <CadastroEquipamento\n            errors={errors}\n            register={register}\n            serviceOrder={serviceOrderForm}\n            equipment={equipamento}\n            screening={screening}\n            updateErrors={updateErrors}\n            updateEquipment={atualizarEquipamento}\n            updateScreening={atualizarTriagem}\n            updateServiceOrder={handleUpdateServiceOrder}\n            editingForm={editingForm}\n          />\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item xs={12} sm={7}>\n              <Typography variant=\"h6\" gutterBottom>\n                2. Relação de Material / Acessórios Entregues\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <RelacaoDeMaterial\n            acessorios={acessorios}\n            atualizarAcessorios={atualizarAcessorios}\n          />\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nFormScreening.defaultProps = {\n  editingForm: false,\n};\n\nFormScreening.propTypes = {\n  register: PropTypes.func.isRequired,\n  errors: PropTypes.instanceOf(Object).isRequired,\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n  updateFormModel: PropTypes.func.isRequired,\n  editingForm: PropTypes.bool,\n};\n\nexport default FormScreening;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { AppBar, Dialog, Grid, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\n\n\nconst useStyle = makeStyles(() => ({\n  appBar: {\n    position: 'relative',\n    backgroundColor: orange[600],\n  },\n}));\n\nconst FullDialog = (props) => {\n  const classes = useStyle();\n  const {\n    open,\n    title,\n    handleClose,\n    children,\n    actionChildren,\n  } = props;\n\n  return (\n    <>\n      <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n              <Grid item>\n                <Grid container alignItems=\"center\">\n                  <Grid item>\n                    <IconButton\n                      edge=\"start\"\n                      color=\"inherit\"\n                      onClick={handleClose}\n                      aria-label=\"close\"\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"h6\">\n                      {title}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                {actionChildren}\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        {children}\n      </Dialog>\n    </>\n  );\n};\n\nFullDialog.defaultProps = {\n  open: false,\n  actionChildren: (<></>),\n};\n\nFullDialog.propTypes = {\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n  actionChildren: PropTypes.object,\n};\n\nexport default FullDialog;\n","import api from '../services/api';\nimport Equipamento from '../models/equipamentos';\n\n\n/**\n * Seach screnning by status\n *      triagem\n *      diagnostico\n *      manutencao\n *      etc\n */\nexport const getEquipmentByStatus = (status) => api\n  .post(\n    '/api/equipamentos/find',\n    { status },\n    {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    },\n  )\n  .then((response) => response.data);\n\nexport const getAllEquipments = () => api\n  .get('/api/equipamentos', {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  })\n  .then((response) => response.data);\n\nconst getFieldValue = (obj, field) => {\n  if (typeof (obj[field]) === 'object' && obj[field] !== null && obj[field].$oid) {\n    return obj[field].$oid;\n  }\n\n  if (typeof (obj[field]) === 'object' && obj[field] !== null && obj[field].$date) {\n    return new Date(obj[field].$date);\n  }\n  if (field === 'created_at' || field === 'updated_at') {\n    return new Date(obj[field]);\n  }\n\n  return obj[field];\n};\n\nexport const mapEquipmentRequest = (delivery) => {\n  const model = Equipamento({});\n\n  Object.keys(model).forEach((field) => {\n    model[field] = getFieldValue(delivery, field);\n  });\n\n  return model;\n};\n\nexport const saveNewEquipment = (equipamento) => {\n  const model = mapEquipmentRequest(equipamento);\n  delete model._id;\n  return api.post(\n    '/api/equipamentos',\n    Object.assign(\n      model,\n      {\n        status: 'triagem',\n        created_at: new Date(),\n        updated_at: new Date(),\n      },\n    ),\n    {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    },\n  )\n    .then((res) => {\n      if (res && res.data) return res.data;\n\n      return false;\n    })\n    .catch((err) => err);\n};\n\nexport const updateEquipment = (equipamento) => {\n  const model = mapEquipmentRequest(equipamento);\n  const id = model._id;\n  delete (model._id);\n\n  return api.put(\n    `/api/equipamento/${id}`,\n    { ...model, updated_at: new Date() },\n  ).then((result) => result);\n};\n\nexport const deleteEquipmentRequest = (_id) => api.delete(`/api/equipamentos?_id=${_id}`)\n  .then((res) => res.data);\n\nexport const updateManyEquipmentRequest = (equipments) => api\n  .post('/api/equipamentos/bulk', { equipamentos: equipments.map((item) => mapEquipmentRequest(item)) })\n  .then((res) => res.data);\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport orange from '@material-ui/core/colors/orange';\nimport { useForm } from 'react-hook-form';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Alert from '@material-ui/lab/Alert';\nimport ThemeButton from '../../_common/forms/ThemeButton';\nimport FormScreening from './FormScreening';\nimport FullDialog from '../../_common/components/FullDialog';\nimport {\n  deleteEquipmentRequest,\n  mapEquipmentRequest,\n  saveNewEquipment,\n  updateEquipment,\n} from '../../../modelServices/equipamentoService';\nimport {\n  saveNewOrderService,\n  updateServiceOrderRequest,\n} from '../../../modelServices/serviceOrderService';\n\n\nconst useStyle = makeStyles((theme) => ({\n  containerForm: {\n    marginTop: theme.spacing(5),\n  },\n}));\n\nconst ScreeningDialogForm = (props) => {\n  const classes = useStyle();\n  const { register, errors, triggerValidation } = useForm({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n\n  const {\n    serviceOrder,\n    editingForm,\n    openFormDialog,\n    handleClose,\n    titleFormModal,\n    setOpenFormDialog,\n    reloadData,\n    setAlertSuccess,\n    setShowAlert,\n  } = props;\n\n  const [serviceOrderForm, setServiceOrderForm] = useState({});\n  const [errorsFound, setErrorsFound] = useState(false);\n\n  const handleEffect = () => {\n    setServiceOrderForm({ ...serviceOrder });\n  };\n\n  useEffect(handleEffect, [serviceOrder]);\n\n  const updateFormModel = (value) => {\n    setServiceOrderForm(Object.assign(serviceOrderForm, value));\n  };\n\n  const showErrorBar = () => {\n    setErrorsFound(true);\n    setTimeout(() => {\n      setErrorsFound(false);\n    }, 5000);\n  };\n\n  const saveEquipment = async (equipment) => {\n    try {\n      if (equipment._id && equipment._id !== '') {\n        await updateEquipment(equipment);\n        return equipment._id;\n      }\n\n      const equip = await saveNewEquipment(equipment);\n      return equip._id;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const saveScreening = async (screening, equipmentId) => {\n    const screen = {\n      ...screening,\n      acessorios: screening.triagem.acessorios.filter(\n        (item) => item !== '' && item.acompanha && item.quantidade > 0,\n      ),\n    };\n\n    const order = {\n      ...serviceOrder,\n      ...serviceOrderForm,\n      ...screening,\n      triagem: screen.triagem,\n      equipamento_id: equipmentId.$oid || equipmentId,\n      _id: serviceOrder._id.$oid || serviceOrder._id,\n      created_at: new Date(serviceOrder.created_at.$date || serviceOrder.created_at),\n    };\n\n    delete order.calibragem;\n    delete order.diagnostico;\n    delete order.equipamento;\n\n    try {\n      if (order._id && order._id !== '') {\n        await updateServiceOrderRequest(Object.assign(order, { status: 'triagem' }), order._id);\n      } else {\n        await saveNewOrderService(Object.assign(order, { status: 'triagem' }));\n      }\n\n      return true;\n    } catch (e) {\n      if (!editingForm) {\n        await deleteEquipmentRequest(equipmentId);\n      }\n\n      return false;\n    }\n  };\n\n  const saveForm = async () => {\n    await triggerValidation();\n    if (Object.keys(errors).length > 0) {\n      showErrorBar();\n      return;\n    }\n\n    const equipment = {\n      ...mapEquipmentRequest(\n        Array.isArray(serviceOrderForm.equipamento)\n          ? serviceOrderForm.equipamento[0]\n          : serviceOrderForm.equipamento,\n      ),\n    };\n\n    const equipmentId = await saveEquipment(equipment);\n    if (!equipmentId) {\n      return;\n    }\n\n    const saved = saveScreening(serviceOrderForm, equipmentId);\n\n    if (saved) {\n      setOpenFormDialog(false);\n      setTimeout(() => {\n        reloadData();\n      }, 1500);\n      return;\n    }\n\n    setAlertSuccess(false);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 5000);\n  };\n\n  const closeDialog = () => {\n    handleClose();\n  };\n\n  return (\n    <>\n      <FullDialog\n        open={openFormDialog}\n        handleClose={closeDialog}\n        title={titleFormModal}\n        actionChildren={(\n          <>\n            <Grid container spacing={2}>\n              <Grid item>\n                <ThemeButton\n                  onClick={closeDialog}\n                  startIcon={<CloseIcon />}\n                  variant=\"outlined\"\n                  borderColor=\"white\"\n                >\n                  Cancelar\n                </ThemeButton>\n              </Grid>\n              <Grid item>\n                <ThemeButton\n                  startIcon={<SaveIcon />}\n                  onClick={saveForm}\n                  name=\"Salvar\"\n                  color={orange[600]}\n                  bgColor=\"#FFF\"\n                  hoverColor={orange[50]}\n                >\n                  Salvar\n                </ThemeButton>\n              </Grid>\n            </Grid>\n          </>\n        )}\n      >\n        <Grid container spacing={4} className={classes.containerForm}>\n          <Grid item xs={12}>\n            {errorsFound\n              ? (\n                <Alert\n                  color=\"error\"\n                  onClose={() => setErrorsFound(false)}\n                >\n                  Não é possível salvar. Verifique o formulário e preencha os campos\n                  corretamente.\n                </Alert>\n              )\n              : ''}\n          </Grid>\n          <Grid item xs={12}>\n            <FormScreening\n              register={register}\n              errors={errors}\n              editingForm={editingForm}\n              serviceOrder={serviceOrderForm}\n              updateFormModel={updateFormModel}\n              saveForm={saveForm}\n            />\n          </Grid>\n        </Grid>\n      </FullDialog>\n    </>\n  );\n};\n\nScreeningDialogForm.defaultProps = {\n  editingForm: false,\n};\n\nScreeningDialogForm.propTypes = {\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n  editingForm: PropTypes.bool,\n  openFormDialog: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  titleFormModal: PropTypes.string.isRequired,\n  setOpenFormDialog: PropTypes.func.isRequired,\n  reloadData: PropTypes.func.isRequired,\n  setAlertSuccess: PropTypes.func.isRequired,\n  setShowAlert: PropTypes.func.isRequired,\n};\n\nexport default ScreeningDialogForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Grid,\n  Tab,\n  Tabs,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IndexScreening from './IndexScreening';\nimport { ServiceOrder } from '../../models/serviceOrder';\nimport ThemeButton from '../_common/forms/ThemeButton';\nimport TabPanel from '../_common/components/TabPanel';\nimport ScreeningDialogForm from './ScreeningForm/ScreeningDialogForm';\n\n\nconst useStyle = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  titleList: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  containerBottom: {\n    paddingBottom: theme.spacing(6),\n  },\n  containerForm: {\n    marginTop: theme.spacing(5),\n  },\n}));\n\nconst ScreeningPage = (props) => {\n  const classes = useStyle();\n\n  const {\n    serviceOrders,\n    reloadData,\n    loadingData,\n  } = props;\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const [openFormDialog, setOpenFormDialog] = useState(false);\n  const [titleFormModal, setTitleFormModal] = useState('');\n  const [editForm, setEditForm] = useState(false);\n  const [serviceOrder, setServiceOrder] = useState(ServiceOrder({}));\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertSuccess, setAlertSuccess] = useState(false);\n\n  const changeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleEditScreening = (data) => {\n    const doc = serviceOrders\n      .find((item) => item.numero_ordem_servico === data.numero_ordem_servico);\n    setServiceOrder({ ...doc });\n    setTitleFormModal('Editar Triagem');\n    setEditForm(true);\n    setOpenFormDialog(true);\n  };\n\n  const handleNewScreening = () => {\n    setServiceOrder(ServiceOrder({}));\n    setEditForm(false);\n    setTitleFormModal('Cadastrar Nova Triagem');\n    setOpenFormDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenFormDialog(false);\n  };\n\n  return (\n    <>\n      <Container className={classes.containerBottom}>\n        <Grid container className={classes.titleList}>\n          <Grid item>\n            <Tabs value={tabValue} onChange={changeTab} aria-label=\"abas-triagem\" centered>\n              <Tab\n                label=\"Ordens de Serviço em triagem\"\n                aria-controls=\"lista-equipamentos-triagem\"\n              />\n            </Tabs>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item xs={12}>\n            {showAlert\n              ? (\n                <Alert\n                  color={alertSuccess\n                    ? 'success'\n                    : 'error'}\n                  onClose={() => setShowAlert(false)}\n                >\n                  {alertSuccess\n                    ? 'Triagem salva com sucesso'\n                    : 'Não é possível salvar. Verifique o formulário e preencha os campos corretamente.'}\n                </Alert>\n              )\n              : ''}\n          </Grid>\n        </Grid>\n\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <ThemeButton\n              startIcon={<AddIcon />}\n              onClick={handleNewScreening}\n            >\n              Cadastrar Nova Triagem\n            </ThemeButton>\n          </Grid>\n        </Grid>\n        <TabPanel value={tabValue} index={0}>\n          <IndexScreening\n            serviceOrders={serviceOrders}\n            editScreening={handleEditScreening}\n            loadingData={loadingData}\n          />\n        </TabPanel>\n\n        <ScreeningDialogForm\n          serviceOrder={serviceOrder}\n          editingForm={editForm}\n          openFormDialog={openFormDialog}\n          handleClose={handleClose}\n          titleFormModal={titleFormModal}\n          setOpenFormDialog={setOpenFormDialog}\n          setAlertSuccess={setAlertSuccess}\n          setShowAlert={setShowAlert}\n          reloadData={reloadData}\n        />\n      </Container>\n    </>\n  );\n};\n\nScreeningPage.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n  loadingData: PropTypes.bool.isRequired,\n};\n\nexport default ScreeningPage;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport Layout from '../_layout/Layout';\nimport { getAllServiceOrder } from '../../modelServices/serviceOrderService';\nimport LoadingBar from '../_common/components/LoadingBar';\nimport ScreeningPage from './ScreeningPage';\n\n\nconst Screening = () => {\n  const [serviceOrders, setServiceOrders] = useState([]);\n  const [loadingData, setLoadingData] = useState(true);\n  const [progressLoad, setProgerssLoad] = useState(0);\n\n  const getData = () => {\n    if (loadingData) {\n      setProgerssLoad(80);\n      getAllServiceOrder()\n        .then((result) => {\n          setProgerssLoad(80);\n          setServiceOrders(result);\n          setLoadingData(false);\n        });\n    }\n  };\n\n  useEffect(getData, [getData]);\n\n  const reloadData = () => {\n    setLoadingData(true);\n    getData();\n  };\n\n  if (loadingData) {\n    return <LoadingBar progress={progressLoad} />;\n  }\n\n  return (\n    <Layout>\n      <ScreeningPage\n        serviceOrders={serviceOrders}\n        reloadData={reloadData}\n        loadingData={loadingData}\n      />\n    </Layout>\n  );\n};\n\nexport default Screening;\n","export const purshaseOrderModel = {\n  _id: '',\n  numero_ordem_compra: '',\n  itens: [],\n  created_at: new Date(),\n  updated_at: new Date(),\n};\n\nexport const PurchaseOrder = (purchaseOrder) => ({ ...purshaseOrderModel, ...purchaseOrder });\n","import api from '../services/api';\nimport { PurchaseOrder } from '../models/purchaseOrder';\n\n\nconst getFieldValue = (obj, field) => {\n  if (typeof (obj[field]) === 'object' && obj[field] !== null && obj[field].$oid) {\n    return obj[field].$oid;\n  }\n  if (typeof (obj[field]) === 'object' && obj[field] !== null && obj[field].$date) {\n    return new Date(obj[field].$date);\n  }\n  if (field === 'created_at' || field === 'updated_at') {\n    return new Date(obj[field]);\n  }\n\n  return obj[field];\n};\n\nconst mapModelRequest = (purchaseOrder) => {\n  const model = PurchaseOrder({});\n  Object.keys(model).forEach((field) => {\n    model[field] = getFieldValue(purchaseOrder, field);\n  });\n\n  return model;\n};\n\nexport const getAllPurchaseOrders = () => api.get('/api/ordem_compra')\n  .then((res) => res.data || []);\n\nexport const savePurchaseOrder = (purchaseOrder) => {\n  const doc = mapModelRequest(purchaseOrder);\n  return api.post('/api/ordem_compra', doc)\n    .then((res) => res.data || false);\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveSharpIcon from '@material-ui/icons/SaveSharp';\nimport FormRegisteredItems from '../Diagnosis/DiagnosisForm/FormRegisteredItems';\nimport ThemeButton from '../_common/forms/ThemeButton';\n\n\nconst useStyle = makeStyles(() => ({\n  titleRow: {\n    marginTop: '2rem',\n    marginBottom: '2rem',\n  },\n}));\n\nconst DialogTableItems = (props) => {\n  const classes = useStyle();\n  const { action, dataDialog } = props;\n  const [dataTable, setDataTable] = useState([]);\n\n  if (dataTable.length === 0) {\n    setDataTable(dataDialog || []);\n  }\n\n  function updateField(value, index, field) {\n    const items = dataTable.slice();\n    items[index][field] = value;\n    setDataTable(items);\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" className={classes.titleRow}>\n        <Grid item>\n          <Typography variant=\"h4\">\n            LISTA DE ITENS SELECIONADOS\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ThemeButton onClick={() => action(dataTable)} startIcon={<SaveSharpIcon />}>\n            Salvar ordem de compra\n          </ThemeButton>\n        </Grid>\n      </Grid>\n\n      <FormRegisteredItems\n        items={dataTable}\n        updateItemsFromTable={updateField}\n      />\n    </>\n  );\n};\n\nDialogTableItems.propTypes = {\n  action: PropTypes.func.isRequired,\n  dataDialog: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default DialogTableItems;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Container,\n  Dialog,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport orange from '@material-ui/core/colors/orange';\nimport DialogTableItems from './DialogTableItems';\nimport { PurchaseOrder } from '../../models/purchaseOrder';\nimport { savePurchaseOrder } from '../../modelServices/purchaseOrderService';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  titleList: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst StyledToolbar = withStyles(() => ({\n  root: {\n    backgroundColor: orange[600],\n  },\n}))(Toolbar);\n\nconst EditDialogPurchaseOrder = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const {\n    toogleDialog,\n    headerTable,\n    dataDialog,\n    reloadData,\n    purchaseOrder,\n    openDialog,\n  } = props;\n\n  useEffect(() => {\n    setOpen(openDialog);\n  }, [openDialog]);\n\n  const updateData = async (data) => {\n    const newPurchaseOrder = PurchaseOrder({\n      ...purchaseOrder,\n      itens: data.filter((item) => item.quantidade > 0),\n      updated_at: new Date(),\n    });\n    await savePurchaseOrder(newPurchaseOrder);\n    reloadData();\n    toogleDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={() => toogleDialog(false)}\n    >\n      <AppBar className={classes.appBar}>\n        <StyledToolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => toogleDialog(false)}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n          >\n            Edição da ordem de compra:\n            {purchaseOrder.numero_ordem_compra}\n          </Typography>\n        </StyledToolbar>\n      </AppBar>\n      <Container>\n        <DialogTableItems\n          action={updateData}\n          headerTable={headerTable}\n          dataDialog={dataDialog}\n        />\n      </Container>\n    </Dialog>\n  );\n};\n\nEditDialogPurchaseOrder.propTypes = {\n  toogleDialog: PropTypes.func.isRequired,\n  headerTable: PropTypes.instanceOf(Array).isRequired,\n  dataDialog: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n  purchaseOrder: PropTypes.instanceOf(Object).isRequired,\n  openDialog: PropTypes.bool.isRequired,\n};\n\nexport default EditDialogPurchaseOrder;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport PrintIcon from '@material-ui/icons/Print';\nimport EditIcon from '@material-ui/icons/Edit';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { blue } from '@material-ui/core/colors';\nimport EditDialogPurchaseOrder from './EditDialogPurchaseOrder';\nimport ColorIconButton from '../_common/forms/ColorIconButton';\nimport { randomIndex } from '../../utils';\n\n\nconst useStyle = makeStyles((theme) => ({\n  tableRow: {\n    maxHeight: '84px',\n    overflowY: 'auto',\n  },\n  actionButtons: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst headerData = [\n  { id: 'tipo', name: 'Tipo' },\n  { id: 'nome', name: 'Nome do item' },\n  { id: 'unidade_medida', name: 'Unidade' },\n  { id: 'quantidade', name: 'Quantidade' },\n  { id: 'fabricante', name: 'Fabricante' },\n  { id: 'codigo', name: 'Código do item' },\n];\n\nconst PurchaseOrderTable = (props) => {\n  const classes = useStyle();\n  const history = useHistory();\n\n  const {\n    purchaseOrders,\n    reloadData,\n  } = props;\n\n  const [openDialog, setOpenDiaglog] = useState(false);\n  const [purchaseOrder, setPurchaseOrder] = useState({});\n  const [dataDialog, setDataDialog] = useState([]);\n\n  const headerTable = [\n    { id: 'numero_ordem_compra', label: 'Ordem de Compra' },\n    { id: 'itens', label: 'Itens da OC' },\n    { id: 'action', label: 'Ações' },\n  ];\n\n  const toogleDialog = (value) => {\n    setOpenDiaglog(value);\n  };\n\n  const editOrder = (order) => {\n    setPurchaseOrder(order);\n    setDataDialog(order.itens);\n    setOpenDiaglog(true);\n  };\n\n  const handlePrint = (doc) => {\n    history.push(\n      {\n        pathname: '/ordem-compra',\n        state: {\n          data: doc,\n        },\n      },\n      [doc],\n    );\n  };\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {headerTable.map((head) => (\n                <TableCell key={randomIndex()}>{head.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {purchaseOrders.map((rowPurchaseOrder) => (\n              <TableRow key={randomIndex()}>\n                {headerTable.map((head) => {\n                  const indexHead = randomIndex();\n                  if (head.id === 'itens') {\n                    return (\n                      <TableCell key={indexHead}>\n                        <div className={classes.tableRow}>\n                          {rowPurchaseOrder.itens.map((item) => (\n                            <Typography key={randomIndex()} variant=\"body2\">\n                              {`${item.nome} : ${item.quantidade}`}\n                            </Typography>\n                          ))}\n                        </div>\n                      </TableCell>\n                    );\n                  }\n\n                  if (head.id === 'action') {\n                    return (\n                      <TableCell key={indexHead}>\n                        <span className={classes.actionButtons}>\n                          <ColorIconButton\n                            item={rowPurchaseOrder}\n                            action={editOrder}\n                            name=\"Editar\"\n                            icon={{ icon: <EditIcon /> }}\n                          />\n                        </span>\n                        <ColorIconButton\n                          item={rowPurchaseOrder}\n                          action={handlePrint}\n                          name=\"Imprimir\"\n                          icon={{\n                            icon: <PrintIcon />,\n                            bgColor: blue[600],\n                            hoverColor: blue[800],\n                          }}\n                        />\n                      </TableCell>\n                    );\n                  }\n\n                  return (\n                    <TableCell key={indexHead}>\n                      {rowPurchaseOrder[head.id]}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <EditDialogPurchaseOrder\n        purchaseOrder={purchaseOrder}\n        reloadData={reloadData}\n        headerTable={headerData}\n        openDialog={openDialog}\n        dataDialog={dataDialog}\n        toogleDialog={toogleDialog}\n      />\n    </>\n  );\n};\n\nPurchaseOrderTable.propTypes = {\n  purchaseOrders: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default PurchaseOrderTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Container,\n  Dialog,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport orange from '@material-ui/core/colors/orange';\nimport DialogTableItems from './DialogTableItems';\nimport { PurchaseOrder } from '../../models/purchaseOrder';\nimport { savePurchaseOrder } from '../../modelServices/purchaseOrderService';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  titleList: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst StyledToolbar = withStyles(() => ({\n  root: {\n    backgroundColor: orange[600],\n  },\n}))(Toolbar);\n\nconst NewPurchaseOrderDialog = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const {\n    toogleDialog,\n    headerTable,\n    dataDialog,\n    reloadData,\n    openDialog,\n  } = props;\n\n  useEffect(() => {\n    setOpen(openDialog);\n  }, [openDialog]);\n\n\n  const saveOrder = async (data) => {\n    const purchaseOrder = PurchaseOrder({ itens: data.filter((item) => item.quantidade > 0) });\n    await savePurchaseOrder(purchaseOrder);\n    reloadData();\n    toogleDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={() => toogleDialog(false)}\n    >\n      <AppBar className={classes.appBar}>\n        <StyledToolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => toogleDialog(false)}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n          >\n            Nova ordem de compra\n          </Typography>\n        </StyledToolbar>\n      </AppBar>\n      <Container>\n        <DialogTableItems\n          action={saveOrder}\n          toogleDialog={toogleDialog}\n          reloadData={reloadData}\n          headerTable={headerTable}\n          dataDialog={dataDialog}\n        />\n      </Container>\n    </Dialog>\n  );\n};\n\nNewPurchaseOrderDialog.propTypes = {\n  toogleDialog: PropTypes.func.isRequired,\n  dataDialog: PropTypes.instanceOf(Array).isRequired,\n  headerTable: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n  openDialog: PropTypes.bool.isRequired,\n};\n\nexport default NewPurchaseOrderDialog;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport NewPurchaseOrderDialog from './NewPurchaseOrderDialog';\nimport TableCheckedList from '../_common/SelectableTable/TableCheckedList';\n\n\nconst headerData = [\n  { id: 'tipo', name: 'Tipo' },\n  { id: 'nome', name: 'Nome do item' },\n  { id: 'unidade_medida', name: 'Unidade' },\n  { id: 'quantidade', name: 'Quantidade' },\n  { id: 'fabricante', name: 'Fabricante' },\n  { id: 'codigo', name: 'Código do item' },\n];\n\nconst useStyle = makeStyles((theme) => ({\n  titleList: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst ListItemServiceOrder = (props) => {\n  const classes = useStyle();\n  const {\n    itemsServiceOrder,\n    reloadData,\n  } = props;\n\n  const [dataTable, setDataTable] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dataDialog, setDataDialog] = useState([]);\n\n  const handleEffect = () => {\n    setDataTable(\n      Object.values(itemsServiceOrder)\n        .map((item) => ({\n          tipo: item.tipo || '',\n          nome: item.nome,\n          unidade_medida: item.unidade_medida || '',\n          quantidade: item.quantidade || 0,\n          fabricante: item.fabricante || '',\n          codigo: item.codigo || '',\n        }))\n        .sort((a, b) => a.nome.toUpperCase().localeCompare(b.nome.toUpperCase())),\n    );\n  };\n\n  const toogleDialog = (value) => {\n    setOpenDialog(value);\n  };\n\n  const createNewBuyOrderDialog = (dataChecked) => {\n    setDataDialog(dataChecked.map((data) => itemsServiceOrder[data]));\n    setOpenDialog(true);\n  };\n\n  useEffect(handleEffect, [itemsServiceOrder]);\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" className={classes.titleList}>\n        <Grid item xs=\"auto\">\n          <Typography variant=\"h5\" component=\"h5\">\n            Ordens de serviço com diagnóstico e itens cadastrados\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Paper className={classes.paper}>\n        <TableCheckedList\n          dataTable={dataTable}\n          selectKeyField=\"nome\"\n          headerTable={headerData}\n          actionFunction={createNewBuyOrderDialog}\n          actionBarTitle=\"Lista de Itens\"\n          actionBarTextButton=\"Gerar Ordem de Compra\"\n        />\n      </Paper>\n\n      <NewPurchaseOrderDialog\n        reloadData={reloadData}\n        headerTable={headerData}\n        openDialog={openDialog}\n        dataDialog={dataDialog}\n        toogleDialog={toogleDialog}\n      />\n    </>\n  );\n};\n\nListItemServiceOrder.propTypes = {\n  itemsServiceOrder: PropTypes.instanceOf(Object).isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default ListItemServiceOrder;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Tab, Tabs } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport PurchaseOrderTable from './PurchaseOrderTable';\nimport ListItemServiceOrder from './ListItemsServiceOrder';\nimport TabPanel from '../_common/components/TabPanel';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  titleList: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  containerBottom: {\n    paddingBottom: theme.spacing(6),\n  },\n}));\n\nconst DemandPage = (props) => {\n  const classes = useStyles();\n\n  const { purchaseOrders, serviceOrders, reloadData } = props;\n\n  const [tabValue, setTabValue] = useState(0);\n  const [itemsServiceOrders, setItemsServiceOrders] = useState({});\n  const [itemsPurchaseOrder, setItemsPurchaseOrder] = useState([]);\n\n  const getData = () => {\n    const itemsPurchased = purchaseOrders.slice()\n      .reduce((acc, curr) => {\n        if (curr.itens) {\n          curr.itens.forEach((item) => {\n            const name = item.nome;\n            if (!acc[name]) {\n              acc[name] = { ...item };\n              acc[name].quantidade = 0;\n            }\n            acc[name].quantidade += item.quantidade;\n          });\n        }\n        return acc;\n      }, {});\n\n    setItemsPurchaseOrder(itemsPurchased);\n\n    setItemsServiceOrders(serviceOrders\n      .filter((item) => item.status === 'diagnostico' && item.diagnostico.itens && item.diagnostico.itens.length > 0)\n      .map((item) => item.diagnostico.itens)\n      .reduce((acc, curr) => {\n        curr.forEach((item) => {\n          const name = item.nome;\n          if (!acc[name]) {\n            acc[name] = { ...item };\n            acc[name].quantidade = 0;\n          }\n          acc[name].quantidade += item.quantidade || 0;\n        });\n        return acc;\n      }, {}));\n  };\n\n  useEffect(getData, [purchaseOrders, serviceOrders]);\n\n  function changeTab(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  return (\n    <>\n      <Container className={classes.containerBottom}>\n        <Grid container className={classes.titleList}>\n          <Grid item>\n            <Tabs\n              value={tabValue}\n              onChange={changeTab}\n              aria-label=\"Abas de listagens de ordens de serviços\"\n              centered\n            >\n              <Tab label=\"Demanda de materiais\" aria-controls=\"lista-items-quantidade\" />\n              <Tab label=\"Ordens de compra\" aria-controls=\"lista-ordens-de-compra\" />\n            </Tabs>\n          </Grid>\n        </Grid>\n\n        <TabPanel value={tabValue} index={0}>\n          <ListItemServiceOrder\n            reloadData={reloadData}\n            itemsServiceOrder={itemsServiceOrders}\n            itemsPurchaseOrder={itemsPurchaseOrder}\n          />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <Grid container justify=\"space-between\" className={classes.titleList}>\n            <Grid item>\n              <Typography variant=\"h5\" component=\"h5\">\n                Ordens de compras cadatradas\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Paper className={classes.paper}>\n            <PurchaseOrderTable reloadData={reloadData} purchaseOrders={purchaseOrders} />\n          </Paper>\n        </TabPanel>\n      </Container>\n    </>\n  );\n};\n\nDemandPage.propTypes = {\n  purchaseOrders: PropTypes.instanceOf(Array).isRequired,\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default DemandPage;\n","import React, { useState } from 'react';\nimport Layout from '../_layout/Layout';\nimport { getAllServiceOrder } from '../../modelServices/serviceOrderService';\nimport { getAllPurchaseOrders } from '../../modelServices/purchaseOrderService';\nimport DemandPage from './DemandPage';\nimport LoadingBar from '../_common/components/LoadingBar';\n\n\nconst IndexDemand = () => {\n  const [serviceOrders, setServiceOrder] = useState([]);\n  const [purchaseOrder, setPurchaseOrder] = useState([]);\n  const [requestBlock, setRequestBlock] = useState(false);\n  const [loadingData, setLoadingData] = useState(true);\n  const [progress, setProgress] = useState(0);\n\n  const getData = async () => {\n    await setLoadingData(true);\n    await setProgress(10);\n\n    const newPurchaseOrder = await getAllPurchaseOrders();\n    await setPurchaseOrder(newPurchaseOrder.slice());\n    await setProgress(40);\n\n    const newServiceOrder = await getAllServiceOrder();\n    await setProgress(80);\n    await setServiceOrder(newServiceOrder || []);\n\n    await setProgress(100);\n    await setLoadingData(false);\n  };\n\n  const reloadData = async () => {\n    await setRequestBlock(false);\n  };\n\n  if (!requestBlock) {\n    setRequestBlock(true);\n    getData();\n  }\n\n  if (loadingData) {\n    return <LoadingBar progress={progress} />;\n  }\n\n  return (\n    <>\n      <Layout>\n        <DemandPage\n          serviceOrders={serviceOrders}\n          purchaseOrders={purchaseOrder}\n          reloadData={reloadData}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport default IndexDemand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableHead } from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst ActionTableHeaderLayout = (props) => {\n  const {\n    headerData,\n  } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headerData.map((item) => (\n          <TableCell\n            key={item.id}\n            align=\"left\"\n            padding=\"default\"\n          >\n            {item.name}\n          </TableCell>\n        ))}\n        <TableCell>\n          Ações\n        </TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n\nActionTableHeaderLayout.propTypes = {\n  headerData: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ActionTableHeaderLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Menu from '@material-ui/core/Menu';\nimport orange from '@material-ui/core/colors/orange';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: orange[600],\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nconst ActionMenuLayout = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    item,\n    menuOptions,\n  } = props;\n\n  const openMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"lista-acoes\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={openMenu}\n      >\n        <MenuIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n        keepMounted\n      >\n        {\n          menuOptions.map((option) => (\n            <StyledMenuItem\n              key={option.name}\n              onClick={() => {\n                option.action(item);\n              }}\n            >\n              {option.name}\n            </StyledMenuItem>\n          ))\n        }\n      </StyledMenu>\n    </div>\n  );\n};\n\nActionMenuLayout.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  menuOptions: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ActionMenuLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ColorIconButton from '../forms/ColorIconButton';\n\n\nconst ActionButtonLayout = (props) => {\n  const {\n    item,\n    menuOptions,\n  } = props;\n\n  return (\n    <>\n      {menuOptions.map((option) => (\n        <ColorIconButton\n          key={option.name}\n          name={option.name}\n          item={item}\n          action={option.action}\n          icon={option.icon}\n        />\n      ))}\n    </>\n  );\n};\n\nActionButtonLayout.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  menuOptions: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ActionButtonLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ActionMenuLayout from './ActionMenuLayout';\nimport ActionButtonLayout from './ActionButtonLayout';\nimport { randomIndex } from '../../../utils';\n\n\nconst ActionTableBodyLayout = (props) => {\n  const {\n    data,\n    headerKeys,\n    menuOptions,\n    actionIconButton,\n  } = props;\n\n  return (\n    <TableBody>\n      {data\n        .map((item) => (\n          <TableRow hover key={randomIndex()}>\n            {\n              headerKeys.map((header) => (\n                <TableCell key={header}>{item[header]}</TableCell>\n              ))\n            }\n            <TableCell>\n              {actionIconButton\n                ? (\n                  <ActionButtonLayout\n                    item={item}\n                    menuOptions={menuOptions}\n                  />\n                )\n                : (\n                  <ActionMenuLayout\n                    item={item}\n                    menuOptions={menuOptions}\n                  />\n                )}\n            </TableCell>\n          </TableRow>\n        ))}\n    </TableBody>\n  );\n};\n\nActionTableBodyLayout.defaultProps = {\n  actionIconButton: false,\n};\n\nActionTableBodyLayout.propTypes = {\n  data: PropTypes.instanceOf(Array).isRequired,\n  headerKeys: PropTypes.instanceOf(Array).isRequired,\n  menuOptions: PropTypes.instanceOf(Array).isRequired,\n  actionIconButton: PropTypes.bool,\n};\n\nexport default ActionTableBodyLayout;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport ActionTableHeaderLayout from './ActionTableHeaderLayout';\nimport ActionTableBodyLayout from './ActionTableBodyLayout';\n\n\nconst ActionTableList = (props) => {\n  const {\n    dataTable,\n    headerTable,\n    menuOptions,\n    actionIconButton,\n  } = props;\n\n  const [headerTableIds, setHeaderTableIds] = useState([]);\n\n  useEffect(() => {\n    setHeaderTableIds(headerTable.map((item) => item.id));\n  }, [headerTable]);\n\n  return (\n    <div style={{ marginTop: '2rem' }}>\n      <TableContainer>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          aria-label=\"enhanced table\"\n        >\n          <ActionTableHeaderLayout headerData={headerTable} />\n          <ActionTableBodyLayout\n            actionIconButton={actionIconButton}\n            data={dataTable}\n            headerKeys={headerTableIds}\n            menuOptions={menuOptions}\n          />\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nActionTableList.defaultProps = {\n  actionIconButton: false,\n  menuOptions: [],\n};\n\nActionTableList.propTypes = {\n  dataTable: PropTypes.instanceOf(Array).isRequired,\n  headerTable: PropTypes.instanceOf(Array).isRequired,\n  menuOptions: PropTypes.instanceOf(Array),\n  actionIconButton: PropTypes.bool,\n};\nexport default ActionTableList;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport orange from '@material-ui/core/colors/orange';\nimport FormDiagnosis from './DiagnosisForm/FormDiagnosis';\nimport ThemeButton from '../_common/forms/ThemeButton';\nimport { updateServiceOrderRequest } from '../../modelServices/serviceOrderService';\nimport FullDialog from '../_common/components/FullDialog';\nimport { ServiceOrderDiagnosis } from '../../models/serviceOrder';\n\n\nconst DiagnosisFormDialog = (props) => {\n  const {\n    handleClose,\n    serviceOrder,\n    openModal,\n    reloadData,\n  } = props;\n\n  const [serviceOrderForm, setServiceOrderForm] = useState({});\n\n  const handleEffect = () => {\n    setServiceOrderForm(\n      { ...ServiceOrderDiagnosis({ dignostico: {} }), ...serviceOrder },\n    );\n  };\n\n  useEffect(handleEffect, [serviceOrder]);\n\n  const updateServiceForm = (value) => {\n    setServiceOrderForm(\n      { ...serviceOrder, diagnostico: serviceOrderForm.diagnostico, ...value },\n    );\n  };\n\n  const saveForm = async () => {\n    try {\n      await updateServiceOrderRequest(\n        {\n          diagnostico: serviceOrderForm.diagnostico,\n          status: 'diagnostico',\n          updated_at: new Date(),\n        },\n        serviceOrderForm._id.$oid,\n      );\n      reloadData();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const titleFormModal = serviceOrder.status === 'diagnostico'\n    ? `OS ${serviceOrder.numero_ordem_servico} - Editar Diagnóstico`\n    : `OS ${serviceOrder.numero_ordem_servico} - Cadastrar Diagnóstico`;\n\n  return (\n    <>\n      <FullDialog\n        open={openModal}\n        handleClose={handleClose}\n        title={titleFormModal}\n        actionChildren={(\n          <>\n            <Grid container spacing={2}>\n              <Grid item>\n                <ThemeButton\n                  onClick={handleClose}\n                  startIcon={<CloseIcon />}\n                  variant=\"outlined\"\n                  borderColor=\"white\"\n                >\n                  Cancelar\n                </ThemeButton>\n              </Grid>\n              <Grid item>\n                <ThemeButton\n                  startIcon={<SaveIcon />}\n                  onClick={saveForm}\n                  name=\"Salvar\"\n                  color={orange[600]}\n                  bgColor=\"#FFF\"\n                  hoverColor={orange[50]}\n                >\n                  Salvar\n                </ThemeButton>\n              </Grid>\n            </Grid>\n          </>\n        )}\n      >\n        <FormDiagnosis\n          updateServiceForm={updateServiceForm}\n          serviceOrder={serviceOrderForm}\n        />\n      </FullDialog>\n    </>\n  );\n};\n\nDiagnosisFormDialog.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n  openModal: PropTypes.bool.isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default DiagnosisFormDialog;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\nimport { Grid, Typography } from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport QueueIcon from '@material-ui/icons/Queue';\nimport ActionTableList from '../_common/ActionTable/ActionTableList';\nimport { helperPropsColorIconButton } from '../_common/forms/ColorIconButton';\nimport DiagnosisFormDialog from './DiagnosisFormDialog';\n\n\nconst headerData = [\n  { id: 'numero_ordem_servico', name: 'Ordem de Serviço' },\n  { id: 'numero_de_serie', name: 'Número de Série' },\n  { id: 'marca', name: 'Marca' },\n  { id: 'modelo', name: 'Modelo' },\n  { id: 'origem', name: 'Origem' },\n  { id: 'created_at', name: 'Data de criação' },\n];\n\nconst TableScreeningServiceOrders = (props) => {\n  const {\n    serviceOrderScreening,\n    reloadData,\n  } = props;\n\n  const [serviceOrder, setServiceOrder] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n\n  const dataTable = serviceOrderScreening.map((order) => {\n    const item = order;\n    const equip = item.equipamento[0] || {};\n    if (typeof (item.created_at) === 'object' && item.created_at && item.created_at.$date) {\n      item.created_at = item.created_at.$date;\n    }\n\n    return {\n      numero_ordem_servico: item.numero_ordem_servico,\n      marca: equip.marca || '',\n      modelo: equip.modelo || '',\n      instituicao_de_origem: equip.instituicao_de_origem || '',\n      numero_de_serie: equip.numero_de_serie || '',\n      origem: equip.nome_instituicao_origem || '',\n      created_at: moment.tz(new Date(item.created_at), 'America/Fortaleza').format('DD/MM/Y'),\n    };\n  });\n\n  const openFormDiagnosis = (value) => {\n    setServiceOrder(\n      serviceOrderScreening\n        .find((item) => item.numero_ordem_servico === value.numero_ordem_servico),\n    );\n    setOpenModal(true);\n  };\n\n  const menuOptions = [\n    helperPropsColorIconButton('Efetuar diagnóstico', openFormDiagnosis, 'white', orange[600], orange[700],\n      <QueueIcon fontSize=\"small\" />),\n  ];\n\n  return (\n    <>\n      <Grid container justify=\"space-between\">\n        <Grid item xs=\"auto\">\n          <Typography variant=\"h5\" component=\"h5\">\n            Ordens de serviço com triagem aguardando diagnóstico\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <ActionTableList\n            actionIconButton\n            dataTable={dataTable}\n            headerTable={headerData}\n            menuOptions={menuOptions}\n          />\n        </Grid>\n      </Grid>\n      <DiagnosisFormDialog\n        reloadData={reloadData}\n        serviceOrder={serviceOrder}\n        openModal={openModal}\n        handleClose={() => setOpenModal(false)}\n      />\n    </>\n\n  );\n};\n\nTableScreeningServiceOrders.propTypes = {\n  serviceOrderScreening: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default TableScreeningServiceOrders;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\nimport { Grid, Typography } from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ActionTableList from '../_common/ActionTable/ActionTableList';\nimport { helperPropsColorIconButton } from '../_common/forms/ColorIconButton';\nimport DiagnosisFormDialog from './DiagnosisFormDialog';\n\n\nconst headerData = [\n  { id: 'numero_ordem_servico', name: 'Ordem de Serviço' },\n  { id: 'numero_de_serie', name: 'Número de Série' },\n  { id: 'marca', name: 'Marca' },\n  { id: 'modelo', name: 'Modelo' },\n  { id: 'origem', name: 'Origem' },\n  { id: 'created_at', name: 'Data de criação' },\n];\n\nconst TableDiagnosisServiceOrder = (props) => {\n  const {\n    serviceOrderDiagnosis,\n    reloadData,\n  } = props;\n\n  const [serviceOrder, setServiceOrder] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n\n  const dataTable = serviceOrderDiagnosis\n    ? serviceOrderDiagnosis.map((serviceOrderDiagnosi) => {\n      const item = serviceOrderDiagnosi;\n      const equip = item.equipamento[0] || {};\n      if (typeof (item.created_at) === 'object' && item.created_at && item.created_at.$date) {\n        item.created_at = item.created_at.$date;\n      }\n      return {\n        numero_ordem_servico: item.numero_ordem_servico,\n        marca: equip.marca || '',\n        modelo: equip.modelo || '',\n        instituicao_de_origem: equip.instituicao_de_origem || '',\n        numero_de_serie: equip.numero_de_serie || '',\n        origem: equip.nome_instituicao_origem || '',\n        created_at: moment.tz(new Date(item.created_at), 'America/Fortaleza').format('DD/MM/Y'),\n      };\n    })\n    : [];\n\n  const openFormDiagnosis = (value) => {\n    setServiceOrder(\n      serviceOrderDiagnosis\n        .find((item) => item.numero_ordem_servico === value.numero_ordem_servico),\n    );\n    setOpenModal(true);\n  };\n\n  const menuOptions = [\n    helperPropsColorIconButton(\n      'Efetuar diagnóstico',\n      openFormDiagnosis,\n      'white',\n      orange[600],\n      orange[700],\n      <EditIcon fontSize=\"small\" />,\n    ),\n  ];\n\n  return (\n    <>\n      <Grid container justify=\"space-between\">\n        <Grid item xs=\"auto\">\n          <Typography variant=\"h5\" component=\"h5\">\n            Ordens de serviço com diagnóstico cadastrado\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <ActionTableList\n            actionIconButton\n            dataTable={dataTable}\n            headerTable={headerData}\n            menuOptions={menuOptions}\n          />\n        </Grid>\n      </Grid>\n\n      <DiagnosisFormDialog\n        reloadData={reloadData}\n        serviceOrder={serviceOrder}\n        openModal={openModal}\n        handleClose={() => setOpenModal(false)}\n      />\n    </>\n  );\n};\n\nTableDiagnosisServiceOrder.propTypes = {\n  serviceOrderDiagnosis: PropTypes.instanceOf(Array).isRequired,\n  reloadData: PropTypes.func.isRequired,\n};\n\nexport default TableDiagnosisServiceOrder;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Grid, Paper, Tab, Tabs } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../_layout/Layout';\nimport TabPanel from '../_common/components/TabPanel';\nimport TableScreeningServiceOrders from './TableScreeningServiceOrders';\nimport TableDiagnosisServiceOrder from './TableDiagnosisServiceOrder';\nimport { getAllServiceOrder } from '../../modelServices/serviceOrderService';\nimport LoadingBar from '../_common/components/LoadingBar';\n\n\nconst useStyle = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst Diagnosis = () => {\n  const classes = useStyle();\n  const [tabValue, setTabValue] = useState(0);\n  const [requestBlock, setRequestBlock] = useState(false);\n  const [serviceOrders, setServiceOrders] = useState([]);\n  const [progressLoad, setProgressLoad] = useState(0);\n\n  const handleEffect = () => {\n    if (!requestBlock) {\n      setProgressLoad(30);\n      getAllServiceOrder()\n        .then((result) => {\n          setProgressLoad(70);\n          if (!result) return;\n          setServiceOrders(result);\n          setRequestBlock(true);\n        });\n    }\n  };\n\n  useEffect(handleEffect, [requestBlock, serviceOrders]);\n\n  const reloadData = () => {\n    setRequestBlock(false);\n    handleEffect();\n  };\n\n  const changeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  if (!requestBlock) {\n    return <LoadingBar progress={progressLoad} />;\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <Grid container style={{ marginBottom: '2rem', marginTop: '2rem' }}>\n          <Grid item xs=\"auto\">\n            <Tabs\n              value={tabValue}\n              onChange={changeTab}\n              aria-label=\"Abas de listagens de equipamentos\"\n              centered\n            >\n              <Tab\n                label=\"Ordens de Serviço em Triagem\"\n                aria-controls=\"equipamentos-com-triagem\"\n              />\n              <Tab\n                label=\"Ordens de Serviço Diagnósticadas\"\n                aria-controls=\"equipamentos-com-diagnostico\"\n              />\n            </Tabs>\n          </Grid>\n        </Grid>\n\n        <TabPanel value={tabValue} index={0}>\n          <Paper className={classes.paper}>\n            <TableScreeningServiceOrders\n              reloadData={reloadData}\n              serviceOrderScreening={serviceOrders.filter((item) => item && item.status === 'triagem')}\n            />\n          </Paper>\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <Paper className={classes.paper}>\n            <TableDiagnosisServiceOrder\n              reloadData={reloadData}\n              serviceOrderDiagnosis={serviceOrders.filter((item) => item && item.status === 'diagnostico')}\n            />\n          </Paper>\n        </TabPanel>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Diagnosis;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Chip from '@material-ui/core/Chip';\nimport green from '@material-ui/core/colors/green';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { randomIndex } from '../../../utils';\n\n\nconst headerData = [\n  { id: 'numero_ordem_servico', label: 'Ordem de Serviço' },\n  { id: 'tipo', label: 'Tipo do equipamento' },\n  { id: 'numero_de_serie', label: 'Número de série' },\n  { id: 'marca', label: 'Marca' },\n  { id: 'modelo', label: 'Modelo' },\n];\n\nconst ColorChip = withStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    fontSize: 14,\n    margin: theme.spacing(2),\n    backgroundColor: green.A200,\n    '&:hover': {\n      backgroundColor: green.A400,\n    },\n  },\n}))(Chip);\n\nconst useStyle = makeStyles(() => ({\n  tableContainer: {\n    maxHeight: '500px',\n    overflowY: 'auto',\n  },\n  chip: {\n    root: {\n      backgroundColor: green[400],\n    },\n  },\n}));\n\nconst TableSearchEquipment = (props) => {\n  const classes = useStyle();\n\n  const {\n    serviceOrders,\n    updateForm,\n  } = props;\n\n  const [blockEffects, setBlockEffects] = useState(false);\n  const [dataTableServiceOrders, setDataTableServiceOrders] = useState([]);\n  const [checkedRows, setCheckedRows] = useState({});\n  const [search, setSearch] = useState('');\n\n  function handleUpdateForm(rows) {\n    const docs = [];\n    Object.keys(rows).forEach((serviceOrderNumber) => {\n      if (!rows[serviceOrderNumber]) return;\n      docs.push(\n        serviceOrders.find((item) => item.numero_ordem_servico === serviceOrderNumber),\n      );\n    });\n\n    updateForm({ equipamentos: docs });\n  }\n\n  function selectAll(value) {\n    const check = {};\n    dataTableServiceOrders.forEach((data) => {\n      if (!check[data.numero_ordem_servico]) {\n        check[data.numero_ordem_servico] = value;\n      }\n    });\n\n    setCheckedRows(check);\n    handleUpdateForm(check);\n    return true;\n  }\n\n  function selectOne(serviceOrderNumber) {\n    const doc = { ...checkedRows };\n    doc[serviceOrderNumber] = !checkedRows[serviceOrderNumber];\n    setCheckedRows(doc);\n    handleUpdateForm(doc);\n  }\n\n  function searchValue(value) {\n    setSearch(value);\n    const dataTable = serviceOrders.slice()\n      .filter((item) => {\n        if (value === '') {\n          return true;\n        }\n\n        const equipamento = item.equipamento[0] || false;\n        if (!equipamento) {\n          return false;\n        }\n\n        return item.numero_ordem_servico.includes(value)\n          || equipamento.numero_de_serie.includes(value);\n      })\n      .map((item) => {\n        const equipamento = item.equipamento[0] || {};\n        return {\n          numero_ordem_servico: item.numero_ordem_servico,\n          tipo: equipamento.tipo || '',\n          numero_de_serie: equipamento.numero_de_serie || '',\n          marca: equipamento.marca || '',\n          modelo: equipamento.modelo || '',\n\n        };\n      });\n    setDataTableServiceOrders(dataTable);\n  }\n\n  function removeServiceOrderEquipment(serviceOrderNumber) {\n    selectOne(serviceOrderNumber);\n  }\n\n  function definedData() {\n    if (blockEffects) {\n      return;\n    }\n\n    const dataTable = serviceOrders.map((item) => {\n      const equipamento = item.equipamento[0] || {};\n      return {\n        numero_ordem_servico: item.numero_ordem_servico,\n        tipo: equipamento.tipo || '',\n        numero_de_serie: equipamento.numero_de_serie || '',\n        marca: equipamento.marca || '',\n        modelo: equipamento.modelo || '',\n\n      };\n    });\n\n    setDataTableServiceOrders(dataTable);\n\n    if (Object.keys(checkedRows).length === 0) {\n      const check = {};\n      serviceOrders.slice().forEach((serviceOrder) => {\n        if (!Object.prototype.hasOwnProperty.call(check, serviceOrder.numero_ordem_servico)) {\n          check[serviceOrder.numero_ordem_servico] = false;\n        }\n      });\n\n      setCheckedRows({ ...check });\n    }\n\n    setBlockEffects(true);\n  }\n\n  useEffect(definedData, [definedData, serviceOrders]);\n\n  return (\n    <>\n      <TextField\n        label=\"Buscar pelo equipamento\"\n        onChange={(event) => searchValue(event.target.value)}\n        value={search}\n        fullWidth\n        helperText=\"Digite número da Ordem de serviço ou número de série.\"\n      />\n      <TableContainer className={classes.tableContainer}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Checkbox onClick={(event) => selectAll(event.target.checked)} />\n              </TableCell>\n              {headerData.map((header) => (\n                <TableCell key={header.label}>{header.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {dataTableServiceOrders.map((serviceOrder) => (\n              <TableRow key={randomIndex()}>\n                <TableCell>\n                  <Checkbox\n                    onClick={() => selectOne(serviceOrder.numero_ordem_servico)}\n                    checked={checkedRows[serviceOrder.numero_ordem_servico]}\n                  />\n                </TableCell>\n                {headerData.map((header) => (\n                  <TableCell key={header.id}>{serviceOrder[header.id]}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {Object.keys(checkedRows)\n        .filter((item) => checkedRows[item])\n        .map((item) => (\n          <ColorChip\n            classes={classes.chip.root}\n            key={randomIndex()}\n            label={item}\n            onDelete={() => removeServiceOrderEquipment(item)}\n          />\n        ))}\n    </>\n  );\n};\n\nTableSearchEquipment.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  updateForm: PropTypes.func.isRequired,\n};\n\nexport default TableSearchEquipment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport getCities from '../../../services/cities';\nimport { randomIndex } from '../../../utils';\n\n\nconst ToInstituteFrom = (props) => {\n  const municipios = getCities('ce');\n\n  const {\n    updateForm,\n    formModel,\n  } = props;\n\n  function updateToForm(event) {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateForm(doc);\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Unidade/Instituição de Destino\"\n            value={formModel.instituicao_destino}\n            name=\"instituicao_destino\"\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            select\n            label=\"Município de Origem\"\n            value={formModel.cidade_destino}\n            name=\"cidade_destino\"\n            onChange={updateToForm}\n            fullWidth\n          >\n            <MenuItem value={undefined}> </MenuItem>\n            {municipios.map((item) => (\n              <MenuItem key={randomIndex()} value={item}>{item}</MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"CNPJ da Unidade/Instituição de Destino\"\n            value={formModel.cnpj_destino}\n            name=\"cnpj_destino\"\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Endereço da Unidade/Instituição de Destino\"\n            value={formModel.endereco_destino}\n            name=\"endereco_destino\"\n            fullWidth\n            required\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Nome do responsável legal\"\n            value={formModel.nome_responsavel_destino}\n            name=\"nome_responsavel_destino\"\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Contato do responsável legal\"\n            value={formModel.contato_responsavel_destino}\n            name=\"contato_responsavel_destino\"\n            fullWidth\n            required\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nToInstituteFrom.propTypes = {\n  updateForm: PropTypes.func.isRequired,\n  formModel: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default ToInstituteFrom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst PersonTransportationForm = (props) => {\n  const {\n    updateForm,\n    formModel,\n  } = props;\n\n  function updatePersonForm(event) {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateForm(doc);\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            name=\"nome_responsavel_transporte\"\n            label=\"Nome do responsável do transporte\"\n            value={formModel.nome_responsavel_transporte}\n            onChange={updatePersonForm}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            name=\"contato_responsavel_transporte\"\n            label=\"Contato do responsável do transporte\"\n            value={formModel.contato_responsavel_transporte}\n            onChange={updatePersonForm}\n            fullWidth\n            required\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nPersonTransportationForm.propTypes = {\n  updateForm: PropTypes.func.isRequired,\n  formModel: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default PersonTransportationForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst DeliveryFormInfo = (props) => {\n  const {\n    updateForm,\n    formModel,\n  } = props;\n\n  function updateToForm(event) {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    updateForm(doc);\n  }\n\n  return (\n    <>\n      <Grid container justify=\"space-between\" spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Data da entrega\"\n            name=\"data_entrega\"\n            value={formModel.data_entrega}\n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            onChange={updateToForm}\n            label=\"Horário da entrega\"\n            name=\"hora_entrega\"\n            value={formModel.hora_entrega}\n            type=\"time\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            required\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nDeliveryFormInfo.propTypes = {\n  updateForm: PropTypes.func.isRequired,\n  formModel: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default DeliveryFormInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport TooptipInfo from '../../_common/components/TooltipInfo';\nimport { randomIndex } from '../../../utils';\n\n\nconst AccessoriesEquipmentText = (props) => {\n  const {\n    equipmentId,\n    formModel,\n  } = props;\n\n  const hasAccessorieInForm = formModel && formModel.acessorios;\n  const hasAccessorieInEquip = hasAccessorieInForm\n    && Object.prototype.hasOwnProperty.call(formModel.acessorios, equipmentId);\n\n  if (!hasAccessorieInEquip) {\n    return (\n      <Grid container spacing={1} wrap=\"nowrap\" alignItems=\"center\">\n        <Grid item xs=\"auto\">\n          <Typography>Não revisado</Typography>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <TooptipInfo icon={<InfoIcon fontSize=\"small\" />}>\n            <Typography variant=\"subtitle1\">\n              Clique no botão azul ao lado para revisar, adicionar ou editar os acessórios desde\n              equipamento que irá junto na\n              entrega.\n            </Typography>\n          </TooptipInfo>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  const accessories = formModel.acessorios[equipmentId];\n\n  return (\n    <>\n      {accessories.map((accessorie) => (\n        <Typography key={randomIndex()}>{accessorie.descricao}</Typography>\n      ))}\n    </>\n  );\n};\n\nAccessoriesEquipmentText.propTypes = {\n  equipmentId: PropTypes.string.isRequired,\n  formModel: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default AccessoriesEquipmentText;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/Save';\nimport orange from '@material-ui/core/colors/orange';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport ThemeButton from '../../_common/forms/ThemeButton';\nimport equipmentTypes from '../../../models/equipmentTypes';\nimport InputRadioDialog from '../../_common/forms/InputRadioDialog';\nimport {\n  manufacturersEquipments,\n  modelsEquipment,\n} from '../../../models/manufacturers';\nimport typeInstitute from '../../../models/typeInstitute';\nimport FullDialog from '../../_common/components/FullDialog';\nimport getCities from '../../../services/cities';\nimport { randomIndex } from '../../../utils';\n\n\nconst useStyle = makeStyles((theme) => ({\n  containerContent: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nconst DialogEquipment = (props) => {\n  const cities = getCities('CE');\n  const classes = useStyle();\n  const {\n    open,\n    handleClose,\n    equipment,\n    indexEquipment,\n    updateEquipmentForm,\n  } = props;\n\n  const [formEquipment, setFormEquipment] = useState({});\n\n  useEffect(() => {\n    if (!equipment) return;\n    setFormEquipment({ ...equipment });\n  }, [equipment]);\n\n  function handleUpdateAccessories(event) {\n    const doc = {};\n    doc[event.target.name] = event.target.value;\n    setFormEquipment({ ...formEquipment, ...doc });\n  }\n\n  function saveEquipment() {\n    updateEquipmentForm(formEquipment, indexEquipment);\n  }\n\n  return (\n    <>\n      <FullDialog\n        open={open}\n        handleClose={handleClose}\n        title=\"Formulário de Edição do Equipamento\"\n        actionChildren={(\n          <ThemeButton\n            startIcon={<SaveIcon />}\n            onClick={saveEquipment}\n            name=\"Salvar\"\n            color={orange[600]}\n            bgColor=\"#FFF\"\n            hoverColor={orange[50]}\n          >\n            Salvar\n          </ThemeButton>\n        )}\n      >\n        <Container className={classes.containerContent}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Grid item xs={12}>\n                <Typography variant=\"h5\">Observações:</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <ul>\n                  <li>\n                    A dados do equipamento abaixo foram inicialmente baseados nos campos\n                    cadastrados\n                    no momento da triagem.\n                  </li>\n                  <li>\n                    Qualquer alteração nos campos abaixo\n                    <strong>atualizarão o equipamento no sistema</strong>\n                    da Central de Ventilados.\n                  </li>\n                </ul>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField\n                fullWidth\n                label=\"Nome do Equipamento\"\n                name=\"nome_equipamento\"\n                value={formEquipment.nome_equipamento}\n                onChange={handleUpdateAccessories}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField\n                fullWidth\n                label=\"Número de Série\"\n                name=\"numero_de_serie\"\n                value={formEquipment.numero_de_serie}\n                onChange={handleUpdateAccessories}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <TextField\n                fullWidth\n                label=\"Número do Patrimônio\"\n                name=\"numero_do_patrimonio\"\n                value={formEquipment.numero_do_patrimonio}\n                onChange={handleUpdateAccessories}\n                required\n              />\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              <InputRadioDialog\n                action={handleUpdateAccessories}\n                name=\"tipo\"\n                label=\"Tipo do Equipamento\"\n                hasOther\n                value={formEquipment.tipo}\n                defaultValue={formEquipment.tipo}\n                items={equipmentTypes.map((item) => ({ label: item, value: item }))}\n              />\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <InputRadioDialog\n                action={handleUpdateAccessories}\n                name=\"marca\"\n                label=\"Marca\"\n                hasOther\n                value={formEquipment.marca}\n                defaultValue={formEquipment.marca}\n                items={manufacturersEquipments.map((item) => ({ label: item, value: item }))}\n              />\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <InputRadioDialog\n                action={handleUpdateAccessories}\n                name=\"modelo\"\n                label=\"Modelo\"\n                hasOther\n                value={formEquipment.modelo}\n                defaultValue={formEquipment.modelo}\n                items={modelsEquipment.map((item) => ({ label: item, value: item }))}\n              />\n            </Grid>\n            <Grid item xs={6} md={2}>\n              <TextField\n                required\n                id=\"fabricante\"\n                onChange={handleUpdateAccessories}\n                value={formEquipment.fabricante}\n                name=\"fabricante\"\n                label=\"Fabricante\"\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                select\n                label=\"Município de Destino\"\n                value={formEquipment.municipio_origem}\n                helperText={`Valor atual: ${formEquipment.municipio_origem}`}\n                onChange={handleUpdateAccessories}\n                name=\"municipio_origem\"\n              >\n                {cities.map((option) => (\n                  <MenuItem key={randomIndex()} value={option}>{option}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <TextField\n                required\n                id=\"nome_instituicao_origem\"\n                onChange={handleUpdateAccessories}\n                value={formEquipment.nome_instituicao_origem}\n                name=\"nome_instituicao_origem\"\n                label=\"Nome da Instituição\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <TextField\n                fullWidth\n                select\n                label=\"Tipo da instituição\"\n                value={formEquipment.tipo_instituicao_origem}\n                onChange={handleUpdateAccessories}\n                name=\"tipo_instituicao_origem\"\n              >\n                {typeInstitute.map((option) => (\n                  <MenuItem key={randomIndex()} value={option}>{option}</MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid item xs={6} sm={6}>\n              <TextField\n                required\n                id=\"nomeDoResponsavel\"\n                onChange={handleUpdateAccessories}\n                value={formEquipment.nome_responsavel}\n                name=\"nome_responsavel\"\n                label=\"Nome do Responsável\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                id=\"constatoDoResponsavel\"\n                onChange={handleUpdateAccessories}\n                value={formEquipment.contato_responsavel}\n                name=\"contato_responsavel\"\n                label=\"Contato do Responsável\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Container>\n\n      </FullDialog>\n    </>\n  );\n};\n\nDialogEquipment.defaultProps = {\n  open: false,\n};\n\nDialogEquipment.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  equipment: PropTypes.instanceOf(Object).isRequired,\n  indexEquipment: PropTypes.string.isRequired,\n  updateEquipmentForm: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n};\n\nexport default DialogEquipment;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/Save';\nimport orange from '@material-ui/core/colors/orange';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ThemeButton from '../../_common/forms/ThemeButton';\nimport FullDialog from '../../_common/components/FullDialog';\nimport RelacaoDeMaterial from '../../Screening/ScreeningForm/RelacaoDeMaterial';\n\n\nconst useStyle = makeStyles((theme) => ({\n  containerContent: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nconst DialogAccessories = (props) => {\n  const classes = useStyle();\n  const {\n    open,\n    keyIndex,\n    accessories,\n    updateAccessories,\n    handleClose,\n  } = props;\n\n  const [formAccessories, setFormAccessories] = useState([]);\n\n  useEffect(() => {\n    setFormAccessories(accessories);\n  }, [accessories]);\n\n  function handleUpdateAccessories(_accessories) {\n    setFormAccessories(_accessories);\n  }\n\n  function saveAccessories() {\n    updateAccessories(keyIndex, formAccessories.filter((item) => item.descricao !== ''));\n  }\n\n  return (\n    <>\n      <FullDialog\n        open={open}\n        title=\"Definição dos acessórios\"\n        handleClose={handleClose}\n        actionChildren={(\n          <ThemeButton\n            startIcon={<SaveIcon />}\n            onClick={saveAccessories}\n            name=\"Salvar\"\n            color={orange[600]}\n            bgColor=\"#FFF\"\n            hoverColor={orange[50]}\n          >\n            Salvar\n          </ThemeButton>\n        )}\n      >\n        <Container className={classes.containerContent}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">Observações:</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <ul>\n                <li>\n                  A lista de itens abaixo foi inicialmente baseado nos materiais definidos na\n                  momendo da triagem.\n                </li>\n                <li>\n                  Os itens aqui alterados\n                  <strong>não irão alterar</strong>\n                  os acessórios definidos na triagem.\n                </li>\n                <li>\n                  Os itens abaixo\n                  <strong>estão somente relacionados à entrega</strong>\n                  do equipamento\n                </li>\n              </ul>\n            </Grid>\n            <Grid item xs={12}>\n              <RelacaoDeMaterial\n                acessorios={formAccessories}\n                atualizarAcessorios={handleUpdateAccessories}\n              />\n            </Grid>\n          </Grid>\n\n        </Container>\n      </FullDialog>\n    </>\n  );\n};\n\nDialogAccessories.defaultProps = {\n  open: false,\n  accessories: [],\n};\n\nDialogAccessories.propTypes = {\n  open: PropTypes.bool,\n  keyIndex: PropTypes.string.isRequired,\n  updateAccessories: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  accessories: PropTypes.instanceOf(Array),\n};\n\nexport default DialogAccessories;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport blue from '@material-ui/core/colors/blue';\nimport {\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n} from '@material-ui/core';\nimport AccessoriesEquipmentText from './AccessoriesEquipmentText';\nimport DialogEquipment from './DialogEquipment';\nimport DialogAccessories from './DialogAccessories';\nimport ColorIconButton from '../../_common/forms/ColorIconButton';\nimport { randomIndex } from '../../../utils';\n\n\nconst useStyle = makeStyles(() => ({\n  cellRow: {\n    maxHeight: '84px',\n    overflow: 'auto',\n  },\n}));\n\nconst EquipmentDetailDelivery = (props) => {\n  const classes = useStyle();\n  const {\n    servicesOrdersEquipments,\n    formModel,\n    updateEquipment,\n    updateAccessories,\n  } = props;\n\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const [equipmentAccessories, setEquipmentAccessories] = useState([]);\n  const [equipment, setEquipment] = useState({});\n  const [referenceIndex, setReferenceIndex] = useState('');\n\n  const headTable = [\n    { id: 'nome_equipamento', label: 'Nome' },\n    { id: 'tipo', label: 'Tipo' },\n    { id: 'numero_de_serie', label: 'Nº de série' },\n    { id: 'nome_instituicao_origem', label: 'Instituição de Origem' },\n    { id: 'acessorios', label: 'Acessórios' },\n  ];\n\n  const [openDialogEquipment, setOpenDialogEquipment] = useState(false);\n  const [openDialogAccessories, setOpenDialogAccessories] = useState(false);\n\n  const handleClose = () => {\n    setOpenDialogEquipment(false);\n    setOpenDialogAccessories(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleOpenEquipmentDialog = (servicesOrdersEquipment) => {\n    setEquipment(servicesOrdersEquipment.equipamento);\n    setReferenceIndex(servicesOrdersEquipment._id.$oid || servicesOrdersEquipment._id);\n    setOpenDialogEquipment(true);\n  };\n\n  const updateEquipmentDialog = (doc, index) => {\n    updateEquipment(doc, index);\n    handleClose();\n  };\n\n  const hasAccessorieToEquipment = (servicesOrdersEquipment) => {\n    const hasAccessorieInForm = formModel && formModel.acessorios;\n    return hasAccessorieInForm\n      && Object.prototype.hasOwnProperty.call(\n        formModel.acessorios, servicesOrdersEquipment.equipamento._id.$oid,\n      );\n  };\n\n  const handleOpenAccessories = (servicesOrdersEquipment) => {\n    const acc = hasAccessorieToEquipment(servicesOrdersEquipment)\n      ? formModel.acessorios[servicesOrdersEquipment.equipamento_id.$oid].slice()\n      : servicesOrdersEquipment.triagem.acessorios;\n\n    setEquipmentAccessories(acc);\n    setReferenceIndex(servicesOrdersEquipment._id.$oid || servicesOrdersEquipment._id);\n    setOpenDialogAccessories(true);\n  };\n\n  const handlUpdateAccessories = (index, _acessorios) => {\n    const doc = servicesOrdersEquipments.find((item) => item._id.$oid === index);\n    if (!doc) {\n      return;\n    }\n\n    updateAccessories(\n      _acessorios.filter((item) => item.acompanha && item.descricao !== ''),\n      doc.equipamento._id.$oid,\n    );\n    handleClose();\n  };\n\n  if (!servicesOrdersEquipments) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {headTable.map((head) => (\n                <TableCell key={randomIndex()}>\n                  {head.label}\n                </TableCell>\n              ))}\n              <TableCell>Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {servicesOrdersEquipments\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((servicesOrdersEquipment) => {\n                const equipmentData = servicesOrdersEquipment.equipamento;\n                return (\n                  <TableRow key={randomIndex()}>\n                    {headTable.map((head) => {\n                      if (head.id === 'acessorios') {\n                        return (\n                          <TableCell key={randomIndex()}>\n                            <div className={classes.cellRow}>\n                              <AccessoriesEquipmentText\n                                equipmentId={equipmentData._id.$oid}\n                                formModel={formModel}\n                              />\n                            </div>\n                          </TableCell>\n                        );\n                      }\n\n                      return (\n                        <TableCell key={randomIndex()}>{equipmentData[head.id]}</TableCell>\n                      );\n                    })}\n\n                    <TableCell>\n                      <Grid container spacing={1}>\n                        <Grid item>\n                          <ColorIconButton\n                            item={servicesOrdersEquipment}\n                            action={handleOpenAccessories}\n                            name=\"Acessórios\"\n                            icon={{\n                              bgColor: blue[500],\n                              hoverColor: blue[700],\n                              icon: <ExtensionIcon fontSize=\"small\" />,\n                            }}\n                          />\n                        </Grid>\n                        <Grid item>\n                          <ColorIconButton\n                            item={servicesOrdersEquipment}\n                            action={handleOpenEquipmentDialog}\n                            name=\"Editar Equipamento\"\n                            icon={{\n                              icon: <EditIcon fontSize=\"small\" />,\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={servicesOrdersEquipments.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <DialogEquipment\n        open={openDialogEquipment}\n        equipment={equipment}\n        indexEquipment={referenceIndex}\n        handleClose={handleClose}\n        updateEquipmentForm={updateEquipmentDialog}\n      />\n      <DialogAccessories\n        open={openDialogAccessories}\n        accessories={equipmentAccessories}\n        keyIndex={referenceIndex}\n        handleClose={handleClose}\n        updateAccessories={handlUpdateAccessories}\n      />\n    </>\n  );\n};\n\nEquipmentDetailDelivery.propTypes = {\n  servicesOrdersEquipments: PropTypes.instanceOf(Array).isRequired,\n  formModel: PropTypes.instanceOf(Object).isRequired,\n  updateEquipment: PropTypes.func.isRequired,\n  updateAccessories: PropTypes.func.isRequired,\n};\n\nexport default EquipmentDetailDelivery;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment-timezone';\nimport ThemeButton from '../_common/forms/ThemeButton';\nimport TableSearchEquipment from './FormDelivery/TableSearchEquipment';\nimport ToInstituteFrom from './FormDelivery/ToInstituteFrom';\nimport PersonTransportationForm from './FormDelivery/PersonTransportationForm';\nimport { saveDelivery } from '../../modelServices/deliveryOrderService';\nimport DeliveryFormInfo from './DeliveryFormInfo';\nimport EquipmentDetailDelivery from './FormDelivery/EquipmentDetailDelivery';\nimport { updateManyEquipmentRequest } from '../../modelServices/equipamentoService';\n\n\nconst useStyle = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  titlePaper: {\n    fontWeight: 'bold',\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nconst FormDeliveryOrder = (props) => {\n  const classes = useStyle();\n\n  const { serviceOrders, realodData } = props;\n\n  const [formModel, setFormModel] = useState({});\n  const [servicesOrdersEquipments, setServicesOrdersEquipments] = useState([]);\n\n  const updateForm = (value) => {\n    const form = value;\n    if (Object.keys(value)[0] === 'equipamentos') {\n      form.equipamentos = value.equipamentos.map((item) => ({\n        ...item,\n        equipamento: item.equipamento[0],\n      }));\n      setServicesOrdersEquipments(form.equipamentos);\n    }\n    setFormModel(Object.assign(formModel, value));\n  };\n\n  const updateEquipment = (doc, index) => {\n    const docs = servicesOrdersEquipments.map((item) => {\n      const order = item;\n      if ((item._id.$oid || item._id) === index) {\n        order.equipamento = { ...item.equipamento, ...doc };\n      }\n      return order;\n    });\n\n    setServicesOrdersEquipments(docs);\n    setFormModel({ ...formModel, equipamentos: docs });\n  };\n\n  const updateAccessories = (value, _id) => {\n    const doc = {};\n    doc[_id] = value;\n    setFormModel({\n      ...formModel,\n      acessorios: { ...formModel.acessorios, ...doc },\n    });\n  };\n\n  const dataEntrega = `${formModel.data_entrega} ${formModel.hora_entrega}:00`;\n  const saveNewDeliveryOrder = () => {\n    const doc = {\n      ...formModel,\n      tipo: 'entregue',\n      data_entrega: moment(new Date(dataEntrega)).tz('America/Fortaleza'),\n      created_at: new Date(),\n      updated_at: new Date(),\n    };\n    delete (doc.hora_entrega);\n    doc.equipamentos_id = doc.equipamentos\n      .map((item) => (item.equipamento_id.$oid || item.equipamento_id));\n    updateManyEquipmentRequest(formModel.equipamentos.map((item) => item.equipamento))\n      .then(() => {\n        saveDelivery(doc)\n          .then(() => {\n            realodData();\n          });\n      });\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item xs=\"auto\">\n          <Typography variant=\"h5\">\n            <strong>\n              CADASTRO DE ORDEM DE ENTREGA DE EQUIPAMENTO\n            </strong>\n          </Typography>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <ThemeButton onClick={saveNewDeliveryOrder} startIcon={<SaveIcon />}>SALVAR</ThemeButton>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.titlePaper}>1. Informações</Typography>\n            <DeliveryFormInfo updateForm={updateForm} formModel={formModel} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.titlePaper}>\n              2. Busca do Equipamento\n            </Typography>\n            <TableSearchEquipment updateForm={updateForm} serviceOrders={serviceOrders} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.titlePaper}>\n              2.1 Detalhes dos Equipamentos\n            </Typography>\n            <EquipmentDetailDelivery\n              servicesOrdersEquipments={servicesOrdersEquipments}\n              formModel={formModel}\n              updateEquipment={updateEquipment}\n              updateAccessories={updateAccessories}\n            />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.titlePaper}>\n              3. Dados do Destinatário\n            </Typography>\n            <ToInstituteFrom updateForm={updateForm} formModel={formModel} />\n          </Paper>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\" className={classes.titlePaper}>\n              4. Dados do responsável pelo transporte\n            </Typography>\n            <PersonTransportationForm updateForm={updateForm} formModel={formModel} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nFormDeliveryOrder.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  realodData: PropTypes.func.isRequired,\n};\n\nexport default FormDeliveryOrder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport PrintIcon from '@material-ui/icons/Print';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment-timezone';\nimport ColorIconButton from '../_common/forms/ColorIconButton';\nimport { randomIndex } from '../../utils';\n\n\nconst useStyle = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(5),\n  },\n  cellDiv: {\n    maxHeight: '84px',\n    overflowY: 'auto',\n    overflowX: 'auto',\n  },\n}));\n\nconst ListDeliveryOrders = (props) => {\n  const classes = useStyle();\n  const { deliveryOrders } = props;\n  const history = useHistory();\n\n  const iconButton = {\n    icon: <PrintIcon />,\n  };\n\n  const headTable = [\n    { id: 'codigo', label: 'Código' },\n    { id: 'instituicao_destino', label: 'Unidade/Instituição de Destino' },\n    { id: 'cidade_destino', label: 'Cidade destino' },\n    { id: 'nome_responsavel_destino', label: 'Representante da Instituição' },\n    { id: 'nome_responsavel_transporte', label: 'Reponsável pelo Transporte' },\n    { id: 'contato_responsavel_transporte', label: 'Contato do Transporte' },\n    { id: 'equipamentos_id', label: 'Equipamentos, Nº Série' },\n    { id: 'data_entrega', label: 'Data da Entrega' },\n  ];\n\n  const openPrint = (item) => {\n    history.push({\n      pathname: '/entrega-impressao',\n      state: {\n        data: item,\n      },\n    }, [item]);\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12}><Typography variant=\"h5\">Lista de Entregas</Typography></Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headTable.map((item) => <TableCell key={randomIndex()}>{item.label}</TableCell>)}\n                <TableCell>Ações</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {deliveryOrders.map((data) => (\n                <TableRow key={randomIndex()}>\n                  {headTable.map((head) => {\n                    if (head.id === 'data_entrega') {\n                      return (\n                        <TableCell key={randomIndex()}>\n                          {moment(new Date(data[head.id].$date)).tz('America/Fortaleza').format('DD/MM/YYYY HH:mm')}\n                        </TableCell>\n                      );\n                    }\n\n                    if (head.id === 'equipamentos_id') {\n                      return (\n                        <TableCell key={randomIndex()}>\n                          <div className={classes.cellDiv}>\n                            {data.equipamentos.map((equipamento) => (\n                              <Typography key={randomIndex()}>\n                                {equipamento.numero_de_serie}\n                              </Typography>\n                            ))}\n                          </div>\n                        </TableCell>\n                      );\n                    }\n\n                    return (\n                      <TableCell key={randomIndex()}>{data[head.id]}</TableCell>\n                    );\n                  })}\n                  <TableCell>\n                    <ColorIconButton\n                      item={data}\n                      name=\"Abrir Impressão\"\n                      action={openPrint}\n                      icon={iconButton}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n};\n\nListDeliveryOrders.propTypes = {\n  deliveryOrders: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ListDeliveryOrders;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Tab,\n  Tabs,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabPanel from '../_common/components/TabPanel';\nimport FormDeliveryOrder from './FormDeliveryOrder';\nimport ListDeliveryOrders from './ListDeliveryOrders';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  titleList: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  containerBottom: {\n    paddingBottom: theme.spacing(6),\n  },\n}));\n\nconst IndexDiagnosis = (props) => {\n  const classes = useStyles();\n\n  const {\n    serviceOrders,\n    deliveryOrders,\n    realodData,\n  } = props;\n\n  const [tabValue, setTabValue] = useState(0);\n\n  function changeTab(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  return (\n    <>\n      <Container>\n        <Grid container className={classes.titleList}>\n          <Grid item xs=\"auto\">\n            <Tabs\n              value={tabValue}\n              onChange={changeTab}\n              aria-label=\"Abas de listagens de ordens de serviços\"\n              centered\n            >\n              <Tab label=\"Formulário de entrega\" aria-controls=\"lista-os-entrega\" />\n              <Tab label=\"Lista de entregas\" aria-controls=\"lista-equipamentos-entregas\" />\n            </Tabs>\n          </Grid>\n        </Grid>\n        <TabPanel value={tabValue} index={0}>\n          <FormDeliveryOrder realodData={realodData} serviceOrders={serviceOrders} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <ListDeliveryOrders deliveryOrders={deliveryOrders} />\n        </TabPanel>\n      </Container>\n    </>\n  );\n};\n\nIndexDiagnosis.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n  deliveryOrders: PropTypes.instanceOf(Array).isRequired,\n  realodData: PropTypes.func.isRequired,\n};\n\nexport default IndexDiagnosis;\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport Layout from '../_layout/Layout';\nimport DeliveryPage from './DeliveryPage';\nimport { getAllServiceOrder } from '../../modelServices/serviceOrderService';\nimport LoadingBar from '../_common/components/LoadingBar';\nimport { getAllDeliveryOrders } from '../../modelServices/deliveryOrderService';\n\n\nconst IndexDelivery = () => {\n  const [deliveryOrders, setDeliveryOrders] = useState([]);\n  const [serviceOrders, setServiceOrders] = useState([]);\n  const [loadingData, setLoadingData] = useState(true);\n  const [progressLoad, setProgressLoad] = useState(0);\n\n  const getData = async () => {\n    if (loadingData) {\n      setProgressLoad(30);\n      const serviceOrdersResult = await getAllServiceOrder();\n      setProgressLoad(30 + progressLoad);\n      const deliveryOrdersResult = await getAllDeliveryOrders();\n      setDeliveryOrders(deliveryOrdersResult.slice());\n      setServiceOrders(\n        serviceOrdersResult.slice()\n          .filter((item) => item.equipamento && item.equipamento.length > 0\n            && !deliveryOrdersResult\n              .find((delivery) => {\n                const numSerie = item.equipamento[0].numero_de_serie;\n                return delivery.equipamentos && delivery.equipamentos.length > 0\n                  && delivery.equipamentos.find((equip) => equip.numero_de_serie === numSerie);\n              })),\n      );\n      setProgressLoad(100);\n      setLoadingData(false);\n    }\n  };\n\n  const handleEffects = () => {\n    setLoadingData(true);\n    getData();\n  };\n\n  useEffect(handleEffects, []);\n\n  const realodData = () => {\n    window.location.reload();\n  };\n\n  if (loadingData) {\n    return <LoadingBar progress={progressLoad} />;\n  }\n\n  return (\n    <>\n      <Layout>\n        <DeliveryPage\n          deliveryOrders={deliveryOrders}\n          serviceOrders={serviceOrders}\n          realodData={realodData}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport default IndexDelivery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateCalibration } from '../../modelServices/calibragemService';\n\n\nconst FormStatusCalibration = (props) => {\n  const { serviceOrder } = props;\n\n  function saveCalibration(value, name) {\n    const doc = {};\n    doc[name] = value;\n    updateCalibration(serviceOrder._id.$oid || serviceOrder._id, doc);\n    return true;\n  }\n\n  return (\n    <>\n      <TextField\n        name=\"status\"\n        onChange={(event) => saveCalibration(event.target.value, event.target.name)}\n        defaultValue={serviceOrder.calibragem.status}\n        select\n        fullWidth\n      >\n        <MenuItem value=\"descalibrado\">Descalibrado</MenuItem>\n        <MenuItem value=\"calibrado\">Calibrado</MenuItem>\n      </TextField>\n    </>\n  );\n};\n\nFormStatusCalibration.propTypes = {\n  serviceOrder: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default FormStatusCalibration;\n","import api from '../services/api';\n\n\nexport const getAllCalibration = () => api.get('api/calibragem')\n  .then((result) => result.data);\n\nexport const updateCalibration = (_id, calibration) => api.post(\n  'api/calibragem',\n  {\n    _id,\n    status: calibration.status === 'descalibrado'\n      ? 'diagnostico'\n      : 'calibragem',\n    calibragem: calibration,\n    updated_at: new Date(),\n  },\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Paper from '@material-ui/core/Paper';\nimport FormStatusCalibration from './FormStatusCalibration';\nimport { randomIndex } from '../../utils';\n\n\nconst ListServiceOrderDiagnosisCalibration = (props) => {\n  const { serviceOrders } = props;\n\n  const headTable = [\n    { id: 'numero_ordem_servico', label: 'Ordem de Serviço' },\n    { id: 'numero_de_serie', label: 'Número de Série' },\n    { id: 'marca', label: 'Marca' },\n    { id: 'modelo', label: 'Modelo' },\n    { id: 'nome_instituicao_origem', label: 'Origem' },\n    { id: 'calibragem', label: 'Calibragem' },\n    { id: 'created_at', label: 'Data de criação' },\n  ];\n\n  return (\n    <>\n      <Paper>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headTable.map((head) => (\n                  <TableCell key={head.label}>{head.label}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {serviceOrders.map((serviceOrder) => (\n                <TableRow key={randomIndex()}>\n                  {headTable.map((head) => {\n                    const randIndx = randomIndex();\n                    let text = serviceOrder[head.id];\n\n                    if (head.id === 'created_at') {\n                      text = moment(serviceOrder[head.id]).format('DD/MM/YYYY');\n                    }\n\n                    if (['numero_de_serie', 'marca', 'modelo', 'nome_instituicao_origem'].indexOf(head.id) >= 0) {\n                      text = serviceOrder.equipamento\n                        ? serviceOrder.equipamento[0][head.id]\n                        : '';\n                    }\n\n                    if (head.id === 'calibragem') {\n                      return (\n                        <TableCell key={randIndx}>\n                          <FormStatusCalibration serviceOrder={serviceOrder} />\n                        </TableCell>\n                      );\n                    }\n\n                    return (\n                      <TableCell key={randIndx}>\n                        {text}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n};\n\nListServiceOrderDiagnosisCalibration.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default ListServiceOrderDiagnosisCalibration;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Tab,\n  Tabs,\n} from '@material-ui/core';\nimport TabPanel from '../_common/components/TabPanel';\nimport ListServiceOrderDiagnosisCalibration from './ListServiceOrderDiagnosisCalibration';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  titleList: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  containerBottom: {\n    paddingBottom: theme.spacing(6),\n  },\n}));\n\nconst CalibrationPage = (props) => {\n  const classes = useStyles();\n\n  const { serviceOrders } = props;\n\n  const [tabValue, setTabValue] = useState(0);\n\n  function changeTab(event, newValue) {\n    setTabValue(newValue);\n  }\n\n  return (\n    <>\n      <Container className={classes.containerBottom}>\n        <Grid container className={classes.titleList}>\n          <Grid item>\n            <Tabs\n              value={tabValue}\n              onChange={changeTab}\n              variant=\"fullWidth\"\n              aria-label=\"Abas de listagens de ordens de serviços\"\n              centered\n            >\n              <Tab\n                label=\"Ordens de serviço para calibragem\"\n                aria-controls=\"lista-items-quantidade\"\n              />\n            </Tabs>\n          </Grid>\n        </Grid>\n        <TabPanel value={tabValue} index={0}>\n          <ListServiceOrderDiagnosisCalibration\n            serviceOrders={serviceOrders}\n          />\n        </TabPanel>\n      </Container>\n    </>\n  );\n};\n\nCalibrationPage.defaultProps = {\n  serviceOrders: [],\n};\n\nCalibrationPage.propTypes = {\n  serviceOrders: PropTypes.instanceOf(Array),\n};\n\nexport default CalibrationPage;\n","import api from '../services/api';\n\n\nconst getAllDiagnosis = () => api.get('api/diagnosticos')\n  .then((result) => result.data);\n\nexport default getAllDiagnosis();\n","import React, { useState } from 'react';\nimport LoadingBar from '../_common/components/LoadingBar';\nimport { ServiceOrder } from '../../models/serviceOrder';\nimport CalibrationPage from './CalibrationPage';\nimport Layout from '../_layout/Layout';\nimport getAllDiagnosis from '../../modelServices/diagnosisService';\nimport { getAllCalibration } from '../../modelServices/calibragemService';\n\n\nexport default function IndexCalibration() {\n  const [serviceOrders, setServiceOrder] = useState([]);\n  const [requestBlock, setRequestBlock] = useState(false);\n  const [loadingData, setLoadingData] = useState(true);\n  const [progress, setProgress] = useState(0);\n\n  function getData() {\n    setLoadingData(true);\n    setProgress(40);\n    getAllDiagnosis\n      .then((orderDiagnosis) => {\n        setProgress(80);\n        getAllCalibration()\n          .then((orderCalibrated) => {\n            setServiceOrder([\n              ...orderDiagnosis.map((item) => ({\n                ...ServiceOrder(item),\n                ...item,\n                equipamento: item.equipamento,\n              })) || [],\n              ...orderCalibrated.map((item) => ({\n                ...ServiceOrder(item),\n                equipamento: item.equipamento,\n              })) || [],\n            ].sort((a, b) => a.created_at.$date - b.created_at.$date));\n          });\n      })\n      .finally(() => {\n        setProgress(100);\n        setLoadingData(false);\n      });\n  }\n\n  if (!requestBlock) {\n    setRequestBlock(true);\n    getData();\n  }\n\n  async function reloadData() {\n    await setRequestBlock(false);\n  }\n\n  if (loadingData) {\n    return <LoadingBar progress={progress} />;\n  }\n\n  return (\n    <>\n      <Layout>\n        <CalibrationPage serviceOrders={serviceOrders} reloadData={reloadData} />\n      </Layout>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport grey from '@material-ui/core/colors/grey';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useClass = makeStyles(() => ({\n  titulo: {\n    color: grey[500],\n    fontSize: '10pt',\n  },\n  texto: {\n    color: grey[900],\n    fontSize: '12pt',\n  },\n}));\n\nconst CampoConteudo = (props) => {\n  const classes = useClass();\n  const {\n    titulo,\n    texto,\n  } = props;\n  return (\n    <div>\n      <Typography className={classes.titulo}>{titulo}</Typography>\n      <Typography className={classes.texto}>{texto}</Typography>\n    </div>\n  );\n};\n\nCampoConteudo.defaultProps = {\n  titulo: '---',\n  texto: '---',\n};\n\nCampoConteudo.propTypes = {\n  titulo: PropTypes.string,\n  texto: PropTypes.string,\n};\n\nexport default CampoConteudo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport CampoConteudo from './CampoConteudo';\n\n\nconst DadosEquipamento = (props) => {\n  const { equipamento } = props;\n\n  if (!equipamento) {\n    return (<></>);\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Equipamento\"\n            texto=\"Ventilador Mecânico\"\n          />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Número de série:\"\n            texto={equipamento.numero_de_serie}\n          />\n        </div>\n      </Grid>\n\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Origem\"\n            texto={equipamento.nome_instituicao_origem}\n          />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Nº Patrimônio\"\n            texto={equipamento.numero_do_patrimonio}\n          />\n        </div>\n      </Grid>\n\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Cidade de Origem\"\n            texto={equipamento.municipio_origem}\n          />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Marca\"\n            texto={equipamento.marca}\n          />\n        </div>\n      </Grid>\n\n      <Grid item xs={6}>\n        <div className=\"header-content\">\n          <CampoConteudo\n            titulo=\"Tipo de equipamento\"\n            texto={equipamento.tipo}\n          />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className=\"header-content model-fab\">\n          <CampoConteudo\n            titulo=\"Modelo\"\n            texto={equipamento.modelo}\n          />\n          <CampoConteudo\n            titulo=\"Fabricante\"\n            texto={equipamento.fabricante}\n          />\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nDadosEquipamento.defaultProps = {\n  equipamento: {},\n};\n\nDadosEquipamento.propTypes = {\n  equipamento: PropTypes.shape({\n    numero_de_serie: PropTypes.string,\n    nome_instituicao_origem: PropTypes.string,\n    numero_do_patrimonio: PropTypes.string,\n    municipio_origem: PropTypes.string,\n    marca: PropTypes.string,\n    tipo: PropTypes.string,\n    modelo: PropTypes.string,\n    fabricante: PropTypes.string,\n  }),\n};\n\nexport default DadosEquipamento;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport { grey } from '@material-ui/core/colors';\n\n\nconst greyColor = grey[300];\n\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: greyColor,\n    fontWeight: 'bolder',\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n    paddingTop: '3px',\n    paddingBottom: '3px',\n    // height: '10px',\n    textAlign: 'center',\n  },\n  body: {\n    fontSize: '12pt',\n  },\n}))(TableCell);\n\nconst StyledTd = withStyles(() => ({\n  body: {\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n    paddingTop: '3px',\n    paddingBottom: '3px',\n    // height: '10px',\n    fontSize: '12pt',\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n  },\n  quadro: {\n    border: 1,\n    borderColor: grey[900],\n    borderStyle: 'solid',\n  },\n});\n\nconst TabelaAcessorios = (props) => {\n  const classes = useStyles();\n\n  const {\n    equipamento,\n  } = props;\n\n  if (!equipamento) {\n    return (<></>);\n  }\n\n  const acessorios = equipamento.triagem.acessorios || [];\n  const rows = [...acessorios];\n\n  return (\n    <div className={classes.quadro}>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense customized table\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Descrição</StyledTableCell>\n              <StyledTableCell>Acompanha</StyledTableCell>\n              <StyledTableCell>Qtde</StyledTableCell>\n              <StyledTableCell>Estado de Conservação</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              rows.map((row) => (\n                <TableRow key={`${row.descricao}_${new Date()}`}>\n                  <StyledTd\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.descricao}\n                  </StyledTd>\n                  <StyledTd>{row.acompanha === true ? 'Sim' : '-'}</StyledTd>\n                  <StyledTd>{row.quantidade || ''}</StyledTd>\n                  <StyledTd>{row.estado_de_conservacao || ''}</StyledTd>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nTabelaAcessorios.propTypes = {\n  equipamento: PropTypes.shape({\n    triagem: PropTypes.shape({\n      acessorios: PropTypes.instanceOf(Array),\n    }),\n  }).isRequired,\n};\n\nexport default TabelaAcessorios;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\n\nconst useStyles = makeStyles(() => ({\n  quadro: {\n    padding: '5px',\n    border: 1,\n    borderStyle: 'solid',\n    borderColor: grey[900],\n  },\n  quadroInterno: {\n    borderColor: grey[300],\n  },\n}));\n\nconst QuadroDiagnosticos = (props) => {\n  const classes = useStyles();\n\n  const { numberRows } = props;\n\n  const rows = [];\n  for (let i = 0; i < numberRows; i += 1) {\n    rows.push(i);\n  }\n\n  return (\n    <div className={classes.quadro}>\n      <div className={`${classes.quadro} ${classes.quadroInterno}`}>\n        <TableContainer>\n          <Table>\n            <TableBody>\n              {rows.map((i) => (\n                <TableRow key={i}>\n                  <TableCell />\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n\n  );\n};\n\nQuadroDiagnosticos.propTypes = {\n  numberRows: PropTypes.number.isRequired,\n};\n\nexport default QuadroDiagnosticos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { grey } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles(() => ({\n  quadro: {\n    padding: '5px',\n    border: 1,\n    borderStyle: 'solid',\n    borderColor: grey[900],\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n}));\n\nconst CheckBoxDiagnostic = (props) => {\n  const classes = useStyles();\n  const { items } = props;\n  return (\n    <>\n      <div className={classes.quadro}>\n        <Grid container>\n          {items.map((item) => (\n            <Grid\n              key={item}\n              item\n              xs={12}\n            >\n\n              <FormControlLabel\n                control={<Checkbox name=\"checkedC\" />}\n                label={item}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nCheckBoxDiagnostic.defaultProps = {\n  items: [],\n};\n\nCheckBoxDiagnostic.propTypes = {\n  items: PropTypes.instanceOf(Array),\n};\n\nexport default CheckBoxDiagnostic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment-timezone';\n\n\nconst useStyles = makeStyles(() => ({\n  planodefundo: {\n    backgroundColor: grey[900],\n    padding: '1rem',\n    color: 'white',\n    fontWeight: 'bolder',\n    textTransform: 'capitalize',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n  texto: {\n    fontSize: '12pt',\n  },\n  osTexto: {\n    fontSize: '14pt',\n  },\n  titleTexto: {\n    fontSize: '14pt',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n  subTitleTexto: {\n    fontSize: '20pt',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    lineHeight: '50px',\n  },\n  caixaCentral: {\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    height: '100%',\n  },\n  bordarCaixaCental: {\n    borderTop: 0,\n    borderBottom: 0,\n    borderLeft: 2,\n    borderRight: 1,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    height: '100%',\n  },\n  osNumero: {\n    fontSize: '26pt',\n    fontWeight: 'bolder',\n  },\n}));\n\nconst formatDate = (date) => [\n  moment(date).tz('America/Fortaleza').format('L'),\n  moment(date).tz('America/Fortaleza').format('H:m:s'),\n];\n\nconst Cabecalho = (props) => {\n  const classes = useStyles();\n  const {\n    datahora,\n    numero,\n    subtitle,\n    pagina,\n  } = props;\n  const date = formatDate(new Date(datahora));\n\n  return (\n    <div className={classes.planodefundo}>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid\n          item\n          xs=\"auto\"\n        >\n          <Typography\n            className={classes.osTexto}\n            align=\"right\"\n          >\n            <strong>OS N º:</strong>\n          </Typography>\n          <Typography\n            className={classes.osNumero}\n            align=\"right\"\n          >\n            {numero === '' ? '---' : numero}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={true}>\n          <div className={classes.caixaCentral}>\n            <Typography\n              align=\"center\"\n              className={`${classes.titleTexto} ${classes.bordarCaixaCental}`}\n            >\n              <strong>CENTRAL DE VENTILADORES</strong>\n            </Typography>\n            <Typography\n              align=\"center\"\n              className={`${classes.subTitleTexto} ${classes.bordarCaixaCental}`}\n            >\n              <strong>{subtitle}</strong>\n            </Typography>\n          </div>\n        </Grid>\n\n        <Grid item xs=\"auto\">\n          <Typography\n            className={classes.texto}\n            align=\"left\"\n          >\n            <strong>{date[0]}</strong>\n          </Typography>\n          <Typography\n            className={classes.texto}\n            align=\"left\"\n          >\n            <strong>{date[1]}</strong>\n          </Typography>\n          <Typography\n            className={classes.texto}\n            align=\"left\"\n          >\n            <strong>Página:</strong>\n            <strong>{pagina}</strong>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nCabecalho.defaultProps = {\n  datahora: new Date(),\n  numero: '',\n  subtitle: '',\n  pagina: '',\n};\n\nCabecalho.propTypes = {\n  datahora: PropTypes.instanceOf(Date),\n  numero: PropTypes.string,\n  subtitle: PropTypes.string,\n  pagina: PropTypes.string,\n};\n\nexport default Cabecalho;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\n\nconst useClass = makeStyles(() => ({\n  texto: {\n    color: grey[900],\n    fontSize: '12pt',\n    fontWeight: 'bold',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n  },\n}));\n\nconst SubtituloPagina = (props) => {\n  const classes = useClass();\n  const {\n    texto,\n  } = props;\n\n  return (\n    <Typography className={classes.texto}>\n      <strong>{texto}</strong>\n    </Typography>\n  );\n};\n\nSubtituloPagina.propTypes = {\n  texto: PropTypes.string.isRequired,\n};\n\nexport default SubtituloPagina;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n\nconst useStyle = makeStyles(() => ({\n  rodape: {\n    width: '100%',\n    fontSize: '20px',\n    marginTop: '5px',\n  },\n}));\n\nconst Rodape = (props) => {\n  const classes = useStyle();\n  const {\n    numero,\n    pagina,\n  } = props;\n  return (\n    <div className={classes.rodape}>\n      <Grid container justify=\"space-between\">\n        <Grid item xs=\"auto\">\n          <span>OS Nº: </span>\n          <strong>{numero || '---'}</strong>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <span>Página: </span>\n          <strong>{pagina || '--'}</strong>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nRodape.propTypes = {\n  numero: PropTypes.string.isRequired,\n  pagina: PropTypes.string.isRequired,\n};\n\nexport default Rodape;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DadosEquipamento from './DadosEquipamento';\nimport TabelaAcessorios from './TabelaAcessorios';\nimport QuadroDiagnosticos from './QuadroDiagnostico';\nimport CheckBoxDiagnostic from './CheckBoxDiagnostic';\nimport Cabecalho from './Cabecalho';\nimport SubtituloPagina from './SubtituloPagina';\nimport Rodape from './Rodape';\n\n\nconst getDate = (obj) => new Date(obj.$date || obj);\n\nconst OsPrint = (props) => {\n  const { location } = props;\n  const { data } = location.state;\n\n  const checkBoxClinic = ['Circuito duplo/UTI/COVID-19', 'Circuito único/Enfermaria/Não COVID-19', 'Transporte'];\n  const checkBoxTechnical = ['Verificação/Análise', 'Aguardando', 'Liberado', 'Sem reparo'];\n\n  return (\n    <div className=\"portaint-print page-container\">\n      {\n        data.map((row) => (\n          <div key={row.numero_ordem_servico}>\n            <div className=\"page\">\n              <div className=\"page-content\">\n                <Cabecalho\n                  pagina=\"01\"\n                  subtitle=\"Triagem do equipamento\"\n                  numero={row.numero_ordem_servico}\n                  datahora={getDate(row.created_at)}\n                />\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"1. Cadastro de Equipamento\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"border-black\">\n                  <DadosEquipamento equipamento={row.equipamento[0]} />\n                </div>\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"2. Relação de Material / Acessórios Entregues\" />\n              </div>\n              <div className=\"page-content\">\n                <TabelaAcessorios equipamento={row} />\n              </div>\n              <div className=\"page-content\">\n                <Rodape\n                  numero={row.numero_ordem_servico}\n                  pagina=\"01\"\n                />\n              </div>\n            </div>\n\n\n            <div className=\"page\">\n              <div className=\"page-content\">\n                <Cabecalho\n                  pagina=\"02\"\n                  subtitle=\"Diagnóstico do equipamento\"\n                  numero={row.numero_ordem_servico}\n                  datahora={getDate(row.created_at)}\n                />\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"1. Classificação do ventilador\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <CheckBoxDiagnostic items={checkBoxClinic} />\n                </div>\n              </div>\n\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"2. Resultado do Diagnóstico Clínico\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <QuadroDiagnosticos numberRows={5} />\n                </div>\n              </div>\n\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"3. Acessório que necessita\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <QuadroDiagnosticos numberRows={10} />\n                </div>\n              </div>\n\n              <div className=\"page-content\">\n                <Rodape\n                  numero={row.numero_ordem_servico}\n                  pagina=\"02\"\n                />\n              </div>\n            </div>\n\n            <div className=\"page\">\n              <div className=\"page-content\">\n                <Cabecalho\n                  pagina=\"03\"\n                  subtitle=\"Diagnóstico do equipamento\"\n                  numero={row.numero_ordem_servico}\n                  datahora={getDate(row.created_at)}\n                />\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"1. Resultado do Diagnóstico Técnico\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <QuadroDiagnosticos numberRows={5} />\n                </div>\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"2. Demanda por Serviço\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <QuadroDiagnosticos numberRows={5} />\n                </div>\n              </div>\n              <div className=\"page-content\">\n                <SubtituloPagina texto=\"3. Demanda por Insumo\" />\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <QuadroDiagnosticos numberRows={5} />\n                </div>\n              </div>\n              <div className=\"page-content\">\n                <div className=\"page-content\">\n                  <CheckBoxDiagnostic items={checkBoxTechnical} />\n                </div>\n              </div>\n              <div className=\"page-content\">\n                <Rodape\n                  numero={row.numero_ordem_servico}\n                  pagina=\"03\"\n                />\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nOsPrint.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      data: {},\n    }),\n  }).isRequired,\n};\n\nexport default OsPrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment-timezone';\n\n\nconst formatDate = (date) => [\n  moment(date).tz('America/Fortaleza').format('L'),\n  moment(date).tz('America/Fortaleza').format('H:m'),\n];\n\nconst useStyles = makeStyles(() => ({\n  planodefundo: {\n    backgroundColor: grey[900],\n    padding: '1rem',\n    color: 'white',\n    fontWeight: 'bolder',\n    textTransform: 'capitalize',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n  texto: {\n    fontSize: '12pt',\n  },\n  osTexto: {\n    fontSize: '14pt',\n  },\n  titleTexto: {\n    fontSize: '14pt',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n  subTitleTexto: {\n    fontSize: '20pt',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    lineHeight: '50px',\n  },\n  caixaCentral: {\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    height: '100%',\n  },\n  bordarCaixaCental: {\n    borderTop: 0,\n    borderBottom: 0,\n    borderLeft: 2,\n    borderRight: 1,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    height: '100%',\n  },\n  osNumero: {\n    fontSize: '26pt',\n    fontWeight: 'bolder',\n  },\n}));\n\nconst HeaderPrint = (props) => {\n  const classes = useStyles();\n\n  const {\n    number,\n    subTitle,\n    pageNumber,\n    dateTime,\n    typeAbbreviation,\n  } = props;\n\n  const date = formatDate(new Date(dateTime || new Date()));\n  return (\n    <div className={classes.planodefundo}>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item xs=\"auto\">\n          <Typography className={classes.osTexto} align=\"right\">\n            <strong>\n              {typeAbbreviation || 'OS'}\n              N º:\n            </strong>\n          </Typography>\n          <Typography className={classes.osNumero} align=\"right\">\n            {number === '' ? '---' : number}\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <div className={classes.caixaCentral}>\n            <Typography\n              align=\"center\"\n              className={`${classes.titleTexto} ${classes.bordarCaixaCental}`}\n            >\n              <strong>CENTRAL DE VENTILADORES</strong>\n            </Typography>\n            <Typography\n              align=\"center\"\n              className={`${classes.subTitleTexto} ${classes.bordarCaixaCental}`}\n            >\n              <strong>{subTitle}</strong>\n            </Typography>\n          </div>\n        </Grid>\n\n        <Grid item xs=\"auto\">\n          <Typography className={classes.texto} align=\"left\">\n            <strong>{date[0]}</strong>\n          </Typography>\n          <Typography className={classes.texto} align=\"left\">\n            <strong>{date[1]}</strong>\n          </Typography>\n          <Typography className={classes.texto} align=\"left\">\n            <strong>\n              Página:\n              {pageNumber}\n            </strong>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeaderPrint.propTypes = {\n  number: PropTypes.string.isRequired,\n  subTitle: PropTypes.string.isRequired,\n  pageNumber: PropTypes.string.isRequired,\n  dateTime: PropTypes.instanceOf(Date).isRequired,\n  typeAbbreviation: PropTypes.string.isRequired,\n};\n\nexport default HeaderPrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst PagePrint = (props) => {\n  const { children } = props;\n  return (\n    <div className={'page'}>\n      <div className={'page-content'}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nPagePrint.propTypes = {\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default PagePrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\n\nconst useClass = makeStyles(() => ({\n  texto: {\n    color: grey[900],\n    fontSize: '14pt',\n    fontWeight: 'bold',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n  },\n}));\nconst TopicPrint = (props) => {\n  const { text } = props;\n  const classes = useClass();\n  return (\n    <Typography className={classes.texto}>\n      <strong>{text}</strong>\n    </Typography>\n  );\n};\n\nTopicPrint.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default TopicPrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { grey } from '@material-ui/core/colors';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\n\n\nconst greyColor = grey[300];\n\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: greyColor,\n    fontWeight: 'bolder',\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n    paddingTop: '5px',\n    paddingBottom: '5px',\n    height: '24px',\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTd = withStyles(() => ({\n  body: {\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n    paddingTop: '5px',\n    paddingBottom: '5px',\n    height: '24px',\n    fontSize: 12,\n    wordWrap: 'break-word',\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    border: 1,\n    borderColor: greyColor,\n    borderStyle: 'solid',\n  },\n  quadro: {\n    border: 1,\n    borderColor: grey[900],\n    borderStyle: 'solid',\n    padding: '5px',\n  },\n});\n\nconst TablePrint = (props) => {\n  const classes = useStyles();\n\n  const { headerTable, bodyData } = props;\n\n  return (\n    <div className={classes.quadro}>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense customized table\"\n        >\n          <TableHead>\n            <TableRow>\n              {\n                headerTable.map((item) => (\n                  <StyledTableCell key={item.name}>{item.name}</StyledTableCell>\n                ))\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              bodyData.map((row) => (\n                <TableRow key={Math.round(Math.random() * 100000)}>\n                  {headerTable.map((head) => (\n                    <StyledTd key={Math.round(Math.random() * 100000)}>\n                      {row[head.id]}\n                    </StyledTd>\n                  ))}\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nTablePrint.propTypes = {\n  headerTable: PropTypes.instanceOf(Array).isRequired,\n  bodyData: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default TablePrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HeaderPrint from '../../pages/_common/print/HeaderPrint';\nimport PagePrint from '../../pages/_common/print/PagePrint';\nimport TopicPrint from '../../pages/_common/print/TopicPrint';\nimport TablePrint from '../../pages/_common/print/TablePrint';\n\n\nconst IndexOrderPrint = (props) => {\n  const { location: { state: { data } } = {} } = props;\n\n  const headerTable = [\n    { id: 'tipo', name: 'Tipo' },\n    { id: 'nome', name: 'Nome do Item' },\n    { id: 'descricao', name: 'Descrição do Item' },\n    { id: 'unidade_medida', name: 'Unidade' },\n    { id: 'quantidade', name: 'Qtde' },\n    { id: 'fabricante', name: 'Frabricante' },\n    { id: 'codigo', name: 'Código do Item' },\n  ];\n\n  const bodyData = data.itens\n    .map((item) => Object.assign(item, { tipo: item.tipo === 'pecas' ? 'Peça' : 'Acessório' }));\n\n  return (\n    <div className=\"landscape-print page-container\">\n      <PagePrint>\n        <HeaderPrint\n          typeAbbreviation=\"OC\"\n          number={data.numero_ordem_compra}\n          subTitle=\"ORDEM DE COMPRA\"\n          pageNumber=\"01\"\n        />\n        <TopicPrint text=\"1. Descrição material\" />\n        <TablePrint\n          headerTable={headerTable}\n          bodyData={bodyData}\n          dateTime={new Date()}\n        />\n      </PagePrint>\n    </div>\n  );\n};\n\nIndexOrderPrint.defaultProps = {\n  location: {},\n};\n\nIndexOrderPrint.propTypes = {\n  location: PropTypes.shape({}),\n};\n\nexport default IndexOrderPrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\n\n\nconst FooterPrint = (props) => {\n  const {\n    text,\n    number,\n    pageNumber,\n  } = props;\n\n  return (\n    <>\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <span>{text}</span>\n          :\n          <strong>{number || '---'}</strong>\n        </Grid>\n        <Grid item>\n          <span>Página: </span>\n          <strong>{pageNumber || '--'}</strong>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nFooterPrint.propTypes = {\n  text: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  pageNumber: PropTypes.string.isRequired,\n};\n\nexport default FooterPrint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport grey from '@material-ui/core/colors/grey';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PagePrint from '../../pages/_common/print/PagePrint';\nimport HeaderPrint from '../../pages/_common/print/HeaderPrint';\nimport TopicPrint from '../../pages/_common/print/TopicPrint';\nimport TablePrint from '../../pages/_common/print/TablePrint';\nimport FooterPrint from '../../pages/_common/print/FooterPrint';\n\n\nconst useStyle = makeStyles((theme) => ({\n  borderedFrame: {\n    padding: theme.spacing(1),\n    borderColor: grey[400],\n    border: '1px solid',\n  },\n  signature: {\n    textAlign: 'center',\n  },\n  containerSignature: {\n    marginTop: theme.spacing(3),\n  },\n  footerPrint: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst IndexDeliveryPrint = (props) => {\n  moment.locale('pt-br');\n  const { location } = props;\n  const { state } = location;\n  const { data } = state;\n\n  const classes = useStyle();\n  const headerTable = [\n    { id: 'tipo', name: 'Equipamento' },\n    { id: 'marca', name: 'Marca' },\n    { id: 'modelo', name: 'Modelo' },\n    { id: 'numero_de_serie', name: 'Nº de Série' },\n    { id: 'acessorios', name: 'Acessórios' },\n\n  ];\n  const bodyData = data.equipamentos.map((item) => {\n    const content = { ...item };\n    content.acessorios = data.acessorios && data.acessorios[item._id.$oid]\n      ? data.acessorios[item._id.$oid]\n        .map((acc) => `${acc.quantidade} - ${acc.descricao}`).join(', ')\n      : [];\n\n    return content;\n  });\n\n  return (\n    <div className=\"landscape-print page-container\">\n      <PagePrint>\n        <HeaderPrint\n          typeAbbreviation=\"OE\"\n          number={data.codigo}\n          dateTime={new Date(data.data_entrega.$date)}\n          subTitle=\"FORMULÁRIO PARA ENTREGA\"\n          pageNumber=\"01\"\n        />\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TopicPrint text=\"1. Descrição material\" />\n          </Grid>\n          <Grid item xs={12} className={classes.borderedFrame}>\n            <Typography>\n              O Governo do Estado do Ceará, através de sua Central de Ventiladores Mecânicos e\n              Equipamentos Respiratórios - CVMER, da Secretaria da Saúde do Ceará - SESA, denominada\n              simplemente CEDENTE, e o\n              {' '}\n              <strong>{data.instituicao_destino}</strong>\n              , inscrita no CNPJ\n              sob nº\n              {' '}\n              <strong>{data.cnpj_destino}</strong>\n              {' '}\n              com sede\n              à\n              {' '}\n              <strong>{data.endereco_destino}</strong>\n              , denominado simplesmente CESSIONÁRIO,\n              resolvem firmar o presente termo de cessão de uso de bens móveis, a título precário,\n              conforme discriminado abaixo:\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TopicPrint text=\"2. Dados dos Equipamentos\" />\n          </Grid>\n          <Grid item xs={12}>\n            <TablePrint\n              headerTable={headerTable}\n              bodyData={bodyData}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>\n              Os bens acima descritos deverão ser utilizados exclusivamente pela\n              CESSIONÁRIA.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Typography>\n                  Fortaleza,\n                  {moment().format('DD')}\n                  {' '}\n                  de\n                  {moment().format('MMMM')}\n                  {' '}\n                  de\n                  {moment().format('YYYY')}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={10}\n              className={classes.containerSignature}\n            >\n              <Grid item xs={4}>\n                <div style={{ width: '100%', borderBottom: '2px solid black' }} />\n                <Typography className={classes.signature}>Assinatura do Entregador</Typography>\n                <Typography className={classes.signature}>\n                  Gerente Administrativo da\n                  CVMER\n                </Typography>\n                <Typography className={classes.signature}>\n                  Maria Iracema Capistrano\n                  Bezerra\n                </Typography>\n                <Typography className={classes.signature}>Contato: (85) 3421-5309</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <div style={{ width: '100%', borderBottom: '2px solid black' }} />\n                <Typography className={classes.signature}>Assinatura do Destinatário</Typography>\n                <Typography className={classes.signature}>{data.instituicao_destino}</Typography>\n                <Typography className={classes.signature}>\n                  {data.nome_responsavel_destino}\n                </Typography>\n                <Typography className={classes.signature}>\n                  Contato:\n                  {data.contato_responsavel_destino}\n                </Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <div style={{ width: '100%', borderBottom: '2px solid black' }} />\n                <Typography className={classes.signature}>\n                  Assinatura do Responsável pelo\n                  Transporte\n                </Typography>\n                <Typography className={classes.signature}>{data.nome_responsavel_transporte || 'não informado'}</Typography>\n                <Typography className={classes.signature}>\n                  Contato:\n                  {data.contato_responsavel_transporte || 'não informado'}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} className={classes.footerPrint}>\n            <FooterPrint\n              text=\"OE\"\n              number={data.codigo}\n              pageNumber=\"01\"\n            />\n          </Grid>\n        </Grid>\n      </PagePrint>\n    </div>\n  );\n};\n\nIndexDeliveryPrint.propTypes = {\n  location: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default IndexDeliveryPrint;\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport IndexServiceOrder from './pages/SerrviceOrder/index';\nimport IndexFormDiagnosis from './pages/Diagnosis/DiagnosisForm/index';\nimport Screening from './pages/Screening/index';\nimport IndexDemand from './pages/Demand/index';\nimport Diagnosis from './pages/Diagnosis/index';\nimport Delivery from './pages/Delivery/index';\nimport Calibration from './pages/Calibration/index';\nimport OsPrint from './MakeFile/OsPrint/index';\nimport IndexOrderPrint from './MakeFile/OrderPrint/index';\nimport IndexDeliveryPrint from './MakeFile/DeliveryPrint/index';\n\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={IndexServiceOrder} />\n    <Route path=\"/ordens-servicos\" exact component={IndexServiceOrder} />\n    <Route path=\"/triagens\" exact component={Screening} />\n    <Route path=\"/novo-diagnostico\" exact component={IndexFormDiagnosis} />\n    <Route path=\"/diagnosticos\" exact component={Diagnosis} />\n    <Route path=\"/demandas\" exact component={IndexDemand} />\n    <Route path=\"/ordem-compra\" exact component={IndexOrderPrint} />\n    <Route path=\"/osprint\" component={OsPrint} />\n    <Route path=\"/entregas\" component={Delivery} />\n    <Route path=\"/entrega-impressao\" component={IndexDeliveryPrint} />\n    <Route path=\"/calibragem\" component={Calibration} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport './global.css';\nimport './pages/_common/print/print.css';\nimport './pages/_common/print/portraitCss.css';\nimport './pages/_common/print/landscapeCss.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './router';\n\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Router } from 'react-router';\nimport ReactDOM from 'react-dom';\n\nimport { createBrowserHistory } from 'history';\nimport App from './App';\n\n\nconst history = createBrowserHistory();\nReactDOM.render(<Router history={history}>\n  <App />\n                </Router>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}